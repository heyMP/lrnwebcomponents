{"version":3,"file":"app-editor-hax.umd.js","sources":["app-editor-hax.umd.js"],"sourcesContent":["import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport \"@lrnwebcomponents/h-a-x/h-a-x.js\";\n/**\n`app-editor-hax`\nstand alone editor intended for use in a larger application\nas the editor. It is like cms-hax in that it's prepackaged\nthe way HAX will be integrated but the connotation is that there\nis no edit state and that it is always editing effectively.\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n - app - an application desktop or mobile that's deployed this\n - editor - in this case HAX is the editor / authoring tool\n - hax - just to make sure we're aware that it's actually HAX based\n\n*/\nclass AppEditorHax extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          font-size: 16px;\n          box-sizing: content-box;\n        }\n      </style>\n      <h-a-x app-store$=\"[[appStoreConnection]]\"></h-a-x>\n    `;\n  }\n\n  static get tag() {\n    return \"app-editor-hax\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Establish the app store connection to pull in our JSON\n       */\n      appStoreConnection: {\n        type: Object\n      }\n    };\n  }\n\n  /**\n   * Basic save event to make targetting easier.\n   */\n  save() {\n    // convert the body area to content\n    let content = window.HaxStore.instance.activeHaxBody.haxToContent();\n    // fire event so apps can react correctly\n    this.dispatchEvent(\n      new CustomEvent(\"app-editor-hax-save\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: content\n      })\n    );\n  }\n\n  /**\n   * Basic import capability abstraction of hax body's import capabilities\n   */\n  import(html) {\n    // import the HTML blob to get going\n    window.HaxStore.instance.activeHaxBody.importContent(html);\n    // fire event just letting things know this happened\n    this.dispatchEvent(\n      new CustomEvent(\"app-editor-hax-import\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: true\n      })\n    );\n  }\n}\nwindow.customElements.define(AppEditorHax.tag, AppEditorHax);\nexport { AppEditorHax };\n"],"names":["AppEditorHax","PolymerElement","html","appStoreConnection","type","Object","content","window","HaxStore","instance","activeHaxBody","haxToContent","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","importContent","customElements","define","tag"],"mappings":"m6CAkBMA,gaAAqBC,+DAEhBC,8CAaA,0DAGA,CAILC,mBAAoB,CAClBC,KAAMC,iDAUNC,EAAUC,OAAOC,SAASC,SAASC,cAAcC,oBAEhDC,cACH,IAAIC,YAAY,sBAAuB,CACrCC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQX,oCAQPJ,GAELK,OAAOC,SAASC,SAASC,cAAcQ,cAAchB,QAEhDU,cACH,IAAIC,YAAY,wBAAyB,CACvCC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,QAAQ,0CAKhBV,OAAOY,eAAeC,OAAOpB,EAAaqB,IAAKrB"}