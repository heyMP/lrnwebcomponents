{"version":3,"file":"place-holder.umd.js","sources":["place-holder.umd.js"],"sourcesContent":["import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\n/**\n * `place-holder`\n * Placeholder for a piece of media in the future\n *\n * @demo demo/index.html\n *\n * @microcopy - the mental model for this element\n * - placeholder is a grey block on the page which can respond to drag and drop\n */\nclass PlaceHolder extends PolymerElement {\n  constructor() {\n    super();\n    import(\"@polymer/iron-icons/iron-icons.js\");\n    import(\"@polymer/iron-icons/editor-icons.js\");\n    import(\"@polymer/iron-icons/notification-icons.js\");\n    import(\"@polymer/iron-icons/av-icons.js\");\n    import(\"@polymer/iron-icons/device-icons.js\");\n    import(\"@polymer/iron-icons/image-icons.js\");\n    afterNextRender(this, function() {\n      this.HAXWiring = new HAXWiring();\n      this.HAXWiring.setup(PlaceHolder.haxProperties, PlaceHolder.tag, this);\n    });\n  }\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          border: none;\n          transition: 0.2s all linear;\n        }\n        :host([drag-over]) {\n          border: 4px dashed #2196f3;\n        }\n        .placeholder-inner {\n          text-align: center;\n          padding: 16px;\n          color: var(--simple-colors-default-theme-grey-11, #222222);\n          background-color: var(--simple-colors-default-theme-grey-2, #eeeeee);\n        }\n        iron-icon.placeholder-icon {\n          margin: 0 auto;\n          width: 50%;\n          height: 50%;\n          display: block;\n        }\n        .placeholder-text {\n          line-height: 24px;\n          font-size: 24px;\n          font-style: italic;\n        }\n      </style>\n      <div class=\"placeholder-inner\">\n        <iron-icon icon=\"[[iconFromType]]\" class=\"placeholder-icon\"></iron-icon>\n        <span class=\"placeholder-text\">[[calcText]]</span>\n      </div>\n    `;\n  }\n\n  static get tag() {\n    return \"place-holder\";\n  }\n\n  static get properties() {\n    return {\n      /**\n       * calculate an icon based on the type that was used\n       */\n      iconFromType: {\n        type: String,\n        computed: \"_getIconFromType(type, dragOver)\"\n      },\n      /**\n       * Text place holder for describing this place holder element.\n       */\n      text: {\n        type: String,\n        value: \"\"\n      },\n      /**\n       * Calculate text based on the type in the event we have no default.\n       */\n      calcText: {\n        type: String,\n        computed: \"_getCalcText(text, type, dragOver)\"\n      },\n      /**\n       * A media type to visualize and also bubble events off of.\n       */\n      type: {\n        type: String,\n        value: \"text\"\n      },\n      /**\n       * Bind dragging state to a variable so we can apply CSS.\n       */\n      dragOver: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * Fire an event for things to react to above us\n   */\n  fireReplaceEvent(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"place-holder-replace\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: this.type\n      })\n    );\n  }\n\n  /**\n   * Get the calculated text based on text being empty and type being set.\n   */\n  _getCalcText(text, type, dragOver) {\n    if (dragOver) {\n      return \"Upload file\";\n    } else if (text === \"\") {\n      return \"Place holder for \" + type + \".\";\n    } else {\n      return text;\n    }\n  }\n\n  /**\n   * Generate an icon based on the media type selected\n   * for the place holder.\n   */\n  _getIconFromType(type, dragOver) {\n    if (!dragOver) {\n      switch (type) {\n        case \"document\":\n          return \"editor:insert-drive-file\";\n          break;\n        case \"audio\":\n          return \"av:music-video\";\n          break;\n        case \"video\":\n          return \"notification:ondemand-video\";\n          break;\n        case \"image\":\n          return \"image:crop-original\";\n          break;\n        case \"math\":\n          return \"editor:functions\";\n          break;\n        case \"text\":\n        default:\n          return \"editor:format-align-left\";\n          break;\n      }\n    } else {\n      // we are dragging, ignore icon\n      return \"icons:file-upload\";\n    }\n  }\n  /**\n   * Attached to the DOM, now fire.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function() {\n      this.addEventListener(\"dragover\", function(e) {\n        this.dragOver = true;\n        e.preventDefault();\n        e.stopPropagation();\n        this.classList.add(\"dragover\");\n      });\n      this.addEventListener(\"dragleave\", function(e) {\n        this.dragOver = false;\n        e.preventDefault();\n        e.stopPropagation();\n        this.classList.remove(\"dragover\");\n      });\n      // self bind a drop event enough though something else\n      // will need to step in and do something with this.\n      // We are just making sure that this doesn't redirect the browser.\n      this.addEventListener(\"drop\", function(e) {\n        this.dragOver = false;\n        e.preventDefault();\n        e.stopPropagation();\n        this.classList.remove(\"dragover\");\n        // this helps ensure that what gets drag and dropped is a file\n        // this prevents issues with selecting and dragging text (which triggers drag/drop)\n        // as well as compatibility with things that are legit in a draggable state\n        try {\n          if (e.dataTransfer.items[0].kind === \"file\") {\n            e.placeHolderElement = this;\n            // fire this specialized event up so things like HAX can intercept\n            this.dispatchEvent(\n              new CustomEvent(\"place-holder-file-drop\", {\n                bubbles: true,\n                cancelable: true,\n                composed: true,\n                detail: e\n              })\n            );\n          }\n        } catch (e) {}\n      });\n      this.addEventListener(\"dblclick\", this.fireReplaceEvent.bind(this));\n    });\n  }\n  disconnectedCallback() {\n    this.removeEventListener(\"dragover\", function(e) {\n      this.dragOver = true;\n      e.preventDefault();\n      e.stopPropagation();\n      this.classList.add(\"dragover\");\n    });\n\n    this.removeEventListener(\"dragleave\", function(e) {\n      this.dragOver = false;\n      e.preventDefault();\n      e.stopPropagation();\n      this.classList.remove(\"dragover\");\n    });\n    // self bind a drop event enough though something else\n    // will need to step in and do something with this.\n    // We are just making sure that this doesn't redirect the browser.\n    this.removeEventListener(\"drop\", function(e) {\n      this.dragOver = false;\n      e.preventDefault();\n      e.stopPropagation();\n      this.classList.remove(\"dragover\");\n      // this helps ensure that what gets drag and dropped is a file\n      // this prevents issues with selecting and dragging text (which triggers drag/drop)\n      // as well as compatibility with things that are legit in a draggable state\n      try {\n        if (e.dataTransfer.items[0].kind === \"file\") {\n          e.placeHolderElement = this;\n          // fire this specialized event up so things like HAX can intercept\n          this.dispatchEvent(\n            new CustomEvent(\"place-holder-file-drop\", {\n              bubbles: true,\n              cancelable: true,\n              composed: true,\n              detail: e\n            })\n          );\n        }\n      } catch (e) {}\n    });\n    this.removeEventListener(\"dblclick\", this.fireReplaceEvent.bind(this));\n    super.disconnectedCallback();\n  }\n  static get haxProperties() {\n    return {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Placeholder\",\n        description:\n          \"A place holder that can be converted into the media type that's been selected\",\n        icon: \"image:transform\",\n        color: \"grey\",\n        groups: [\"Placeholder\"],\n        handles: [],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [],\n        configure: [\n          {\n            property: \"type\",\n            title: \"Type\",\n            description: \"Type of gizmo that this accepts for replacement.\",\n            inputMethod: \"select\",\n            options: {\n              text: \"Text / content\",\n              document: \"Document / file\",\n              audio: \"Audio\",\n              video: \"Video\",\n              image: \"Image\",\n              math: \"Math\"\n            }\n          }\n        ],\n        advanced: []\n      },\n      saveOptions: {\n        wipeSlot: true\n      }\n    };\n  }\n}\nwindow.customElements.define(PlaceHolder.tag, PlaceHolder);\nexport { PlaceHolder };\n"],"names":["PlaceHolder","afterNextRender","HAXWiring","setup","haxProperties","tag","this","PolymerElement","html","iconFromType","type","String","computed","text","value","calcText","dragOver","Boolean","reflectToAttribute","canScale","canPosition","canEditSource","gizmo","title","description","icon","color","groups","handles","meta","author","settings","quick","configure","property","inputMethod","options","document","audio","video","image","math","advanced","saveOptions","wipeSlot","e","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","addEventListener","preventDefault","stopPropagation","classList","add","remove","dataTransfer","items","kind","placeHolderElement","fireReplaceEvent","bind","removeEventListener","window","customElements","define"],"mappings":"0iFAaMA,uOAGK,4CACA,8CACA,oDACA,0CACA,8CACA,sCACPC,uBAAsB,gBACfC,UAAY,IAAIA,iBAChBA,UAAUC,MAAMH,EAAYI,cAAeJ,EAAYK,IAAKC,gQAX7CC,+DAefC,8CAoCA,wDAIA,CAILC,aAAc,CACZC,KAAMC,OACNC,SAAU,oCAKZC,KAAM,CACJH,KAAMC,OACNG,MAAO,IAKTC,SAAU,CACRL,KAAMC,OACNC,SAAU,sCAKZF,KAAM,CACJA,KAAMC,OACNG,MAAO,QAKTE,SAAU,CACRN,KAAMO,QACNH,OAAO,EACPI,oBAAoB,gDA2JjB,CACLC,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLC,MAAO,cACPC,YACE,gFACFC,KAAM,kBACNC,MAAO,OACPC,OAAQ,CAAC,eACTC,QAAS,GACTC,KAAM,CACJC,OAAQ,qBAGZC,SAAU,CACRC,MAAO,GACPC,UAAW,CACT,CACEC,SAAU,OACVX,MAAO,OACPC,YAAa,mDACbW,YAAa,SACbC,QAAS,CACPvB,KAAM,iBACNwB,SAAU,kBACVC,MAAO,QACPC,MAAO,QACPC,MAAO,QACPC,KAAM,UAIZC,SAAU,IAEZC,YAAa,CACXC,UAAU,kDAxLCC,QACVC,cACH,IAAIC,YAAY,uBAAwB,CACtCC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQ7C,KAAKI,6CAQNG,EAAMH,EAAMM,UACnBA,EACK,cACW,KAATH,EACF,oBAAsBH,EAAO,IAE7BG,2CAQMH,EAAMM,MAChBA,QAwBI,2BAvBCN,OACD,iBACI,+BAEJ,cACI,qBAEJ,cACI,kCAEJ,cACI,0BAEJ,aACI,uBAEJ,qBAEI,8HAabT,kBAAgBK,KAAM,gBACf8C,iBAAiB,WAAY,SAASP,QACpC7B,UAAW,EAChB6B,EAAEQ,iBACFR,EAAES,uBACGC,UAAUC,IAAI,mBAEhBJ,iBAAiB,YAAa,SAASP,QACrC7B,UAAW,EAChB6B,EAAEQ,iBACFR,EAAES,uBACGC,UAAUE,OAAO,mBAKnBL,iBAAiB,OAAQ,SAASP,QAChC7B,UAAW,EAChB6B,EAAEQ,iBACFR,EAAES,uBACGC,UAAUE,OAAO,gBAKiB,SAAjCZ,EAAEa,aAAaC,MAAM,GAAGC,OAC1Bf,EAAEgB,mBAAqBvD,UAElBwC,cACH,IAAIC,YAAY,yBAA0B,CACxCC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQN,MAId,MAAOA,YAENO,iBAAiB,WAAY9C,KAAKwD,iBAAiBC,KAAKzD,6DAI1D0D,oBAAoB,WAAY,SAASnB,QACvC7B,UAAW,EAChB6B,EAAEQ,iBACFR,EAAES,uBACGC,UAAUC,IAAI,mBAGhBQ,oBAAoB,YAAa,SAASnB,QACxC7B,UAAW,EAChB6B,EAAEQ,iBACFR,EAAES,uBACGC,UAAUE,OAAO,mBAKnBO,oBAAoB,OAAQ,SAASnB,QACnC7B,UAAW,EAChB6B,EAAEQ,iBACFR,EAAES,uBACGC,UAAUE,OAAO,gBAKiB,SAAjCZ,EAAEa,aAAaC,MAAM,GAAGC,OAC1Bf,EAAEgB,mBAAqBvD,UAElBwC,cACH,IAAIC,YAAY,yBAA0B,CACxCC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQN,MAId,MAAOA,YAENmB,oBAAoB,WAAY1D,KAAKwD,iBAAiBC,KAAKzD,qGA8CpE2D,OAAOC,eAAeC,OAAOnE,EAAYK,IAAKL"}