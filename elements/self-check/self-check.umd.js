!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@polymer/polymer/polymer-element.js"),require("@polymer/polymer/lib/utils/render-status.js"),require("@lrnwebcomponents/simple-colors/simple-colors.js"),require("@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js"),require("@lrnwebcomponents/schema-behaviors/schema-behaviors.js"),require("@lrnwebcomponents/a11y-behaviors/a11y-behaviors.js")):"function"==typeof define&&define.amd?define(["exports","@polymer/polymer/polymer-element.js","@polymer/polymer/lib/utils/render-status.js","@lrnwebcomponents/simple-colors/simple-colors.js","@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js","@lrnwebcomponents/schema-behaviors/schema-behaviors.js","@lrnwebcomponents/a11y-behaviors/a11y-behaviors.js"],n):n((e=e||self).SelfCheck={},e.polymerElement_js,e.renderStatus_js,e.simpleColors_js,e.HAXWiring_js,e.schemaBehaviors_js,e.a11yBehaviors_js)}(this,function(e,n,t,o,i,r,l){"use strict";function s(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function a(e,n){return(a=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function p(e,n){return!n||"object"!=typeof n&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function d(e,n,t){return(d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,n,t){var o=function(e,n){for(;!Object.prototype.hasOwnProperty.call(e,n)&&null!==(e=c(e)););return e}(e,n);if(o){var i=Object.getOwnPropertyDescriptor(o,n);return i.get?i.get.call(t):i.value}})(e,n,t||e)}function u(){var e,n,t=(e=['\n      <style>\n        :host {\n          display: block;\n          margin: 15px 0;\n          --self-check-question-color: var(\n            --simple-colors-default-theme-grey-1,\n            #fff\n          );\n          --self-check-question-text: var(\n            --simple-colors-default-theme-grey-12,\n            #000\n          );\n          --self-check-heading-color: var(\n            --simple-colors-default-theme-accent-8,\n            #444\n          );\n          --self-check-heading-text: var(\n            --simple-colors-default-theme-grey-1,\n            #fff\n          );\n          --self-check-answer-color: var(\n            --simple-colors-default-theme-light-green-8,\n            #00762e\n          );\n          --self-check-answer-text: var(\n            --simple-colors-default-theme-grey-1,\n            #fff\n          );\n        }\n        [hidden] {\n          display: none !important;\n        }\n\n        paper-card {\n          width: 100%;\n          color: var(--self-check-question-text);\n          background-color: var(--self-check-question-color);\n          overflow: hidden;\n        }\n\n        paper-icon-button#checkbtn {\n          width: 50px;\n          height: 50px;\n          position: relative;\n          left: 16px;\n          bottom: -10px;\n        }\n\n        .check_button {\n          display: flex;\n          justify-content: flex-end;\n        }\n\n        paper-icon-button#closeBtn {\n          width: 50px;\n          height: 50px;\n          position: relative;\n          left: 16px;\n          bottom: -16px;\n        }\n\n        .close_button {\n          display: flex;\n          justify-content: flex-end;\n        }\n\n        iron-icon#questionmark {\n          width: 35px;\n          height: 35px;\n          padding: 5px;\n          color: #ffffff;\n        }\n\n        .heading {\n          text-transform: uppercase;\n          font-size: 22px;\n          margin: 10px;\n          color: #ffffff;\n        }\n\n        #header_wrap {\n          color: var(--self-check-heading-text);\n          background-color: var(--self-check-heading-color);\n          display: inline-flex;\n          width: 100%;\n          margin: -20px 0 0;\n        }\n\n        #question_wrap {\n          color: var(--self-check-question-text);\n          background-color: var(--self-check-question-color);\n          position: relative;\n        }\n\n        .question {\n          font-size: 16px;\n          padding: 15px 15px;\n        }\n\n        :host([correct]) .question {\n          display: none;\n        }\n\n        #answer_wrap {\n          visibility: hidden;\n          opacity: 0;\n          color: var(--self-check-answer-text);\n          background-color: var(--self-check-answer-color);\n          border-top: 2px solid var(--self-check-answer-text);\n          width: 100%;\n          top: 0;\n          transition: all 0.2s ease;\n          left: calc(100%);\n          position: absolute;\n        }\n\n        :host([correct]) #answer_wrap {\n          visibility: visible;\n          opacity: 1;\n          position: relative;\n          left: 0;\n        }\n\n        .answer {\n          font-size: 16px;\n          padding: 15px;\n          line-height: 19.2px;\n        }\n\n        #quote_start {\n          display: inline-flex;\n          transform: rotateY(180deg);\n        }\n\n        #quote_end {\n          display: inline-flex;\n        }\n\n        .triangle {\n          width: 0;\n          height: 0;\n          border-left: 20px solid transparent;\n          border-right: 20px solid transparent;\n          border-bottom: 20px solid var(--self-check-heading-color);\n          position: relative;\n          top: -20px;\n          left: -1px;\n        }\n\n        .more_info {\n          display: inline;\n        }\n\n        .more_info a {\n          color: var(--self-check-answer-text);\n        }\n\n        .more_info a:hover {\n          text-decoration: none;\n        }\n      </style>\n      <paper-card image$="[[image]]" alt$="[[alt]]">\n        <div class="triangle"></div>\n        <div id="header_wrap">\n          <iron-icon id="questionmark" icon="icons:help"></iron-icon>\n          <div class="heading">[[title]]</div>\n        </div>\n        <div id="question_wrap">\n          <div class="question" aria-hidden$="[[correct]]">\n            <slot name="question"></slot>\n            <div class="check_button">\n              <paper-icon-button\n                controls="answer_wrap"\n                aria-label="Reveal Answer"\n                id="checkBtn"\n                icon="icons:check-circle"\n                on-click="openAnswer"\n                noink\n              >\n              </user-action>\n              <paper-tooltip aria-hidden="true" for="checkBtn" position="left">\n                Reveal Answer\n              </paper-tooltip>\n            </div>\n          </div>\n\n          <div id="answer_wrap" aria-hidden$="[[!correct]]" aria-live="polite">\n            <div class="answer">\n              <user-action track="visibility">\n                <slot></slot>\n              </user-action>\n              <div class="more_info" hidden$="[[!link]]">\n                <user-action track="click" every><a href$="[[link]]" target="_blank">More info...</a></user-action>\n              </div>\n              <div class="close_button">\n                <paper-icon-button\n                  aria-label="Close"\n                  id="closeBtn"\n                  icon="icons:close"\n                  on-click="openAnswer"\n                  noink\n                >\n                </paper-icon-button>\n                <paper-tooltip\n                  aria-hidden="true"\n                  for="closeBtn"\n                  position="left"\n                >\n                  Close\n                </paper-tooltip>\n              </div>\n            </div>\n          </div>\n        </div>\n      </paper-card>\n    '],n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}})));return u=function(){return t},t}var f=function(e){function f(){var e;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,f),e=p(this,c(f).call(this)),import("@polymer/paper-card/paper-card.js"),import("@polymer/paper-icon-button/paper-icon-button.js"),import("@polymer/iron-icons/editor-icons.js"),import("@polymer/iron-icons/iron-icons.js"),import("@polymer/paper-tooltip/paper-tooltip.js"),e}var h,m,y;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&a(e,n)}(f,r.SchemaBehaviors(l.A11yBehaviors(o.SimpleColors))),h=f,y=[{key:"template",get:function(){return n.html(u())}},{key:"tag",get:function(){return"self-check"}},{key:"properties",get:function(){var e={title:{type:String,value:"Self-Check"},question:{type:String,value:""},image:{type:String,value:"",reflectToAttribute:!0},alt:{type:String,value:"",reflectToAttribute:!0},link:{type:String,reflectToAttribute:!0},correct:{type:Boolean,value:!1,reflectToAttribute:!0}};return d(c(f),"properties",this)&&(e=Object.assign(e,d(c(f),"properties",this))),e}},{key:"haxProperties",get:function(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Self-Check",description:"The user will be able to complete a self-check.",icon:"icons:check-circle",color:"orange",groups:["Image","Assessment"],handles:[{type:"image",source:"image",title:"question",description:"answer"}],meta:{author:"LRNWebComponents"}},settings:{quick:[{property:"title",title:"Title",description:"The title of the element",inputMethod:"textfield",icon:"editor:title"},{property:"image",title:"Image",description:"The image of the element",inputMethod:"textfield",icon:"editor:insert-photo"},{property:"link",title:"More link",description:"Link to additional information",inputMethod:"textfield",validationType:"url",icon:"icons:link"}],configure:[{property:"title",title:"Title",description:"The title of the element",inputMethod:"textfield"},{property:"accentColor",title:"Accent Color",description:"The accent color of the self-check",inputMethod:"colorpicker",icon:"editor:format-color-fill"},{property:"dark",title:"Dark Theme",description:"Enable Dark Theme",inputMethod:"boolean",icon:"icons:invert-colors"},{property:"image",title:"Image",description:"The image of the element",inputMethod:"haxupload",validationType:"url"},{property:"link",title:"More link",description:"Link to additional information",inputMethod:"haxupload",validationType:"url"},{property:"alt",title:"Alt Text",description:"Add alt text to the image",inputMethod:"alt"},{slot:"question",title:"Question to ask",description:"This is where you enter a question for the self-check.",inputMethod:"code-editor",required:!0},{slot:"",title:"Answer",description:"This is where you enter a question for the self-check.",inputMethod:"code-editor",required:!0}],advanced:[]}}}}],(m=[{key:"openAnswer",value:function(e){this.correct=!this.correct}},{key:"connectedCallback",value:function(){d(c(f.prototype),"connectedCallback",this).call(this),t.afterNextRender(this,function(){this.HAXWiring=new i.HAXWiring,this.HAXWiring.setup(f.haxProperties,f.tag,this),import("@lrnwebcomponents/user-action/user-action.js")})}}])&&s(h.prototype,m),y&&s(h,y),f}();window.customElements.define(f.tag,f),e.SelfCheck=f,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=self-check.umd.js.map
