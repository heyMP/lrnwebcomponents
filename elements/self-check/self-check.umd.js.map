{"version":3,"file":"self-check.umd.js","sources":["self-check.umd.js"],"sourcesContent":["import { html } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { SimpleColors } from \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport { SchemaBehaviors } from \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\nimport { A11yBehaviors } from \"@lrnwebcomponents/a11y-behaviors/a11y-behaviors.js\";\n/**\n * `self-check`\n * @demo demo/index.html\n * @microcopy - the mental model for this element\n * CSS Variables that override accent color:\n * --self-check-question-color //overrides the question background color\n * --self-check-question-text //overrides the question text color\n * --self-check-heading-color //overrides the heading background color\n * --self-check-heading-text //overrides the heading text color\n * --self-check-answer-color //overrides the answer background color\n * --self-check-answer-text //overrides the answer text color\n */\nclass SelfCheck extends SchemaBehaviors(A11yBehaviors(SimpleColors)) {\n  constructor() {\n    super();\n    import(\"@polymer/paper-card/paper-card.js\");\n    import(\"@polymer/paper-icon-button/paper-icon-button.js\");\n    import(\"@polymer/iron-icons/editor-icons.js\");\n    import(\"@polymer/iron-icons/iron-icons.js\");\n    import(\"@polymer/paper-tooltip/paper-tooltip.js\");\n  }\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          margin: 15px 0;\n          --self-check-question-color: var(\n            --simple-colors-default-theme-grey-1,\n            #fff\n          );\n          --self-check-question-text: var(\n            --simple-colors-default-theme-grey-12,\n            #000\n          );\n          --self-check-heading-color: var(\n            --simple-colors-default-theme-accent-8,\n            #444\n          );\n          --self-check-heading-text: var(\n            --simple-colors-default-theme-grey-1,\n            #fff\n          );\n          --self-check-answer-color: var(\n            --simple-colors-default-theme-light-green-8,\n            #00762e\n          );\n          --self-check-answer-text: var(\n            --simple-colors-default-theme-grey-1,\n            #fff\n          );\n        }\n        [hidden] {\n          display: none !important;\n        }\n\n        paper-card {\n          width: 100%;\n          color: var(--self-check-question-text);\n          background-color: var(--self-check-question-color);\n          overflow: hidden;\n        }\n\n        paper-icon-button#checkbtn {\n          width: 50px;\n          height: 50px;\n          position: relative;\n          left: 16px;\n          bottom: -10px;\n        }\n\n        .check_button {\n          display: flex;\n          justify-content: flex-end;\n        }\n\n        paper-icon-button#closeBtn {\n          width: 50px;\n          height: 50px;\n          position: relative;\n          left: 16px;\n          bottom: -16px;\n        }\n\n        .close_button {\n          display: flex;\n          justify-content: flex-end;\n        }\n\n        iron-icon#questionmark {\n          width: 35px;\n          height: 35px;\n          padding: 5px;\n          color: #ffffff;\n        }\n\n        .heading {\n          text-transform: uppercase;\n          font-size: 22px;\n          margin: 10px;\n          color: #ffffff;\n        }\n\n        #header_wrap {\n          color: var(--self-check-heading-text);\n          background-color: var(--self-check-heading-color);\n          display: inline-flex;\n          width: 100%;\n          margin: -20px 0 0;\n        }\n\n        #question_wrap {\n          color: var(--self-check-question-text);\n          background-color: var(--self-check-question-color);\n          position: relative;\n        }\n\n        .question {\n          font-size: 16px;\n          padding: 15px 15px;\n        }\n\n        :host([correct]) .question {\n          display: none;\n        }\n\n        #answer_wrap {\n          visibility: hidden;\n          opacity: 0;\n          color: var(--self-check-answer-text);\n          background-color: var(--self-check-answer-color);\n          border-top: 2px solid var(--self-check-answer-text);\n          width: 100%;\n          top: 0;\n          transition: all 0.2s ease;\n          left: calc(100%);\n          position: absolute;\n        }\n\n        :host([correct]) #answer_wrap {\n          visibility: visible;\n          opacity: 1;\n          position: relative;\n          left: 0;\n        }\n\n        .answer {\n          font-size: 16px;\n          padding: 15px;\n          line-height: 19.2px;\n        }\n\n        #quote_start {\n          display: inline-flex;\n          transform: rotateY(180deg);\n        }\n\n        #quote_end {\n          display: inline-flex;\n        }\n\n        .triangle {\n          width: 0;\n          height: 0;\n          border-left: 20px solid transparent;\n          border-right: 20px solid transparent;\n          border-bottom: 20px solid var(--self-check-heading-color);\n          position: relative;\n          top: -20px;\n          left: -1px;\n        }\n\n        .more_info {\n          display: inline;\n        }\n\n        .more_info a {\n          color: var(--self-check-answer-text);\n        }\n\n        .more_info a:hover {\n          text-decoration: none;\n        }\n      </style>\n      <paper-card image$=\"[[image]]\" alt$=\"[[alt]]\">\n        <div class=\"triangle\"></div>\n        <div id=\"header_wrap\">\n          <iron-icon id=\"questionmark\" icon=\"icons:help\"></iron-icon>\n          <div class=\"heading\">[[title]]</div>\n        </div>\n        <div id=\"question_wrap\">\n          <div class=\"question\" aria-hidden$=\"[[correct]]\">\n            <slot name=\"question\"></slot>\n            <div class=\"check_button\">\n              <paper-icon-button\n                controls=\"answer_wrap\"\n                aria-label=\"Reveal Answer\"\n                id=\"checkBtn\"\n                icon=\"icons:check-circle\"\n                on-click=\"openAnswer\"\n                noink\n              >\n              </user-action>\n              <paper-tooltip aria-hidden=\"true\" for=\"checkBtn\" position=\"left\">\n                Reveal Answer\n              </paper-tooltip>\n            </div>\n          </div>\n\n          <div id=\"answer_wrap\" aria-hidden$=\"[[!correct]]\" aria-live=\"polite\">\n            <div class=\"answer\">\n              <user-action track=\"visibility\">\n                <slot></slot>\n              </user-action>\n              <div class=\"more_info\" hidden$=\"[[!link]]\">\n                <user-action track=\"click\" every><a href$=\"[[link]]\" target=\"_blank\">More info...</a></user-action>\n              </div>\n              <div class=\"close_button\">\n                <paper-icon-button\n                  aria-label=\"Close\"\n                  id=\"closeBtn\"\n                  icon=\"icons:close\"\n                  on-click=\"openAnswer\"\n                  noink\n                >\n                </paper-icon-button>\n                <paper-tooltip\n                  aria-hidden=\"true\"\n                  for=\"closeBtn\"\n                  position=\"left\"\n                >\n                  Close\n                </paper-tooltip>\n              </div>\n            </div>\n          </div>\n        </div>\n      </paper-card>\n    `;\n  }\n\n  static get tag() {\n    return \"self-check\";\n  }\n  static get properties() {\n    let props = {\n      /**\n       * Title.\n       */\n      title: {\n        type: String,\n        value: \"Self-Check\"\n      },\n      /**\n       * Question.\n       */\n      question: {\n        type: String,\n        value: \"\"\n      },\n      /**\n       * Image.\n       */\n      image: {\n        type: String,\n        value: \"\",\n        reflectToAttribute: true\n      },\n      /**\n       * Alt text for image.\n       */\n      alt: {\n        type: String,\n        value: \"\",\n        reflectToAttribute: true\n      },\n      /**\n       * Link for more information.\n       */\n      link: {\n        type: String,\n        reflectToAttribute: true\n      },\n      /**\n       * Property for toggling \"checkbtn\".\n       */\n      correct: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      }\n    };\n    if (super.properties) {\n      props = Object.assign(props, super.properties);\n    }\n    return props;\n  }\n\n  /**\n   * Property for toggling \"checkbtn\".\n   */\n\n  openAnswer(e) {\n    this.correct = !this.correct;\n  }\n  static get haxProperties() {\n    return {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Self-Check\",\n        description: \"The user will be able to complete a self-check.\",\n        icon: \"icons:check-circle\",\n        color: \"orange\",\n        groups: [\"Image\", \"Assessment\"],\n        handles: [\n          {\n            type: \"image\",\n            source: \"image\",\n            title: \"question\",\n            description: \"answer\"\n          }\n        ],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"The title of the element\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"image\",\n            title: \"Image\",\n            description: \"The image of the element\",\n            inputMethod: \"textfield\",\n            icon: \"editor:insert-photo\"\n          },\n          {\n            property: \"link\",\n            title: \"More link\",\n            description: \"Link to additional information\",\n            inputMethod: \"textfield\",\n            validationType: \"url\",\n            icon: \"icons:link\"\n          }\n        ],\n        configure: [\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"The title of the element\",\n            inputMethod: \"textfield\"\n          },\n          {\n            property: \"accentColor\",\n            title: \"Accent Color\",\n            description: \"The accent color of the self-check\",\n            inputMethod: \"colorpicker\",\n            icon: \"editor:format-color-fill\"\n          },\n          {\n            property: \"dark\",\n            title: \"Dark Theme\",\n            description: \"Enable Dark Theme\",\n            inputMethod: \"boolean\",\n            icon: \"icons:invert-colors\"\n          },\n          {\n            property: \"image\",\n            title: \"Image\",\n            description: \"The image of the element\",\n            inputMethod: \"haxupload\",\n            validationType: \"url\"\n          },\n          {\n            property: \"link\",\n            title: \"More link\",\n            description: \"Link to additional information\",\n            inputMethod: \"haxupload\",\n            validationType: \"url\"\n          },\n          {\n            property: \"alt\",\n            title: \"Alt Text\",\n            description: \"Add alt text to the image\",\n            inputMethod: \"alt\"\n          },\n          {\n            slot: \"question\",\n            title: \"Question to ask\",\n            description:\n              \"This is where you enter a question for the self-check.\",\n            inputMethod: \"code-editor\",\n            required: true\n          },\n          {\n            slot: \"\",\n            title: \"Answer\",\n            description:\n              \"This is where you enter a question for the self-check.\",\n            inputMethod: \"code-editor\",\n            required: true\n          }\n        ],\n        advanced: []\n      }\n    };\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function() {\n      this.HAXWiring = new HAXWiring();\n      this.HAXWiring.setup(SelfCheck.haxProperties, SelfCheck.tag, this);\n      import(\"@lrnwebcomponents/user-action/user-action.js\");\n    });\n  }\n}\nwindow.customElements.define(SelfCheck.tag, SelfCheck);\nexport { SelfCheck };\n"],"names":["SelfCheck","SchemaBehaviors","A11yBehaviors","SimpleColors","html","props","title","type","String","value","question","image","reflectToAttribute","alt","link","correct","Boolean","Object","assign","canScale","canPosition","canEditSource","gizmo","description","icon","color","groups","handles","source","meta","author","settings","quick","property","inputMethod","validationType","configure","slot","required","advanced","e","this","afterNextRender","HAXWiring","setup","haxProperties","tag","window","customElements","define"],"mappings":"k0PAkBMA,8KAGK,4CACA,0DACA,8CACA,4CACA,mSAPaC,kBAAgBC,gBAAcC,+DAU3CC,8CA4NA,oDAGHC,EAAQ,CAIVC,MAAO,CACLC,KAAMC,OACNC,MAAO,cAKTC,SAAU,CACRH,KAAMC,OACNC,MAAO,IAKTE,MAAO,CACLJ,KAAMC,OACNC,MAAO,GACPG,oBAAoB,GAKtBC,IAAK,CACHN,KAAMC,OACNC,MAAO,GACPG,oBAAoB,GAKtBE,KAAM,CACJP,KAAMC,OACNI,oBAAoB,GAKtBG,QAAS,CACPR,KAAMS,QACNP,OAAO,EACPG,oBAAoB,uCAItBP,EAAQY,OAAOC,OAAOb,8BAEjBA,8CAWA,CACLc,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLhB,MAAO,aACPiB,YAAa,kDACbC,KAAM,qBACNC,MAAO,SACPC,OAAQ,CAAC,QAAS,cAClBC,QAAS,CACP,CACEpB,KAAM,QACNqB,OAAQ,QACRtB,MAAO,WACPiB,YAAa,WAGjBM,KAAM,CACJC,OAAQ,qBAGZC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,QACV3B,MAAO,QACPiB,YAAa,2BACbW,YAAa,YACbV,KAAM,gBAER,CACES,SAAU,QACV3B,MAAO,QACPiB,YAAa,2BACbW,YAAa,YACbV,KAAM,uBAER,CACES,SAAU,OACV3B,MAAO,YACPiB,YAAa,iCACbW,YAAa,YACbC,eAAgB,MAChBX,KAAM,eAGVY,UAAW,CACT,CACEH,SAAU,QACV3B,MAAO,QACPiB,YAAa,2BACbW,YAAa,aAEf,CACED,SAAU,cACV3B,MAAO,eACPiB,YAAa,qCACbW,YAAa,cACbV,KAAM,4BAER,CACES,SAAU,OACV3B,MAAO,aACPiB,YAAa,oBACbW,YAAa,UACbV,KAAM,uBAER,CACES,SAAU,QACV3B,MAAO,QACPiB,YAAa,2BACbW,YAAa,YACbC,eAAgB,OAElB,CACEF,SAAU,OACV3B,MAAO,YACPiB,YAAa,iCACbW,YAAa,YACbC,eAAgB,OAElB,CACEF,SAAU,MACV3B,MAAO,WACPiB,YAAa,4BACbW,YAAa,OAEf,CACEG,KAAM,WACN/B,MAAO,kBACPiB,YACE,yDACFW,YAAa,cACbI,UAAU,GAEZ,CACED,KAAM,GACN/B,MAAO,SACPiB,YACE,yDACFW,YAAa,cACbI,UAAU,IAGdC,SAAU,6CA7GLC,QACJzB,SAAW0B,KAAK1B,0GAkHrB2B,kBAAgBD,KAAM,gBACfE,UAAY,IAAIA,iBAChBA,UAAUC,MAAM5C,EAAU6C,cAAe7C,EAAU8C,IAAKL,aACtD,uFAIbM,OAAOC,eAAeC,OAAOjD,EAAU8C,IAAK9C"}