!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@polymer/polymer/polymer-element.js"),require("@polymer/polymer/lib/utils/render-status.js"),require("@lrnwebcomponents/simple-colors/simple-colors.js"),require("@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js"),require("@lrnwebcomponents/a11y-behaviors/a11y-behaviors.js")):"function"==typeof define&&define.amd?define(["exports","@polymer/polymer/polymer-element.js","@polymer/polymer/lib/utils/render-status.js","@lrnwebcomponents/simple-colors/simple-colors.js","@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js","@lrnwebcomponents/a11y-behaviors/a11y-behaviors.js"],t):t((e=e||self).SimpleConceptNetwork={},e.polymerElement_js,e.renderStatus_js,e.simpleColors_js,e.HAXWiring_js,e.a11yBehaviors_js)}(this,function(e,t,n,o,i,r){"use strict";function l(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function p(e,t){return(p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function c(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function a(e,t,n){return(a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}(e,t);if(o){var i=Object.getOwnPropertyDescriptor(o,t);return i.get?i.get.call(n):i.value}})(e,t,n||e)}function d(){var e,t,n=(e=['\n      <style>\n        :host {\n          display: block;\n        }\n        :host([visualization="network"]) simple-concept-network-node {\n          position: relative;\n        }\n        :host([visualization="network"])\n          simple-concept-network-node:nth-child(1) {\n          top: 150px;\n          left: 176px;\n        }\n        :host([visualization="network"])\n          simple-concept-network-node:nth-child(2) {\n          top: 0px;\n          left: 60px;\n        }\n        :host([visualization="network"])\n          simple-concept-network-node:nth-child(3) {\n          top: 75px;\n          left: 60px;\n        }\n        :host([visualization="network"])\n          simple-concept-network-node:nth-child(4) {\n          top: 230px;\n          left: -56px;\n        }\n        :host([visualization="network"])\n          simple-concept-network-node:nth-child(5) {\n          top: 300px;\n          left: -282px;\n        }\n        :host([visualization="network"])\n          simple-concept-network-node:nth-child(6) {\n          top: 230px;\n          left: -515px;\n        }\n        :host([visualization="network"])\n          simple-concept-network-node:nth-child(7) {\n          top: 75px;\n          left: -630px;\n        }\n        :host([visualization="network"]) {\n          display: block;\n          min-height: 450px;\n        }\n      </style>\n      <template is="dom-repeat" items="[[nodes]]" as="node">\n        <simple-concept-network-node\n          accent-color$="[[node.color]]"\n          colored-text$="[[coloredText]]"\n          dark$="[[dark]]"\n          visualization$="[[visualization]]"\n          src$="[[node.src]]"\n          icon$="[[node.icon]]"\n          image$="[[node.image]]"\n          label$="[[node.label]]"\n          disabled$="[[node.disabled]]"\n        ></simple-concept-network-node>\n      </template>\n    '],t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}})));return d=function(){return n},n}var u=function(e){function u(){var e,t,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),t=this,e=!(o=s(u).call(this))||"object"!=typeof o&&"function"!=typeof o?c(t):o,import("@lrnwebcomponents/simple-concept-network/lib/simple-concept-network-node.js"),n.afterNextRender(c(e),function(){this.HAXWiring=new i.HAXWiring,this.HAXWiring.setup(u.haxProperties,u.tag,this)}),e}var f,h,y;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&p(e,t)}(u,r.A11yBehaviors(o.SimpleColors)),f=u,y=[{key:"template",get:function(){return t.html(d())}},{key:"tag",get:function(){return"simple-concept-network"}},{key:"observers",get:function(){return["_valueChanged(nodes.*)"]}},{key:"properties",get:function(){var e={visualization:{type:String,reflectToAttribute:!0,value:"3d"},disabled:{type:Boolean},coloredText:{type:Boolean,reflectToAttribute:!0,value:!1},nodes:{type:Array,value:[],notify:!0}};return a(s(u),"properties",this)&&(e=Object.assign(e,a(s(u),"properties",this))),e}},{key:"haxProperties",get:function(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Concept Network",description:"A simple way of visualizing data in a small network style configuration.",icon:"lrn:network",color:"blue",groups:["Image","Visualization"],handles:[{type:"image",source:"nodes.source",title:"nodes.label",link:"nodes.src",description:"nodes.description"}],meta:{author:"LRNWebComponents"}},settings:{quick:[],configure:[{property:"visualization",title:"Visualization",description:"How to visualize the concept",inputMethod:"select",options:{"3d":"3d plain",network:"network",flat:"flat"}},{property:"dark",title:"Dark",description:"Use dark theme",inputMethod:"boolean",icon:"invert-colors"},{property:"coloredText",title:"Colored Text / Icon",description:"Apply color to text / icon instead of background.",inputMethod:"boolean",icon:"editor:format-color-text"},{property:"nodes",title:"Node list",description:"List of the items to present in the visual",inputMethod:"array",properties:[{property:"color",title:"Node color",description:"Select the accent color for this node",inputMethod:"colorpicker",icon:"editor:format-color-fill"},{property:"icon",title:"Icon",description:"icon to display in the middle",inputMethod:"iconpicker",options:[]},{property:"label",title:"Label",description:"Label",inputMethod:"textfield"},{property:"image",title:"Image",description:"Image for the background",inputMethod:"textfield",validationType:"url"},{property:"description",title:"Description",description:"A longer description that can be used as part of a modal presentation",inputMethod:"textfield"},{property:"src",title:"Link",description:"Label",inputMethod:"textfield",validationType:"url"}]}],advanced:[]}}}}],(h=[{key:"_valueChanged",value:function(e){for(var t in e.base)for(var n in e.base[t])this.notifyPath("nodes."+t+"."+n)}}])&&l(f.prototype,h),y&&l(f,y),u}();window.customElements.define(u.tag,u),e.SimpleConceptNetwork=u,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=simple-concept-network.umd.js.map
