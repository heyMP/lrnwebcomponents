{"version":3,"file":"lrn-aside.umd.js","sources":["lrn-aside.umd.js"],"sourcesContent":["import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\n/**\n * `lrn-aside`\n * A content aside as a panel\n *\n * @demo demo/index.html\n */\nclass LrnAside extends PolymerElement {\n  constructor() {\n    super();\n    import(\"@lrnwebcomponents/lrndesign-panelcard/lrndesign-panelcard.js\");\n    afterNextRender(this, function() {\n      this.HAXWiring = new HAXWiring();\n      this.HAXWiring.setup(LrnAside.haxProperties, LrnAside.tag, this);\n    });\n  }\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          padding: 8px;\n        }\n        :host([sticky]) {\n          top: 0;\n          position: sticky;\n        }\n        :host([direction=\"left\"]) {\n          float: left;\n          max-width: 480px;\n        }\n        :host([direction=\"right\"]) {\n          float: right;\n          max-width: 480px;\n        }\n      </style>\n      <aside>\n        <lrndesign-panelcard title=\"[[title]]\">\n          <slot></slot>\n        </lrndesign-panelcard>\n      </aside>\n    `;\n  }\n\n  static get tag() {\n    return \"lrn-aside\";\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Title for the aside.\n       */\n      title: {\n        type: String,\n        value: \"Related content\"\n      },\n      /**\n       * Apply CSS sticky styling\n       */\n      sticky: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Direction to hang off UI if sticky, left or right.\n       */\n      direction: {\n        type: String,\n        value: \"\",\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * Attached to the DOM, now fire.\n   */\n  static get haxProperties() {\n    return {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Sticky note\",\n        description:\n          \"A sticky note to present some basic info offset on the page.\",\n        icon: \"av:note\",\n        color: \"yellow\",\n        groups: [\"Content\"],\n        handles: [\n          {\n            type: \"text\",\n            title: \"title\"\n          }\n        ],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"Enter title for sticky note\",\n            inputMethod: \"textfield\",\n            required: true\n          }\n        ],\n        configure: [\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"Enter title for sticky note.\",\n            inputMethod: \"textfield\",\n            required: true\n          },\n          {\n            slot: \"\",\n            title: \"Content\",\n            description: \"Content of the sticky note\",\n            inputMethod: \"code-editor\",\n            required: true\n          },\n          {\n            property: \"sticky\",\n            title: \"Stick to page on scroll\",\n            description: \"Appear sticky when the user scrolls past it\",\n            inputMethod: \"boolean\"\n          },\n          {\n            property: \"direction\",\n            title: \"Direction to hang\",\n            description: \"Location of the sticky note to hang\",\n            inputMethod: \"select\",\n            options: {\n              \"\": \"none\",\n              right: \"Right\",\n              left: \"Left\"\n            }\n          }\n        ],\n        advanced: []\n      }\n    };\n  }\n}\nwindow.customElements.define(LrnAside.tag, LrnAside);\nexport { LrnAside };\n"],"names":["LrnAside","afterNextRender","HAXWiring","setup","haxProperties","tag","this","PolymerElement","html","title","type","String","value","sticky","Boolean","reflectToAttribute","direction","canScale","canPosition","canEditSource","gizmo","description","icon","color","groups","handles","meta","author","settings","quick","property","inputMethod","required","configure","slot","options","right","left","advanced","window","customElements","define"],"mappings":"+uDASMA,uOAGK,gEACPC,uBAAsB,gBACfC,UAAY,IAAIA,iBAChBA,UAAUC,MAAMH,EAASI,cAAeJ,EAASK,IAAKC,gQAN1CC,+DAUZC,8CA4BA,qDAIA,CAILC,MAAO,CACLC,KAAMC,OACNC,MAAO,mBAKTC,OAAQ,CACNH,KAAMI,QACNF,OAAO,EACPG,oBAAoB,GAKtBC,UAAW,CACTN,KAAMC,OACNC,MAAO,GACPG,oBAAoB,gDASjB,CACLE,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLX,MAAO,cACPY,YACE,+DACFC,KAAM,UACNC,MAAO,SACPC,OAAQ,CAAC,WACTC,QAAS,CACP,CACEf,KAAM,OACND,MAAO,UAGXiB,KAAM,CACJC,OAAQ,qBAGZC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,QACVrB,MAAO,QACPY,YAAa,8BACbU,YAAa,YACbC,UAAU,IAGdC,UAAW,CACT,CACEH,SAAU,QACVrB,MAAO,QACPY,YAAa,+BACbU,YAAa,YACbC,UAAU,GAEZ,CACEE,KAAM,GACNzB,MAAO,UACPY,YAAa,6BACbU,YAAa,cACbC,UAAU,GAEZ,CACEF,SAAU,SACVrB,MAAO,0BACPY,YAAa,8CACbU,YAAa,WAEf,CACED,SAAU,YACVrB,MAAO,oBACPY,YAAa,sCACbU,YAAa,SACbI,QAAS,IACH,OACJC,MAAO,QACPC,KAAM,UAIZC,SAAU,kDAKlBC,OAAOC,eAAeC,OAAOzC,EAASK,IAAKL"}