{"version":3,"file":"task-list.umd.js","sources":["task-list.umd.js"],"sourcesContent":["import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport { SchemaBehaviors } from \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\nimport \"@polymer/polymer/lib/elements/dom-repeat.js\";\n/**\n * `task-list`\n * Visual listing of tasks with different design components that is\n * OER Schema capable!\n * @demo demo/index.html\n * @microcopy - the mental model for this element\n * - task - a singular thing to accomplish\n */\nclass TaskList extends SchemaBehaviors(PolymerElement) {\n  constructor() {\n    super();\n    afterNextRender(this, function() {\n      this.HAXWiring = new HAXWiring();\n      this.HAXWiring.setup(TaskList.haxProperties, TaskList.tag, this);\n    });\n  }\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n      </style>\n      <h3><span property=\"oer:name\">[[name]]</span></h3>\n      <ol>\n        <template is=\"dom-repeat\" items=\"[[tasks]]\" as=\"task\">\n          <li><span property=\"oer:task\">[[task.name]]</span></li>\n        </template>\n      </ol>\n    `;\n  }\n\n  static get tag() {\n    return \"task-list\";\n  }\n  static get observers() {\n    return [\"_valueChanged(tasks.*)\"];\n  }\n  static get properties() {\n    let props = {\n      /**\n       * Name of this task list\n       */\n      name: {\n        type: String,\n        value: \"Steps to completion\"\n      },\n      /**\n       * Related Resource ID\n       */\n      relatedResource: {\n        type: String\n      },\n      /**\n       * Task list\n       */\n      tasks: {\n        type: Array,\n        value: [],\n        notify: true\n      },\n      _resourceLink: {\n        type: Object,\n        computed: \"_generateResourceLink(relatedResource)\"\n      }\n    };\n    if (super.properties) {\n      props = Object.assign(props, super.properties);\n    }\n    return props;\n  }\n  _generateResourceLink(relatedResource) {\n    if (this._resourceLink) {\n      document.head.removeChild(this._resourceLink);\n    }\n    let link = document.createElement(\"link\");\n    link.setAttribute(\"property\", \"oer:forComponent\");\n    link.setAttribute(\"content\", relatedResource);\n    document.head.appendChild(link);\n    return link;\n  }\n  /**\n   * Ensure the values change.\n   */\n  _valueChanged(e) {\n    for (var i in e.base) {\n      for (var j in e.base[i]) {\n        this.notifyPath(\"tasks.\" + i + \".\" + j);\n      }\n    }\n  }\n  /**\n   * Attached to the DOM, now fire.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"typeof\", \"oer:SupportingMaterial\");\n  }\n  static get haxProperties() {\n    return {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Task list\",\n        description: \"A list of tasks which is an ordered list\",\n        icon: \"icons:list\",\n        color: \"orange\",\n        groups: [\"Content\", \"Instructional\"],\n        handles: [],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"name\",\n            title: \"Name\",\n            description: \"Name of the list\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"relatedResource\",\n            title: \"Related resource\",\n            description: \"A reference to the related Schema resource\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          }\n        ],\n        configure: [\n          {\n            property: \"name\",\n            title: \"Name\",\n            description: \"Name of the list\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"relatedResource\",\n            title: \"Related resource\",\n            description: \"A reference to the related Schema resource\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"tasks\",\n            title: \"Tasks\",\n            description: \"The tasks to be completed\",\n            inputMethod: \"array\",\n            properties: [\n              {\n                property: \"name\",\n                title: \"Name\",\n                description: \"Name of the task\",\n                inputMethod: \"textfield\",\n                required: true\n              },\n              {\n                property: \"link\",\n                title: \"Link\",\n                description: \"Optional link\",\n                inputMethod: \"textfield\"\n              }\n            ]\n          }\n        ],\n        advanced: []\n      }\n    };\n  }\n}\nwindow.customElements.define(TaskList.tag, TaskList);\nexport { TaskList };\n"],"names":["TaskList","afterNextRender","HAXWiring","setup","haxProperties","tag","this","SchemaBehaviors","PolymerElement","html","props","name","type","String","value","relatedResource","tasks","Array","notify","_resourceLink","Object","computed","assign","canScale","canPosition","canEditSource","gizmo","title","description","icon","color","groups","handles","meta","author","settings","quick","property","inputMethod","configure","properties","required","advanced","document","head","removeChild","link","createElement","setAttribute","appendChild","e","i","base","j","notifyPath","window","customElements","define"],"mappings":"qjEAaMA,gOAGFC,uBAAsB,gBACfC,UAAY,IAAIA,iBAChBA,UAAUC,MAAMH,EAASI,cAAeJ,EAASK,IAAKC,gQAL1CC,kBAAgBC,gEAS5BC,8CAgBA,oDAGA,CAAC,iEAGJC,EAAQ,CAIVC,KAAM,CACJC,KAAMC,OACNC,MAAO,uBAKTC,gBAAiB,CACfH,KAAMC,QAKRG,MAAO,CACLJ,KAAMK,MACNH,MAAO,GACPI,QAAQ,GAEVC,cAAe,CACbP,KAAMQ,OACNC,SAAU,8EAIZX,EAAQU,OAAOE,OAAOZ,8BAEjBA,8CA8BA,CACLa,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLC,MAAO,YACPC,YAAa,2CACbC,KAAM,aACNC,MAAO,SACPC,OAAQ,CAAC,UAAW,iBACpBC,QAAS,GACTC,KAAM,CACJC,OAAQ,qBAGZC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,OACVV,MAAO,OACPC,YAAa,mBACbU,YAAa,YACbT,KAAM,gBAER,CACEQ,SAAU,kBACVV,MAAO,mBACPC,YAAa,6CACbU,YAAa,YACbT,KAAM,iBAGVU,UAAW,CACT,CACEF,SAAU,OACVV,MAAO,OACPC,YAAa,mBACbU,YAAa,YACbT,KAAM,gBAER,CACEQ,SAAU,kBACVV,MAAO,mBACPC,YAAa,6CACbU,YAAa,YACbT,KAAM,gBAER,CACEQ,SAAU,QACVV,MAAO,QACPC,YAAa,4BACbU,YAAa,QACbE,WAAY,CACV,CACEH,SAAU,OACVV,MAAO,OACPC,YAAa,mBACbU,YAAa,YACbG,UAAU,GAEZ,CACEJ,SAAU,OACVV,MAAO,OACPC,YAAa,gBACbU,YAAa,gBAKrBI,SAAU,wDAjGM3B,GAChBT,KAAKa,eACPwB,SAASC,KAAKC,YAAYvC,KAAKa,mBAE7B2B,EAAOH,SAASI,cAAc,eAClCD,EAAKE,aAAa,WAAY,oBAC9BF,EAAKE,aAAa,UAAWjC,GAC7B4B,SAASC,KAAKK,YAAYH,GACnBA,wCAKKI,OACP,IAAIC,KAAKD,EAAEE,SACT,IAAIC,KAAKH,EAAEE,KAAKD,QACdG,WAAW,SAAWH,EAAI,IAAME,0GASpCL,aAAa,SAAU,+DA6EhCO,OAAOC,eAAeC,OAAOzD,EAASK,IAAKL"}