{"version":3,"file":"scroll-button.umd.js","sources":["scroll-button.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\n/**\n * `scroll-button`\n * `button to scroll to an area or back to top`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass ScrollButton extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>:host {\n  display: block;\n  --scroll-button-z-index: 99;\n  z-index: var(--scroll-button-z-index);\n}\n\n:host([hidden]) {\n  display: none;\n}\npaper-icon-button {\n  background-color: rgba(0,0,0,.6);\n  color: white;\n  @apply --scroll-button-button;\n}\npaper-icon-button:hover,\npaper-icon-button:active,\npaper-icon-button:focus {\n  background-color: rgba(0,0,0,1);\n  @apply --scroll-button-button-active;\n}\npaper-tooltip {\n  --paper-tooltip-background: #000000;\n  --paper-tooltip-opacity: 1;\n  --paper-tooltip-text-color: #ffffff;\n  --paper-tooltip-delay-in: 0;\n  --paper-tooltip: {\n    border-radius: 0;\n  }\n  @apply --scroll-button-tooltip;\n}\n</style>\n<paper-icon-button id=\"btn\" icon=\"[[icon]]\" title=\"[[label]]\"></paper-icon-button>\n<paper-tooltip\n  for=\"btn\"\n  position=\"[[position]]\"\n  offset=\"14\">\n  [[label]]\n</paper-tooltip>`;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return {\n  \"canScale\": true,\n  \"canPosition\": true,\n  \"canEditSource\": false,\n  \"gizmo\": {\n    \"title\": \"Scroll button\",\n    \"description\": \"button to scroll to an area or back to top\",\n    \"icon\": \"icons:android\",\n    \"color\": \"green\",\n    \"groups\": [\"Button\"],\n    \"handles\": [\n      {\n        \"type\": \"todo:read-the-docs-for-usage\"\n      }\n    ],\n    \"meta\": {\n      \"author\": \"btopro\",\n      \"owner\": \"The Pennsylvania State University\"\n    }\n  },\n  \"settings\": {\n    \"quick\": [],\n    \"configure\": [\n      {\n        \"property\": \"target\",\n        \"description\": \"\",\n        \"inputMethod\": \"array\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      },\n      {\n        \"property\": \"icon\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      },\n      {\n        \"property\": \"label\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      }\n    ],\n    \"advanced\": []\n  }\n}\n;\n  }\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  \"target\": {\n    \"name\": \"target\",\n    \"type\": \"Object\"\n  },\n  \"icon\": {\n    \"name\": \"icon\",\n    \"type\": \"String\",\n    \"value\": \"icons:expand-less\"\n  },\n  \"label\": {\n    \"name\": \"label\",\n    \"type\": \"String\",\n    \"value\": \"Scroll to top\"\n  },\n  \"position\": {\n    \"name\": \"position\",\n    \"type\": \"String\",\n    \"value\": \"top\"\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"scroll-button\";\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.$.btn.addEventListener(\"click\", e => {\n      if (this.target) {\n        this.target.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\",\n          inline: \"nearest\"\n        });\n      } else {\n        window.scrollTo({\n          top: 0,\n          left: 0,\n          behavior: \"smooth\"\n        });\n      }\n    });\n    this.HAXWiring = new HAXWiring();\n    this.HAXWiring.setup(ScrollButton.haxProperties, ScrollButton.tag, this);\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    this.$.btn.removeEventListener(\"click\", e => {\n      if (this.target) {\n        this.target.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\",\n          inline: \"nearest\"\n        });\n      } else {\n        window.scrollTo({\n          top: 0,\n          left: 0,\n          behavior: \"smooth\"\n        });\n      }\n    });\n    super.disconnectedCallback();\n  }\n}\nwindow.customElements.define(ScrollButton.tag, ScrollButton);\nexport { ScrollButton };\n"],"names":["ScrollButton","PolymerElement","html","$","btn","addEventListener","e","_this","target","scrollIntoView","behavior","block","inline","window","scrollTo","top","left","HAXWiring","setup","haxProperties","tag","this","removeEventListener","_this2","customElements","define"],"mappings":"2kFAoBMA,gaAAqBC,+DAIhBC,wDA2CA,WACG,eACG,iBACE,QACR,OACE,4BACM,kDACP,sBACC,eACC,CAAC,kBACA,CACT,MACU,sCAGJ,QACI,eACD,+CAGD,OACD,aACI,CACX,UACc,qBACG,eACA,kBACH,OACJ,iBAEV,UACc,mBACG,eACA,sBACH,OACJ,iBAEV,UACc,oBACG,eACA,sBACH,OACJ,2BAGA,8CAOL,QACC,MACA,cACA,eAEF,MACE,YACA,eACC,2BAEF,MACC,aACA,eACC,0BAEC,MACF,gBACA,eACC,0CAWF,uIAOFC,EAAEC,IAAIC,iBAAiB,QAAS,SAAAC,GAC/BC,EAAKC,OACPD,EAAKC,OAAOC,eAAe,CACzBC,SAAU,SACVC,MAAO,MACPC,OAAQ,YAGVC,OAAOC,SAAS,CACdC,IAAK,EACLC,KAAM,EACNN,SAAU,kBAIXO,UAAY,IAAIA,iBAChBA,UAAUC,MAAMlB,EAAamB,cAAenB,EAAaoB,IAAKC,qEAM9DlB,EAAEC,IAAIkB,oBAAoB,QAAS,SAAAhB,GAClCiB,EAAKf,OACPe,EAAKf,OAAOC,eAAe,CACzBC,SAAU,SACVC,MAAO,MACPC,OAAQ,YAGVC,OAAOC,SAAS,CACdC,IAAK,EACLC,KAAM,EACNN,SAAU,2GAOpBG,OAAOW,eAAeC,OAAOzB,EAAaoB,IAAKpB"}