!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@polymer/polymer/polymer-element.js"),require("@polymer/polymer/lib/utils/render-status.js"),require("@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js"),require("@lrnwebcomponents/schema-behaviors/schema-behaviors.js")):"function"==typeof define&&define.amd?define(["exports","@polymer/polymer/polymer-element.js","@polymer/polymer/lib/utils/render-status.js","@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js","@lrnwebcomponents/schema-behaviors/schema-behaviors.js"],t):t((e=e||self).ParallaxImage={},e.polymerElement_js,e.renderStatus_js,e.HAXWiring_js,e.schemaBehaviors_js)}(this,function(e,t,n,r,i){"use strict";function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function o(e){return(o=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function c(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e,t,n){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=o(e)););return e}(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(n):i.value}})(e,t,n||e)}function u(){var e,t,n=(e=['\n      <style>\n        :host {\n          display: block;\n          --parallax-image-background: "";\n          --parallax-title-background: rgba(0, 0, 0, 0.3);\n          --parallax-title-font: #fff;\n        }\n\n        .parallax_container {\n          height: 400px;\n          width: 100%;\n          overflow: hidden;\n          display: flex;\n          justify-content: center;\n        }\n\n        .parallax {\n          background-image: var(--parallax-image-background);\n          background-attachment: fixed;\n          background-position: top center;\n          background-repeat: no-repeat;\n          background-size: cover;\n          width: 100%;\n          height: 100%;\n          justify-content: center;\n        }\n\n        #bgParallax {\n          display: flex;\n          align-items: center;\n        }\n\n        .title {\n          background: var(--parallax-title-background);\n          display: block;\n          padding: 20px 15px;\n          text-align: center;\n          width: 40%;\n          color: var(--parallax-title-font);\n          font-size: 32px;\n          position: absolute;\n          margin-top: 120px;\n        }\n\n        @media screen and (max-width: 900px) {\n          .title {\n            font-size: 16px;\n          }\n        }\n      </style>\n\n      <a href="[[url]]" target$="[[_urlTarget(url)]]">\n        <div class="parallax_container">\n          <div id="bgParallax" class="parallax">\n            <div class="title" id="titleParallax">\n              <slot name="parallax_heading"></slot>\n            </div>\n          </div>\n        </div>\n      </a>\n    '],t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}})));return u=function(){return n},n}var p=function(e){function p(){var e,t,i;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),t=this,e=!(i=o(p).call(this))||"object"!=typeof i&&"function"!=typeof i?c(t):i,n.afterNextRender(c(e),function(){this.HAXWiring=new r.HAXWiring,this.HAXWiring.setup(p.haxProperties,p.tag,this)}),e}var f,d,g;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(p,i.SchemaBehaviors(t.PolymerElement)),f=p,g=[{key:"template",get:function(){return t.html(u())}},{key:"tag",get:function(){return"parallax-image"}},{key:"properties",get:function(){var e={imageBg:{type:String,value:"",reflectToAttribute:!0},url:{type:String,value:"",reflectToAttribute:!0}};return s(o(p),"properties",this)&&(e=Object.assign(e,s(o(p),"properties",this))),e}},{key:"observers",get:function(){return["__updateStyles(imageBg)"]}},{key:"haxProperties",get:function(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Sample gizmo",description:"The user will be able to see this for selection in a UI.",icon:"av:play-circle-filled",color:"grey",groups:["Video","Media"],handles:[{type:"video",url:"source"}],meta:{author:"Your organization on github"}},settings:{quick:[{property:"title",title:"Title",description:"The title of the element",inputMethod:"textfield",icon:"editor:title"}],configure:[{property:"title",title:"Title",description:"The title of the element",inputMethod:"textfield",icon:"editor:title"}],advanced:[]}}}}],(d=[{key:"_urlTarget",value:function(e){if(e&&this._outsideLink(e))return"_blank";return!1}},{key:"_outsideLink",value:function(e){if(0!=e.indexOf("http"))return!1;var t=location.href,n=location.pathname,r=t.substring(0,t.indexOf(n));return 0!=e.indexOf(r)}},{key:"__updateStyles",value:function(e){this.updateStyles({"--parallax-image-background":"url(".concat(e,")")})}},{key:"ready",value:function(){s(o(p.prototype),"ready",this).call(this);var e=this.$.bgParallax,t=this.$.titleParallax;window.addEventListener("scroll",function(n){var r=-.2*window.scrollY,i=1.4*r;e.style.backgroundPosition="center ".concat(r,"px"),t.style.transform="translate3D(0, ".concat(i,"px, 0)")})}},{key:"disconnectedCallback",value:function(){window.removeEventListener("scroll",function(e){var t=-.2*window.scrollY,n=1.4*t;bgParallax.style.backgroundPosition="center ".concat(t,"px"),titleParallax.style.transform="translate3D(0, ".concat(n,"px, 0)")}),s(o(p.prototype),"disconnectedCallback",this).call(this)}}])&&a(f.prototype,d),g&&a(f,g),p}();window.customElements.define(p.tag,p),e.ParallaxImage=p,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=parallax-image.umd.js.map
