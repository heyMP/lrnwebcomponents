{"version":3,"file":"elmsln-loading.umd.js","sources":["elmsln-loading.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@lrnwebcomponents/lrn-icons/lrn-icons.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport { SimpleColors } from \"@lrnwebcomponents/simple-colors/simple-colors.js\";\n/**\n * `elmsln-loading`\n * A spinner to tell the user that something is loading.\n * This is just the spinner though and doesn't provide any text or anything else.\n *\n * @microcopy - language worth noting:\n *  - elmsln - an open source NGDLE to save education\n *\n * @customElement\n * @polymer\n * @polymerLegacy\n * @demo demo/index.html\n */\nclass ElmslnLoading extends PolymerElement {\n  static get tag() {\n    return \"elmsln-loading\";\n  }\n  static get properties() {\n    return {\n      /**\n       * materialize class names for color\n       */\n      color: {\n        type: String\n      },\n      /**\n       * Class for the color\n       */\n      hexColor: {\n        type: String,\n        computed: \"_getHexColor(color)\"\n      },\n      /**\n       * tiny, small, medium, large, epic sizing.\n       */\n      size: {\n        type: String,\n        reflectToAttribute: true,\n        value: \"medium\"\n      }\n    };\n  }\n  static get template() {\n    return html`\n      <style>\n        @-moz-keyframes spin {\n          100% {\n            -moz-transform: rotate(60deg);\n            filter: saturate(10) invert(0.9);\n          }\n        }\n        @-webkit-keyframes spin {\n          100% {\n            -webkit-transform: rotate(60deg);\n            filter: saturate(10) invert(0.9);\n          }\n        }\n        @keyframes spin {\n          100% {\n            -webkit-transform: rotate(60deg);\n            transform: rotate(60deg);\n          }\n        }\n        :host iron-icon {\n          display: block;\n          -webkit-animation: spin 1.25s ease-out infinite;\n          -moz-animation: spin 1.25s ease-out infinite;\n          animation: spin 1.25s ease-out infinite;\n        }\n        :host([size=\"tiny\"]) iron-icon {\n          width: 16px;\n          height: 16px;\n          -webkit-animation: spin 0.75s ease-out infinite;\n          -moz-animation: spin 0.75s ease-out infinite;\n          animation: spin 0.75s ease-out infinite;\n        }\n        :host([size=\"small\"]) iron-icon {\n          width: 32px;\n          height: 32px;\n          -webkit-animation: spin 1s ease-out infinite;\n          -moz-animation: spin 1s ease-out infinite;\n          animation: spin 1s ease-out infinite;\n        }\n        :host([size=\"medium\"]) iron-icon {\n          width: 64px;\n          height: 64px;\n          -webkit-animation: spin 1.25s ease-out infinite;\n          -moz-animation: spin 1.25s ease-out infinite;\n          animation: spin 1.25s ease-out infinite;\n        }\n        :host([size=\"large\"]) iron-icon {\n          width: 80px;\n          height: 80px;\n          -webkit-animation: spin 1.25s ease-out infinite;\n          -moz-animation: spin 1.25s ease-out infinite;\n          animation: spin 1.25s ease-out infinite;\n        }\n        :host([size=\"epic\"]) iron-icon {\n          width: 400px;\n          height: 400px;\n          -webkit-animation: spin 2s ease-out infinite;\n          -moz-animation: spin 2s ease-out infinite;\n          animation: spin 2s ease-out infinite;\n        }\n      </style>\n      <iron-icon icon=\"lrn:network\" style$=\"color:[[hexColor]]\"></iron-icon>\n    `;\n  }\n\n  _getHexColor(color) {\n    let name = color.replace(\"-text\", \"\");\n    let tmp = new SimpleColors();\n    if (tmp.colors[name]) {\n      return tmp.colors[name][6];\n    }\n    return \"#000000\";\n  }\n}\nwindow.customElements.define(ElmslnLoading.tag, ElmslnLoading);\nexport { ElmslnLoading };\n"],"names":["ElmslnLoading","PolymerElement","color","type","String","hexColor","computed","size","reflectToAttribute","value","html","name","replace","tmp","SimpleColors","colors","window","customElements","define","tag"],"mappings":"69GAqBMA,gaAAsBC,yDAEjB,0DAGA,CAILC,MAAO,CACLC,KAAMC,QAKRC,SAAU,CACRF,KAAMC,OACNE,SAAU,uBAKZC,KAAM,CACJJ,KAAMC,OACNI,oBAAoB,EACpBC,MAAO,mDAKJC,sDAkEIR,OACPS,EAAOT,EAAMU,QAAQ,QAAS,IAC9BC,EAAM,IAAIC,sBACVD,EAAIE,OAAOJ,GACNE,EAAIE,OAAOJ,GAAM,GAEnB,+CAGXK,OAAOC,eAAeC,OAAOlB,EAAcmB,IAAKnB"}