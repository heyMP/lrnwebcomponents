!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@polymer/polymer/polymer-element.js"),require("@polymer/polymer/lib/utils/render-status.js"),require("@polymer/paper-styles/paper-styles.js"),require("@polymer/iron-flex-layout/iron-flex-layout.js"),require("@polymer/iron-resizable-behavior/iron-resizable-behavior.js"),require("@polymer/polymer/lib/legacy/class.js")):"function"==typeof define&&define.amd?define(["exports","@polymer/polymer/polymer-element.js","@polymer/polymer/lib/utils/render-status.js","@polymer/paper-styles/paper-styles.js","@polymer/iron-flex-layout/iron-flex-layout.js","@polymer/iron-resizable-behavior/iron-resizable-behavior.js","@polymer/polymer/lib/legacy/class.js"],r):r((e=e||self).CircleProgress={},e.polymerElement_js,e.renderStatus_js,null,null,e.ironResizableBehavior_js,e.class_js)}(this,function(e,r,t,n,o,s,i){"use strict";function a(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function c(e,r){return(c=Object.setPrototypeOf||function(e,r){return e.__proto__=r,e})(e,r)}function u(e,r){return!r||"object"!=typeof r&&"function"!=typeof r?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):r}function p(e,r,t){return(p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,r,t){var n=function(e,r){for(;!Object.prototype.hasOwnProperty.call(e,r)&&null!==(e=l(e)););return e}(e,r);if(n){var o=Object.getOwnPropertyDescriptor(n,r);return o.get?o.get.call(t):o.value}})(e,r,t||e)}function f(){var e,r,t=(e=['\n      <style include="paper-material-styles">\n        :host {\n          @apply --layout-vertical;\n          @apply --layout-center-center;\n          position: relative;\n          width: var(--circle-progress-width, 64px);\n          height: var(--circle-progress-height, 64px);\n          margin: 24px;\n          border-radius: 50%;\n        }\n        svg {\n          position: absolute;\n          top: 0;\n          left: 0;\n          display: none;\n        }\n        .circle-background {\n          stroke: var(--circle-progress-bg-stroke-color, --paper-grey-100);\n        }\n        .circle-foreground {\n          transition: stroke-dashoffset var(--circle-progress-transition, 150ms);\n          stroke: var(--circle-progress-stroke-color, blue);\n          stroke-linecap: var(--circle-progress-stroke-linecap, round);\n        }\n      </style>\n\n      <svg id="circle" width="100%" height="100%">\n        <circle\n          class="circle-background"\n          r$="[[_radius]]"\n          cx$="[[_cx]]"\n          cy$="[[_cy]]"\n          fill="transparent"\n          stroke-width$="[[strokeWidth]]"\n        ></circle>\n        <circle\n          class="circle-foreground"\n          r$="[[_radius]]"\n          cx$="[[_cx]]"\n          cy$="[[_cy]]"\n          fill="transparent"\n          stroke-width$="[[strokeWidth]]"\n          stroke-dasharray$="[[_dasharray]]"\n          stroke-dashoffset$="[[_dashoffset]]"\n          transform$="[[_transform]]"\n        ></circle>\n      </svg>\n      <slot></slot>\n    '],(r=['\n      <style include="paper-material-styles">\n        :host {\n          @apply --layout-vertical;\n          @apply --layout-center-center;\n          position: relative;\n          width: var(--circle-progress-width, 64px);\n          height: var(--circle-progress-height, 64px);\n          margin: 24px;\n          border-radius: 50%;\n        }\n        svg {\n          position: absolute;\n          top: 0;\n          left: 0;\n          display: none;\n        }\n        .circle-background {\n          stroke: var(--circle-progress-bg-stroke-color, --paper-grey-100);\n        }\n        .circle-foreground {\n          transition: stroke-dashoffset var(--circle-progress-transition, 150ms);\n          stroke: var(--circle-progress-stroke-color, blue);\n          stroke-linecap: var(--circle-progress-stroke-linecap, round);\n        }\n      </style>\n\n      <svg id="circle" width="100%" height="100%">\n        <circle\n          class="circle-background"\n          r\\$="[[_radius]]"\n          cx\\$="[[_cx]]"\n          cy\\$="[[_cy]]"\n          fill="transparent"\n          stroke-width\\$="[[strokeWidth]]"\n        ></circle>\n        <circle\n          class="circle-foreground"\n          r\\$="[[_radius]]"\n          cx\\$="[[_cx]]"\n          cy\\$="[[_cy]]"\n          fill="transparent"\n          stroke-width\\$="[[strokeWidth]]"\n          stroke-dasharray\\$="[[_dasharray]]"\n          stroke-dashoffset\\$="[[_dashoffset]]"\n          transform\\$="[[_transform]]"\n        ></circle>\n      </svg>\n      <slot></slot>\n    '])||(r=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(r)}})));return f=function(){return t},t}var y=function(e){function n(){return function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,n),u(this,l(n).apply(this,arguments))}var o,y,d;return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(r&&r.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),r&&c(e,r)}(n,i.mixinBehaviors([s.IronResizableBehavior],r.PolymerElement)),o=n,d=[{key:"template",get:function(){return r.html(f())}},{key:"tag",get:function(){return"circle-progress"}},{key:"properties",get:function(){var e={value:{name:"value",type:"Number",value:0},max:{name:"max",type:"Number",value:100},strokeWidth:{name:"strokeWidth",type:"Number",value:4},angle:{name:"angle",type:"Number",value:-90},_cx:{name:"_cx",type:"Number",value:null},_cy:{name:"_cy",type:"Number",value:null},_radius:{name:"_radius",type:"Number",computed:"_computeRadius(_cx, _cy, strokeWidth)"},_transform:{name:"_transform",type:"String",computed:"_computeTransform(angle, _cx, _cy)"},_dasharray:{name:"_dasharray",type:"Number",computed:"_computeDashArray(_radius)"},_dashoffset:{name:"_dashoffset",type:"Number",computed:"_computeDashOffset(value, max, _dasharray)"}};return p(l(n),"properties",this)&&(e=Object.assign(e,p(l(n),"properties",this))),e}}],(y=[{key:"connectedCallback",value:function(){p(l(n.prototype),"connectedCallback",this).call(this),t.afterNextRender(this,function(){this.addEventListener("iron-resize",this._onIronResize.bind(this))})}},{key:"disconnectedCallback",value:function(){this.removeEventListener("iron-resize",this._onIronResize.bind(this)),p(l(n.prototype),"disconnectedCallback",this).call(this)}},{key:"_computeDashArray",value:function(e){return 2*Math.PI*e}},{key:"_computeDashOffset",value:function(e,r,t){return(1-e/r)*t}},{key:"_computeRadius",value:function(e,r,t){return e&&r?Math.max(0,Math.min(e,r)-t/2):0}},{key:"_computeTransform",value:function(e,r,t){return r&&t?"rotate("+e+", "+r+", "+t+")":""}},{key:"_onIronResize",value:function(){this.offsetWidth&&this.offsetHeight&&(this._cx=this.offsetWidth/2,this._cy=this.offsetHeight/2,this.$.circle.style.display="block")}}])&&a(o.prototype,y),d&&a(o,d),n}();window.customElements.define(y.tag,y),e.CircleProgress=y,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=circle-progress.umd.js.map
