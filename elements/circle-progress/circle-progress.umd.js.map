{"version":3,"file":"circle-progress.umd.js","sources":["circle-progress.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport \"@polymer/paper-styles/paper-styles.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout.js\";\nimport { IronResizableBehavior } from \"@polymer/iron-resizable-behavior/iron-resizable-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\n/**\n * `circle-progress`\n * `Polymer-based web component displaying a circular progress bar.`\n *\n * @demo demo/index.html\n */\nclass CircleProgress extends mixinBehaviors(\n  [IronResizableBehavior],\n  PolymerElement\n) {\n  static get template() {\n    return html`\n      <style include=\"paper-material-styles\">\n        :host {\n          @apply --layout-vertical;\n          @apply --layout-center-center;\n          position: relative;\n          width: var(--circle-progress-width, 64px);\n          height: var(--circle-progress-height, 64px);\n          margin: 24px;\n          border-radius: 50%;\n        }\n        svg {\n          position: absolute;\n          top: 0;\n          left: 0;\n          display: none;\n        }\n        .circle-background {\n          stroke: var(--circle-progress-bg-stroke-color, --paper-grey-100);\n        }\n        .circle-foreground {\n          transition: stroke-dashoffset var(--circle-progress-transition, 150ms);\n          stroke: var(--circle-progress-stroke-color, blue);\n          stroke-linecap: var(--circle-progress-stroke-linecap, round);\n        }\n      </style>\n\n      <svg id=\"circle\" width=\"100%\" height=\"100%\">\n        <circle\n          class=\"circle-background\"\n          r\\$=\"[[_radius]]\"\n          cx\\$=\"[[_cx]]\"\n          cy\\$=\"[[_cy]]\"\n          fill=\"transparent\"\n          stroke-width\\$=\"[[strokeWidth]]\"\n        ></circle>\n        <circle\n          class=\"circle-foreground\"\n          r\\$=\"[[_radius]]\"\n          cx\\$=\"[[_cx]]\"\n          cy\\$=\"[[_cy]]\"\n          fill=\"transparent\"\n          stroke-width\\$=\"[[strokeWidth]]\"\n          stroke-dasharray\\$=\"[[_dasharray]]\"\n          stroke-dashoffset\\$=\"[[_dashoffset]]\"\n          transform\\$=\"[[_transform]]\"\n        ></circle>\n      </svg>\n      <slot></slot>\n    `;\n  }\n\n  static get tag() {\n    return \"circle-progress\";\n  }\n\n  static get properties() {\n    let props = {\n      /**\n       * Value of circular progress bar.\n       */\n      value: {\n        name: \"value\",\n        type: \"Number\",\n        value: 0\n      },\n\n      /**\n       * Maximum of value.\n       */\n      max: {\n        name: \"max\",\n        type: \"Number\",\n        value: 100\n      },\n\n      /**\n       * Stroke width of circle.\n       */\n      strokeWidth: {\n        name: \"strokeWidth\",\n        type: \"Number\",\n        value: 4\n      },\n\n      /**\n       * Starting angle of the progress.\n       */\n      angle: {\n        name: \"angle\",\n        type: \"Number\",\n        value: -90\n      },\n\n      _cx: {\n        name: \"_cx\",\n        type: \"Number\",\n        value: null\n      },\n\n      _cy: {\n        name: \"_cy\",\n        type: \"Number\",\n        value: null\n      },\n\n      _radius: {\n        name: \"_radius\",\n        type: \"Number\",\n        computed: \"_computeRadius(_cx, _cy, strokeWidth)\"\n      },\n\n      _transform: {\n        name: \"_transform\",\n        type: \"String\",\n        computed: \"_computeTransform(angle, _cx, _cy)\"\n      },\n\n      _dasharray: {\n        name: \"_dasharray\",\n        type: \"Number\",\n        computed: \"_computeDashArray(_radius)\"\n      },\n\n      _dashoffset: {\n        name: \"_dashoffset\",\n        type: \"Number\",\n        computed: \"_computeDashOffset(value, max, _dasharray)\"\n      }\n    };\n    if (super.properties) {\n      props = Object.assign(props, super.properties);\n    }\n    return props;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function() {\n      this.addEventListener(\"iron-resize\", this._onIronResize.bind(this));\n    });\n  }\n  disconnectedCallback() {\n    this.removeEventListener(\"iron-resize\", this._onIronResize.bind(this));\n    super.disconnectedCallback();\n  }\n\n  _computeDashArray(radius) {\n    return 2 * Math.PI * radius;\n  }\n\n  _computeDashOffset(value, max, dasharray) {\n    return (1 - value / max) * dasharray;\n  }\n\n  _computeRadius(cx, cy, strokeWidth) {\n    return cx && cy ? Math.max(0, Math.min(cx, cy) - strokeWidth / 2) : 0;\n  }\n\n  _computeTransform(angle, cx, cy) {\n    return cx && cy ? \"rotate(\" + angle + \", \" + cx + \", \" + cy + \")\" : \"\";\n  }\n\n  _onIronResize() {\n    if (this.offsetWidth && this.offsetHeight) {\n      this._cx = this.offsetWidth / 2;\n      this._cy = this.offsetHeight / 2;\n      this.$.circle.style.display = \"block\";\n    }\n  }\n}\nwindow.customElements.define(CircleProgress.tag, CircleProgress);\nexport { CircleProgress };\n"],"names":["CircleProgress","mixinBehaviors","IronResizableBehavior","PolymerElement","html","props","value","name","type","max","strokeWidth","angle","_cx","_cy","_radius","computed","_transform","_dasharray","_dashoffset","Object","assign","afterNextRender","this","addEventListener","_onIronResize","bind","removeEventListener","radius","Math","PI","dasharray","cx","cy","min","offsetWidth","offsetHeight","$","circle","style","display","window","customElements","define","tag"],"mappings":"67JAgBMA,gaAAuBC,iBAC3B,CAACC,yBACDC,gEAGSC,8CAqDA,yDAIHC,EAAQ,CAIVC,MAAO,CACLC,KAAM,QACNC,KAAM,SACNF,MAAO,GAMTG,IAAK,CACHF,KAAM,MACNC,KAAM,SACNF,MAAO,KAMTI,YAAa,CACXH,KAAM,cACNC,KAAM,SACNF,MAAO,GAMTK,MAAO,CACLJ,KAAM,QACNC,KAAM,SACNF,OAAQ,IAGVM,IAAK,CACHL,KAAM,MACNC,KAAM,SACNF,MAAO,MAGTO,IAAK,CACHN,KAAM,MACNC,KAAM,SACNF,MAAO,MAGTQ,QAAS,CACPP,KAAM,UACNC,KAAM,SACNO,SAAU,yCAGZC,WAAY,CACVT,KAAM,aACNC,KAAM,SACNO,SAAU,sCAGZE,WAAY,CACVV,KAAM,aACNC,KAAM,SACNO,SAAU,8BAGZG,YAAa,CACXX,KAAM,cACNC,KAAM,SACNO,SAAU,kFAIZV,EAAQc,OAAOC,OAAOf,8BAEjBA,yGAIPgB,kBAAgBC,KAAM,gBACfC,iBAAiB,cAAeD,KAAKE,cAAcC,KAAKH,6DAI1DI,oBAAoB,cAAeJ,KAAKE,cAAcC,KAAKH,0GAIhDK,UACT,EAAIC,KAAKC,GAAKF,6CAGJrB,EAAOG,EAAKqB,UACrB,EAAIxB,EAAQG,GAAOqB,yCAGdC,EAAIC,EAAItB,UACdqB,GAAMC,EAAKJ,KAAKnB,IAAI,EAAGmB,KAAKK,IAAIF,EAAIC,GAAMtB,EAAc,GAAK,4CAGpDC,EAAOoB,EAAIC,UACpBD,GAAMC,EAAK,UAAYrB,EAAQ,KAAOoB,EAAK,KAAOC,EAAK,IAAM,2CAIhEV,KAAKY,aAAeZ,KAAKa,oBACtBvB,IAAMU,KAAKY,YAAc,OACzBrB,IAAMS,KAAKa,aAAe,OAC1BC,EAAEC,OAAOC,MAAMC,QAAU,8CAIpCC,OAAOC,eAAeC,OAAO1C,EAAe2C,IAAK3C"}