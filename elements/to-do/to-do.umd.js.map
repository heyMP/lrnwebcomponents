{"version":3,"file":"to-do.umd.js","sources":["to-do.umd.js"],"sourcesContent":["import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport { SchemaBehaviors } from \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\n/**\n * `to-do`\n * @demo demo/index.html\n */\nclass ToDo extends SchemaBehaviors(PolymerElement) {\n  constructor() {\n    super();\n    import(\"@polymer/paper-checkbox/paper-checkbox.js\");\n    import(\"@polymer/paper-button/paper-button.js\");\n    import(\"@polymer/paper-card/paper-card.js\");\n    import(\"@polymer/paper-input/paper-input.js\");\n    afterNextRender(this, function() {\n      this.HAXWiring = new HAXWiring();\n      this.HAXWiring.setup(ToDo.haxProperties, ToDo.tag, this);\n    });\n  }\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n        :host([hide-form]) ul {\n          border: 1px solid black;\n        }\n        paper-card {\n          width: 100%;\n          padding: 8px;\n        }\n        .task-list-wrapper {\n          width: 100%;\n          height: 100%;\n          border: 2px solid black;\n          list-style: none;\n          padding: 0;\n        }\n        .task-list-wrapper li {\n          padding: 8px;\n        }\n        .task-list-wrapper li:nth-child(even) {\n          background-color: #f5f5f5;\n        }\n        .task-list-wrapper li:nth-child(odd) {\n          background-color: #e5e5e5;\n        }\n        .task-list-wrapper li:hover {\n          background-color: #ffffff;\n        }\n        .task-list-wrapper li:active {\n          background-color: #ffffff;\n        }\n        .task-list-wrapper li:focus {\n          background-color: #ffffff;\n        }\n        h3 {\n          margin: 4px;\n          padding: 0;\n          font-size: 20px;\n        }\n      </style>\n      <paper-card heading=\"[[name]]\" elevation=\"2\">\n        <div class=\"card-content\">\n          <div hidden\\$=\"[[hideForm]]\">\n            <paper-input label=\"Task to accomplish\" id=\"itemtext\"></paper-input>\n            <paper-button raised=\"\" id=\"itembutton\" on-click=\"_addItemToList\"\n              >Add item</paper-button\n            >\n          </div>\n          <ul class=\"task-list-wrapper\">\n            <template is=\"dom-repeat\" items=\"[[items]]\" as=\"item\">\n              <li data-item-id\\$=\"[[item.id]]\">\n                <paper-checkbox\n                  checked=\"{{item.value}}\"\n                  disabled=\"[[item.disabled]]\"\n                  >[[item.label]]</paper-checkbox\n                >\n              </li>\n            </template>\n          </ul>\n        </div>\n      </paper-card>\n    `;\n  }\n  static get tag() {\n    return \"to-do\";\n  }\n  static get observers() {\n    return [\"_valueChanged(items.*)\"];\n  }\n  static get properties() {\n    let props = {\n      /**\n       * Allow for hiding the input form for new data.\n       */\n      hideForm: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Whether or not the list of items is disabled\n       * checkboxes.\n       */\n      disabledList: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Name of this to do list\n       */\n      name: {\n        type: String,\n        value: \"To do list\"\n      },\n      /**\n       * Items\n       */\n      items: {\n        type: Array,\n        value: [],\n        notify: true\n      }\n    };\n    if (super.properties) {\n      props = Object.assign(props, super.properties);\n    }\n    return props;\n  }\n  /**\n   * Ensure the values change.\n   */\n  _valueChanged(e) {\n    for (var i in e.base) {\n      for (var j in e.base[i]) {\n        this.notifyPath(\"items.\" + i + \".\" + j);\n      }\n    }\n  }\n  /**\n   * Add a new item to the list.\n   */\n  _addItemToList(e) {\n    if (\n      this.shadowRoot.querySelector(\"#itemtext\").value != \"\" &&\n      typeof this.shadowRoot.querySelector(\"#itemtext\").value !==\n        typeof undefined\n    ) {\n      this.push(\"items\", {\n        label: this.shadowRoot.querySelector(\"#itemtext\").value,\n        value: false,\n        disabled: this.disabledList,\n        id: \"item-id-\" + this.items.length\n      });\n      this.shadowRoot.querySelector(\"#itemtext\").value = \"\";\n    }\n  }\n  static get haxProperties() {\n    return {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"To do list\",\n        description: \"A list of things to do so people can keep calm.\",\n        icon: \"icons:list\",\n        color: \"grey\",\n        groups: [\"List\"],\n        handles: [],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"name\",\n            title: \"Name\",\n            description: \"The name of this to do list\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          }\n        ],\n        configure: [\n          {\n            property: \"name\",\n            title: \"Name\",\n            description: \"The name of this to do list\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"items\",\n            title: \"List of items\",\n            description: \"List of items to display in our list.\",\n            inputMethod: \"array\",\n            properties: [\n              {\n                property: \"label\",\n                title: \"Task\",\n                description: \"Name of the task\",\n                inputMethod: \"textfield\",\n                required: true\n              },\n              {\n                property: \"value\",\n                title: \"Done\",\n                description: \"Completion state\",\n                inputMethod: \"boolean\"\n              }\n            ]\n          }\n        ],\n        advanced: []\n      }\n    };\n  }\n}\nwindow.customElements.define(ToDo.tag, ToDo);\nexport { ToDo };\n"],"names":["ToDo","afterNextRender","HAXWiring","setup","haxProperties","tag","this","SchemaBehaviors","PolymerElement","html","props","hideForm","type","Boolean","value","reflectToAttribute","disabledList","name","String","items","Array","notify","Object","assign","canScale","canPosition","canEditSource","gizmo","title","description","icon","color","groups","handles","meta","author","settings","quick","property","inputMethod","configure","properties","required","advanced","e","i","base","j","notifyPath","shadowRoot","querySelector","_typeof","push","label","disabled","id","length","window","customElements","define"],"mappings":"6hLAQMA,uOAGK,oDACA,gDACA,4CACA,uCACPC,uBAAsB,gBACfC,UAAY,IAAIA,iBAChBA,UAAUC,MAAMH,EAAKI,cAAeJ,EAAKK,IAAKC,gQATtCC,kBAAgBC,gEAaxBC,8CAmEA,gDAGA,CAAC,iEAGJC,EAAQ,CAIVC,SAAU,CACRC,KAAMC,QACNC,OAAO,EACPC,oBAAoB,GAMtBC,aAAc,CACZJ,KAAMC,QACNC,OAAO,EACPC,oBAAoB,GAKtBE,KAAM,CACJL,KAAMM,OACNJ,MAAO,cAKTK,MAAO,CACLP,KAAMQ,MACNN,MAAO,GACPO,QAAQ,uCAIVX,EAAQY,OAAOC,OAAOb,8BAEjBA,8CA+BA,CACLc,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLC,MAAO,aACPC,YAAa,kDACbC,KAAM,aACNC,MAAO,OACPC,OAAQ,CAAC,QACTC,QAAS,GACTC,KAAM,CACJC,OAAQ,qBAGZC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,OACVV,MAAO,OACPC,YAAa,8BACbU,YAAa,YACbT,KAAM,iBAGVU,UAAW,CACT,CACEF,SAAU,OACVV,MAAO,OACPC,YAAa,8BACbU,YAAa,YACbT,KAAM,gBAER,CACEQ,SAAU,QACVV,MAAO,gBACPC,YAAa,wCACbU,YAAa,QACbE,WAAY,CACV,CACEH,SAAU,QACVV,MAAO,OACPC,YAAa,mBACbU,YAAa,YACbG,UAAU,GAEZ,CACEJ,SAAU,QACVV,MAAO,OACPC,YAAa,mBACbU,YAAa,cAKrBI,SAAU,gDAjFFC,OACP,IAAIC,KAAKD,EAAEE,SACT,IAAIC,KAAKH,EAAEE,KAAKD,QACdG,WAAW,SAAWH,EAAI,IAAME,0CAO5BH,GAEyC,IAApDtC,KAAK2C,WAAWC,cAAc,aAAapC,qBAC3CqC,EAAO7C,KAAK2C,WAAWC,cAAc,aAAapC,cAG7CsC,KAAK,QAAS,CACjBC,MAAO/C,KAAK2C,WAAWC,cAAc,aAAapC,MAClDA,OAAO,EACPwC,SAAUhD,KAAKU,aACfuC,GAAI,WAAajD,KAAKa,MAAMqC,cAEzBP,WAAWC,cAAc,aAAapC,MAAQ,yCAgEzD2C,OAAOC,eAAeC,OAAO3D,EAAKK,IAAKL"}