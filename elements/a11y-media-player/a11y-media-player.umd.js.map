{"version":3,"file":"a11y-media-player.umd.js","sources":["lib/a11y-media-behaviors.js","lib/a11y-media-state-manager.js","lib/a11y-media-button.js","lib/a11y-media-controls.js","lib/a11y-media-html5.js","lib/a11y-media-transcript-cue.js","lib/a11y-media-transcript.js","lib/a11y-media-transcript-controls.js","lib/a11y-media-youtube.js","a11y-media-player.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { SimpleColors } from \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"@lrnwebcomponents/responsive-utility/responsive-utility.js\";\n\nexport { A11yMediaBehaviors };\n/**\n * `a11y-media-behaviors`\n * `A set of properties common to player and transcript a11y-media components.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @extends SimpleColors\n * @customElement\n * @polymer\n */\nclass A11yMediaBehaviors extends SimpleColors {\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-behaviors\";\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * Is this an audio file?\n       */\n      audioOnly: {\n        name: \"audioOnly\",\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * autoplay is an option,\n       * but generally not recommended for a11y\n       */\n      autoplay: {\n        name: \"autoplay\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * show closed captions\n       */\n      cc: {\n        name: \"cc\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * disable transcript print button\n       */\n      disablePrintButton: {\n        name: \"disablePrintButton\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * disable transcript search feature\n       */\n      disableSearch: {\n        name: \"disableSearch\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * disable autoscrolling as transcript plays\n       */\n      disableScroll: {\n        name: \"disableScroll\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * disables seeking\n       */\n      disableSeek: {\n        name: \"disableSeek\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Does the player have an interactive transcript?\n       */\n      hasTranscript: {\n        name: \"hasTranscript\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * The height of the media player.\n       */\n      height: {\n        name: \"height\",\n        type: String,\n        value: null\n      },\n\n      /**\n       * is YouTube?\n       */\n      isYoutube: {\n        name: \"isYoutube\",\n        type: Boolean,\n        computed: \"_hasAttribute(youtubeId)\"\n      },\n\n      /**\n       * Language\n       */\n      lang: {\n        name: \"lang\",\n        type: String,\n        value: \"en\"\n      },\n\n      /**\n       * custom localization settings\n       */\n      localization: {\n        name: \"localization\",\n        type: Object,\n        value: {}\n      },\n\n      /**\n       * default localization settings\n       */\n      localizationDefaults: {\n        name: \"localizationDefaults\",\n        type: Object,\n        value: {\n          audio: { label: \"Audio\" },\n          autoScroll: {\n            label: \"Scroll transcript with video.\",\n            icon: \"swap-vert\"\n          },\n          captions: {\n            label: \"Closed Captions\",\n            icon: \"av:closed-caption\",\n            off: \"Off\"\n          },\n          download: {\n            label: \"Download the transcript.\",\n            icon: \"file-download\"\n          },\n          forward: {\n            label: \"Forward\",\n            icon: \"av:fast-forward\"\n          },\n          fullscreen: {\n            label: \"Fullscreen\",\n            icon: \"fullscreen\"\n          },\n          loading: {\n            label: \"Loading...\"\n          },\n          loop: {\n            label: \"Loop Playback\"\n          },\n          mute: {\n            label: \"Mute\",\n            icon: \"av:volume-up\"\n          },\n          nextResult: {\n            label: \"Next\",\n            icon: \"arrow-forward\"\n          },\n          pause: {\n            label: \"Pause\",\n            icon: \"av:pause\"\n          },\n          play: {\n            label: \"Play\",\n            icon: \"av:play-arrow\"\n          },\n          prevResult: {\n            label: \"Previous\",\n            icon: \"arrow-back\"\n          },\n          print: {\n            label: \"Print the transcript.\",\n            icon: \"print\"\n          },\n          restart: {\n            label: \"Restart\",\n            icon: \"av:replay\"\n          },\n          rewind: {\n            label: \"Backward\",\n            icon: \"av:fast-rewind\"\n          },\n          search: {\n            label: \"Search the transcript.\",\n            icon: \"search\"\n          },\n          seekSlider: {\n            label: \"Seek Slider\"\n          },\n          settings: {\n            label: \"Settings\",\n            icon: \"settings\"\n          },\n          speed: {\n            label: \"Speed %\"\n          },\n          transcript: {\n            label: \"Transcript\",\n            icon: \"description\",\n            loading: \"Loading the transcript(s)...\",\n            skip: \"Skip to the transcript.\"\n          },\n          unmute: {\n            label: \"Unmute\",\n            icon: \"av:volume-off\"\n          },\n          video: {\n            label: \"Video\"\n          },\n          volume: {\n            label: \"Volume\"\n          },\n          youTubeLoading: {\n            label: \"Ready.\"\n          },\n          youTubeTranscript: {\n            label: \"Transcript will load once media plays.\"\n          }\n        },\n        readOnly: true\n      },\n\n      /**\n       * Loop the video?\n       */\n      loop: {\n        name: \"loop\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Dash.js manifest source?\n       */\n      manifest: {\n        name: \"manifest\",\n        type: String,\n        value: null\n      },\n\n      /**\n       * the media to be manipulated\n       */\n      media: {\n        name: \"media\",\n        type: Object,\n        value: null\n      },\n\n      /**\n       * optional title of media (shows when printed)\n       */\n      mediaTitle: {\n        name: \"mediaTitle\",\n        type: String,\n        value: \"\"\n      },\n\n      /**\n       * Is audio muted?\n       */\n      muted: {\n        name: \"muted\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Playback rate where 1 is normal speed, 0.5 is half-speed, and 2 is double speed\n       */\n      playbackRate: {\n        name: \"playbackRate\",\n        type: Number,\n        value: 1\n      },\n\n      /**\n       * Is media playing?\n       */\n      playing: {\n        name: \"playing\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * play/pause button\n       */\n      playPause: {\n        name: \"playPause\",\n        type: Object\n      },\n\n      /**\n       * Preload the \"sources\": auto, metadata (default), or none.\n       */\n      preload: {\n        name: \"preload\",\n        type: String,\n        value: \"metadata\"\n      },\n\n      /**\n       * the search tool for the transcript\n       */\n      search: {\n        name: \"search\",\n        type: Object,\n        value: null\n      },\n\n      /**\n       * Is stand-alone player (without transcript)?\n       */\n      standAlone: {\n        name: \"standAlone\",\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * status\n       */\n      status: {\n        name: \"status\",\n        type: String,\n        value: \"loading...\"\n      },\n      /**\n       * the selected track\n       */\n      selectedTrack: {\n        name: \"selectedTrack\",\n        type: Object,\n        value: null\n      },\n      /**\n       * id of the selected track\n       */\n      selectedTrackID: {\n        name: \"selectedTrackID\",\n        type: Number,\n        value: null\n      },\n      /**\n       * target of the controls\n       */\n      target: {\n        name: \"target\",\n        type: Object,\n        value: null\n      },\n      /**\n       * array of tracks and cues\n       */\n      tracks: {\n        name: \"tracks\",\n        type: Array,\n        value: null\n      },\n      /**\n       * Range is 0 to 100. Default should not be loud enough to overpower screen readers.\n       */\n      volume: {\n        name: \"volume\",\n        type: Number,\n        value: 70\n      },\n      /**\n       * The width of the media player.\n       */\n      width: {\n        name: \"width\",\n        type: String,\n        value: null\n      },\n      /**\n       * the id for the video\n       */\n      youtubeId: {\n        name: \"youtubeId\",\n        type: String,\n        value: null\n      },\n      /**\n       * the YouTube player object\n       */\n      youTube: {\n        name: \"youTube\",\n        type: Object,\n        value: {}\n      }\n    };\n  }\n\n  /**\n   * gets behaviors\n   */\n  static get behaviors() {\n    return [SimpleColors, ResponsiveUtility];\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * returns true if an attribute is not null\n   *\n   * @param {object} the attribute to check\n   * @returns {boolean} attr !== undefined && attr !== null\n   */\n  _hasAttribute(attr) {\n    return attr !== undefined && attr !== null;\n  }\n\n  /**\n   * returns true if an attribute is set to a value\n   *\n   * @param {object} the attribute to check\n   * @param {object} the value to check\n   * @returns {boolean} attr === val\n   */\n\n  _testAttribute(attr, val) {\n    return attr === val;\n  }\n\n  /**\n   * calls responsive-utility to get parent's responsive size\n   *\n   * @param {object} a set of responsive for options, eg: `{element: root, attribute: \"responsive-size\", relativeToParent: true}`\n   */\n  _addResponsiveUtility(options) {\n    let root = this;\n    window.ResponsiveUtility.requestAvailability();\n    window.dispatchEvent(\n      new CustomEvent(\"responsive-element\", {\n        detail:\n          options !== undefined\n            ? options\n            : {\n                element: root,\n                attribute: \"responsive-size\",\n                relativeToParent: true\n              }\n      })\n    );\n  }\n\n  /**\n   * converts time in millesconds to HH:MM:SS\n   *\n   * @param {float} the elapsed time, in seconds\n   * @param {float} the duration, in seconds\n   * @returns {string} a human-readable string of elapsed time/duration in HH:MM:SS\n   *\n   */\n  _getHHMMSS(val, max) {\n    max = max === undefined ? val : max;\n    let a = val => {\n        return val < 10 ? \"0\" + val : val;\n      },\n      b = (val, i, none) => {\n        return max >= i ? a(Math.floor(val / i)) + \":\" : none;\n      },\n      c = val => {\n        return val < 100 ? val + \"0\" : val;\n      };\n    return (\n      b(val, 3600, \"\") + b(val % 3600, 60, \"00:\") + a(Math.round(val % 60))\n    );\n  }\n\n  /**\n   * gets the localization by compaing the localization set to the defaults\n   *\n   * @param {object} the localization object\n   * @param {string} the key to search for\n   * @param {string} the subkey to search for\n   * @returns {string} the default value for [key][subkey], unless localization[key][subkey] exists\n   */\n  _getLocal(key, subkey) {\n    let local = \"\",\n      localization = this.localization;\n    if (\n      localization !== undefined &&\n      localization[key] !== undefined &&\n      localization[key][subkey] !== undefined\n    ) {\n      local = localization[key][subkey];\n    } else if (\n      this.localizationDefaults !== undefined &&\n      this.localizationDefaults[key] !== undefined &&\n      this.localizationDefaults[key][subkey] !== undefined\n    ) {\n      local = this.localizationDefaults[key][subkey];\n    }\n    return local;\n  }\n\n  /**\n   * handles the print transcript button\n   */\n  _handlePrintClick(e) {\n    this.dispatchEvent(new CustomEvent(\"print-transcript\", { detail: this }));\n  }\n\n  /**\n   * handles the print transcript button\n   */\n  _handleDownloadClick(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"download-transcript\", { detail: this })\n    );\n  }\n\n  /**\n   * handles transcript printing\n   */\n  _handleDownload(e) {\n    let root = this;\n    root.dispatchEvent(\n      new CustomEvent(\"downloading-transcript\", { detail: root })\n    );\n    root.$.transcript.download(root.mediaTitle);\n  }\n\n  /**\n   * handles transcript printing\n   */\n  _handlePrinting(e) {\n    let root = this;\n    root.dispatchEvent(\n      new CustomEvent(\"printing-transcript\", { detail: root })\n    );\n    root.$.transcript.print(root.mediaTitle);\n  }\n}\nwindow.customElements.define(A11yMediaBehaviors.tag, A11yMediaBehaviors);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-resizable-behavior/iron-resizable-behavior.js\";\n\n// register globally so we can make sure there is only one\nwindow.A11yMediaStateManager = window.A11yMediaStateManager || {};\n// request if this exists. This helps invoke the element existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same modal\nwindow.A11yMediaStateManager.requestAvailability = () => {\n  if (!window.A11yMediaStateManager.instance) {\n    window.A11yMediaStateManager.instance = document.createElement(\n      \"a11y-media-state-manager\"\n    );\n    document.body.appendChild(window.A11yMediaStateManager.instance);\n  }\n  return window.A11yMediaStateManager.instance;\n};\n/**\n * `a11y-media-state-manager`\n * `A utility that manages the state of multiple a11y-media-players on a single page.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n */\nclass A11yMediaStateManager extends PolymerElement {\n  /* REQUIRED FOR TOOLING DO NOT TOUCH */\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-state-manager\";\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * Stores an array of all the players on the page.\n       */\n      players: {\n        type: Array,\n        value: []\n      },\n      /**\n       * Is the screenfull library loaded and screenfull constant set.\n       */\n      screenfullLoaded: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Manages which player is sticky.\n       */\n      stickyPlayer: {\n        type: Object,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Makes sure there is a utility ready and listening for elements.\n   */\n  constructor() {\n    super();\n    let root = this;\n    root.__playerLoader = function(e) {\n      root.players.push(e.detail);\n    };\n\n    // sets the instance to the current instance\n    if (!window.A11yMediaStateManager.instance) {\n      window.A11yMediaStateManager.instance = this;\n\n      // listen for a players added to the page\n      window.addEventListener(\"a11y-player\", root.__playerLoader);\n    }\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   * Makes sure there is a utility ready and listening for elements.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    this.__stickyManager = function(e) {\n      root.setStickyPlayer(e.detail);\n    };\n    this.__scrollChecker = function(e) {\n      root._checkScroll();\n    };\n\n    // listen for a player that starts playing,\n    // make it the player that can be sticky,\n    // and check for concurrent players\n    window.addEventListener(\"a11y-player-playing\", root.__stickyManager);\n\n    // listen for scrolling and find out if a player is off-screen\n    window.addEventListener(\"scroll\", root.__scrollChecker);\n  }\n\n  /**\n   * if a player disallows concurrent players, pauses other players\n   */\n  checkConcurrentPlayers() {\n    let root = this,\n      player = root.stickyPlayer;\n    for (let i = 0; i < root.players.length; i++) {\n      let playeri = root.players[i];\n      if (\n        playeri !== player &&\n        (!player.allowConcurrent || !playeri.allowConcurrent)\n      ) {\n        playeri.pause();\n      }\n    }\n  }\n\n  /**\n   * stops all other players on the page\n   *\n   * @param {object} the player to set stickiness\n   */\n  setStickyPlayer(player) {\n    let root = this,\n      parent = root._getParentNode(player);\n    root.__playerTop = parent.offsetTop;\n    root.__playerUpperMiddle = root.__playerTop + parent.offsetHeight * 0.9;\n    root.__playerLowerMiddle = root.__playerTop + parent.offsetHeight * 0.1;\n    if (\n      player !== root.stickyPlayer &&\n      root.stickyPlayer !== undefined &&\n      root.stickyPlayer !== null\n    ) {\n      root.stickyPlayer.toggleSticky(false);\n      root.__parent.style.height = \"unset\";\n    }\n    parent.style.height = parent.offsetHeight + \"px\";\n    root.__parent = parent;\n    root.stickyPlayer = player;\n    if (!player.allowConcurrent) root.checkConcurrentPlayers();\n    root._checkScroll();\n  }\n\n  /**\n   * checks the wondow's scroll position and compares it to active player to set sticky attribute\n   */\n  _checkScroll() {\n    let root = this,\n      wintop = window.pageYOffset,\n      winbottom = wintop + window.innerHeight;\n    if (root.stickyPlayer !== undefined && root.stickyPlayer !== null) {\n      if (\n        root.stickyPlayer.__playing &&\n        (root.__playerLowerMiddle > winbottom ||\n          root.__playerUpperMiddle < wintop)\n      ) {\n        root.stickyPlayer.toggleSticky(true);\n      } else {\n        root.stickyPlayer.toggleSticky(false);\n      }\n    }\n  }\n\n  /**\n   * gets parent node in light DOM\n   *\n   * @param {object} the node\n   * @returns {object} the parent node\n   */\n  _getParentNode(node) {\n    let parent = node.parentNode;\n    if (\n      parent !== undefined &&\n      parent !== null &&\n      parent.nodeType === Node.DOCUMENT_FRAGMENT_NODE\n    ) {\n      parent = parent.host;\n    }\n    return parent;\n  }\n\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    let root = this;\n    window.removeEventListener(\"a11y-player\", root.__playerLoader);\n    window.removeEventListener(\"a11y-player-playing\", root.__stickyManager);\n    window.removeEventListener(\"scroll\", root.__scrollChecker);\n  }\n}\nwindow.customElements.define(A11yMediaStateManager.tag, A11yMediaStateManager);\nexport { A11yMediaStateManager };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-a11y-keys/iron-a11y-keys.js\";\nimport \"@polymer/iron-icons/av-icons.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\n\nexport { A11yMediaButton };\n/**\n * `a11y-media-button`\n * `A button used in a11y-media-controls and a11y-media-transcript-controls.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaButton extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * is button action to send as an event\n       */\n      action: {\n        type: String,\n        value: null\n      },\n      /*\n       * id of element button controls\n       */\n      controls: {\n        type: String,\n        value: \"video\"\n      },\n      /*\n       * iron-icon type\n       */\n      icon: {\n        type: String,\n        value: null\n      },\n      /*\n       * button label\n       */\n      label: {\n        type: String,\n        value: null\n      },\n      /*\n       * Is it toggled on?\n       */\n      toggle: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /*\n       * Is it disabled?\n       */\n      disabled: {\n        type: Boolean,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-button\";\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaBehaviors];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style>\n        :host {\n          margin: 0;\n          padding: 0;\n        }\n        :host #button {\n          margin: 0;\n          padding: 8px;\n          line-height: 1;\n          border: none;\n          transition: color 0.25s;\n          color: var(--a11y-media-button-color);\n          background-color: var(--a11y-media-button-bg-color);\n        }\n        :host([toggle]) #button {\n          color: var(--a11y-media-button-toggle-color);\n          background-color: var(--a11y-media-button-toggle-bg-color);\n        }\n        :host([toggle]:active) #button,\n        :host([toggle]:focus) #button,\n        :host([toggle]:hover) #button,\n        :host(:active) #button,\n        :host(:focus) #button,\n        :host(:hover) #button {\n          cursor: pointer;\n          color: var(--a11y-media-button-hover-color);\n          background-color: var(--a11y-media-button-hover-bg-color);\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -99999;\n          top: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        :host paper-tooltip {\n          z-index: 100;\n        }\n        iron-icon {\n          display: inline-block;\n        }\n      </style>\n      <button\n        id=\"button\"\n        aria-label$=\"[[label]]\"\n        aria-pressed$=\"[[toggle]]\"\n        controls=\"[[controls]]\"\n        disabled$=\"[[disabled]]\"\n        on-click=\"_buttonTap\"\n        role=\"button\"\n        tabindex=\"0\"\n        toggle$=\"[[toggle]]\"\n      >\n        <iron-icon icon=\"[[icon]]\"></iron-icon>\n      </button>\n      <paper-tooltip for=\"button\">[[label]]</paper-tooltip>\n      <iron-a11y-keys\n        id=\"a11y\"\n        keys=\"enter space\"\n        target$=\"[[__target]]\"\n        on-keys-pressed=\"_buttonTap\"\n      ></iron-a11y-keys>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    this.__target = this.$.button;\n  }\n\n  /**\n   * lets player know this button was clicked\n   */\n  _buttonTap() {\n    this.dispatchEvent(new CustomEvent(\"click\", { detail: this }));\n  }\n}\nwindow.customElements.define(A11yMediaButton.tag, A11yMediaButton);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\nimport \"@polymer/paper-menu-button/paper-menu-button.js\";\nimport \"@polymer/paper-listbox/paper-listbox.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button.js\";\nimport \"@lrnwebcomponents/dropdown-select/dropdown-select.js\";\nimport \"@polymer/paper-slider/paper-slider.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"./a11y-media-button.js\";\n\nexport { A11yMediaControls };\n/**\n * `a11y-media-controls`\n * `The controls bar for the a11y-media-player.`\n *\n * @microcopy - language worth noting:\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaControls extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * Use compact controls?\n       */\n      compactControls: {\n        name: \"compactControls\",\n        type: Boolean,\n        computed: \"_getCompactControls(responsiveSize)\"\n      },\n      /**\n       * Is the player a fixed height (iframe mode) so that theure is no transcript toggle?\n       */\n      fixedHeight: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Is fullscreen mode?\n       */\n      fullscreen: {\n        name: \"fullscreen\",\n        type: Boolean,\n        value: false\n      },\n      /**\n       * show the FullscreenButton?\n       */\n      fullscreenButton: {\n        name: \"fullscreenButton\",\n        type: Boolean,\n        value: false,\n        nofity: true\n      },\n\n      /**\n       * Does the player have tracks?\n       */\n      hasCaptions: {\n        name: \"hasCaptions\",\n        type: Boolean,\n        value: false,\n        notify: true\n      },\n\n      /**\n       * initially hide the transcript?\n       */\n      hideTranscript: {\n        name: \"hideTranscript\",\n        type: Boolean,\n        value: false\n      },\n      /**\n       * hide the transcript toggle menu item?\n       */\n      hideTranscriptButton: {\n        type: Boolean,\n        computed: \"_hideTranscriptButton(noTranscriptToggle,compactControls)\"\n      },\n      /**\n       * mute/unmute button\n       */\n      muteUnmute: {\n        name: \"muteUnmute\",\n        type: Object\n      },\n      /**\n       * hide the print transcript feature available?\n       */\n      noPrinting: {\n        type: Boolean,\n        computed: \"_noPrinting(standAlone,fixedHeight)\"\n      },\n      /**\n       * Is the transctipt toggle feature available?\n       */\n      noTranscriptToggle: {\n        type: Boolean,\n        computed: \"_noTranscriptToggle(standAlone,fixedHeight,hasTranscript)\"\n      },\n      /**\n       * Size of the a11y media element for responsive styling\n       */\n      responsiveSize: {\n        name: \"responsiveSize\",\n        type: String,\n        notify: true,\n        value: \"xs\",\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-controls\";\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaBehaviors];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style is=\"custom-style\">\n        :host {\n          display: block;\n          width: 100%;\n          max-width: 100%;\n          height: 44px;\n          max-height: 44px;\n          position: relative;\n          color: var(--a11y-media-color);\n          --primary-text-color: var(--a11y-media-settings-menu-color);\n          --paper-menu-button-dropdown-background: var(--a11y-media-settings-menu-bg-color);\n          --paper-listbox-background-color: var(--a11y-media-settings-menu-bg-color);\n          --paper-listbox-color: var(--a11y-media-settings-menu-color);\n          --paper-listbox: {\n            padding: 0;\n          };\n          --paper-menu-button: {\n            background-color: var(--a11y-media-settings-menu-bg-color);\n            color: var(--a11y-media-settings-menu-color);\n          };\n          --paper-menu-button-dropdown: {\n            background-color: var(--a11y-media-settings-menu-bg-color);\n            color: var(--a11y-media-settings-menu-color);\n            margin-top: 0 !important;\n            margin-bottom: 0 !important;\n          };\n          --paper-item-selected: {\n            color: var(--a11y-media-settings-menu-hover-color);\n          };\n          --paper-item-focused: {\n            color: var(--a11y-media-settings-menu-hover-color);\n          };\n        }\n        :host > #controls-left {\n          position: absolute;\n          left: 0;\n          min-width: 200px;\n        }\n        :host > #controls-right {\n          position: absolute;\n          right: 0;\n          top: -2px;\n        }\n        :host paper-menu-button,\n        :host dropdown-select {\n          padding: 0;\n        }\n        :host paper-icon-button {\n          background-color: var(--a11y-media-settings-menu-bg-color);\n          color: var(--a11y-media-settings-menu-color);\n        }\n        :host paper-icon-button:active,\n        :host paper-icon-button:focus,\n        :host paper-icon-button:hover {\n          background-color: var(--a11y-media-settings-menu-bg-color);\n          color: var(--a11y-media-settings-menu-color);\n        }\n        :host paper-item {\n          min-height: 40;\n        }\n        :host paper-slider {\n          @apply --a11y-media-slider;\n        }\n        :host .play-status,\n        :host paper-icon-button {\n          border: none;\n          position: relative;\n        }\n        :host .play-status {\n          font-size: 85%;\n        }\n        :host .play-status.control-bar {\n          padding: 8px 13px 8px;\n        }\n        :host([hide-play-status]) .play-status {\n          display: none;\n        }\n        :host .setting {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          width: 100%;\n        }\n        :host .setting-text {\n          min-width: 125px;\n        }\n        :host .setting-control {\n          max-width: 100px;\n        }\n        :host .setting-slider {\n          width: 130px;\n          margin-left: -15px;\n          margin-right: -15px;\n          @apply --a11y-media-slider;\n        }\n        :host #speed {\n          --paper-slider-knob-start-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-start-border-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-end-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-end-border-color: var(--a11y-media-accent-color);\n        }\n        :host #showvolume {\n          display: inline;\n          position: relative;\n        }\n        :host #volume {\n          z-index: 1;\n          position: absolute;\n          left: 30px;\n          top: -5px;\n          width: 0;\n          overflow: hidden;\n          transition: width 0.5s;\n          z-index: 3;\n          background-color: var(--a11y-media-bg-color);\n          --paper-slider-knob-end-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-end-border-color: var(--a11y-media-accent-color);\n\n        }\n        :host #volume:active,\n        :host #volume:focus,\n        :host #volume:hover,\n        :host #volume.focus,\n        :host #showvolume:active #volume,\n        :host #showvolume:focus #volume,\n        :host #showvolume:hover #volume {\n          overflow: visible;\n          width: 100px;\n        }\n        :host([responsive-size=\"xs\"]) #volume:active,\n        :host([responsive-size=\"xs\"]) #volume:focus,\n        :host([responsive-size=\"xs\"]) #volume:hover,\n        :host([responsive-size=\"xs\"]) #volume.focus,\n        :host([responsive-size=\"xs\"]) #showvolume:active #volume,\n        :host([responsive-size=\"xs\"]) #showvolume:focus #volume,\n        :host([responsive-size=\"xs\"]) #showvolume:hover #volume {\n          top: -35px\n          border-radius: 4px;\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -99999;\n          top: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n      </style>\n      <div id=\"controls-left\">\n        <a11y-media-button\n          action$=\"[[playPause.action]]\"\n          icon$=\"[[playPause.icon]]\"\n          label$=\"[[playPause.label]]\"\n          on-click=\"_onButtonTap\"\n        ></a11y-media-button>\n        <a11y-media-button\n          action=\"rewind\"\n          disabled$=\"[[disableSeek]]\"\n          hidden$=\"[[compactControls]]\"\n          icon$=\"[[_getLocal('rewind','icon')]]\"\n          label$=\"[[_getLocal('rewind','label')]]\"\n          on-click=\"_onButtonTap\"\n        ></a11y-media-button>\n        <a11y-media-button\n          action=\"forward\"\n          disabled$=\"[[disableSeek]]\"\n          hidden$=\"[[compactControls]]\"\n          icon$=\"[[_getLocal('forward','icon')]]\"\n          label$=\"[[_getLocal('forward','label')]]\"\n          on-click=\"_onButtonTap\"\n        ></a11y-media-button>\n        <a11y-media-button\n          action=\"restart\"\n          disabled$=\"[[disableSeek]]\"\n          hidden$=\"[[compactControls]]\"\n          icon$=\"[[_getLocal('restart','icon')]]\"\n          label$=\"[[_getLocal('restart','label')]]\"\n          on-click=\"_onButtonTap\"\n        ></a11y-media-button>\n        <div id=\"showvolume\">\n          <a11y-media-button\n            id=\"mute\"\n            action$=\"[[muteUnmute.action]]\"\n            icon$=\"[[muteUnmute.icon]]\"\n            label$=\"[[muteUnmute.label]]\"\n            on-click=\"_onButtonTap\"\n          ></a11y-media-button>\n          <paper-slider\n            id=\"volume\"\n            aria-labelledby=\"volume-slider-label\"\n            label$=\"[[volumeLabel]]\"\n            min=\"0\"\n            max=\"100\"\n            on-change=\"_onSettingsChanged\"\n            pin\n            step=\"10\"\n            value$=\"[[volume]]\"\n          ></paper-slider>\n        </div>\n        <span aria-live=\"polite\" class=\"play-status control-bar\">\n          <span id=\"statbar\"></span>\n        </span>\n      </div>\n      <div id=\"controls-right\">\n        <a11y-media-button\n          action=\"captions\"\n          disabled$=\"[[!hasCaptions]]\"\n          hidden$=\"[[!hasCaptions]]\"\n          icon$=\"[[_getLocal('captions','icon')]]\"\n          label$=\"[[_getLocal('captions','label')]]\"\n          on-click=\"_onButtonTap\"\n          toggle$=\"[[cc]]\"\n        >\n        </a11y-media-button>\n        <a11y-media-button\n          action=\"transcript\"\n          controls=\"transcript\"\n          disabled$=\"[[hideTranscriptButton]]\"\n          hidden$=\"[[hideTranscriptButton]]\"\n          icon$=\"[[_getLocal('transcript','icon')]]\"\n          label$=\"[[_getLocal('transcript','label')]]\"\n          on-click=\"_onButtonTap\"\n          toggle$=\"[[hideTranscript]]\"\n        >\n        </a11y-media-button>\n        <a11y-media-button\n          action=\"print\"\n          disabled$=\"[[noPrinting]]\"\n          hidden$=\"[[noPrinting]]\"\n          icon$=\"[[_getLocal('print','icon')]]\"\n          label=\"[[_getLocal('print','label')]]\"\n          on-click=\"_handlePrintClick\"\n        >\n        </a11y-media-button>\n        <a11y-media-button\n          action=\"download\"\n          disabled$=\"[[noPrinting]]\"\n          hidden$=\"[[noPrinting]]\"\n          icon$=\"[[_getLocal('download','icon')]]\"\n          label=\"[[_getLocal('download','label')]]\"\n          on-click=\"_handleDownloadClick\"\n        >\n        </a11y-media-button>\n        <template is=\"dom-if\" if=\"[[fullscreenButton]]\">\n          <a11y-media-button\n            action=\"fullscreen\"\n            hidden$=\"[[audioNoThumb]]\"\n            icon$=\"[[_getLocal('fullscreen','icon')]]\"\n            label$=\"[[_getLocal('fullscreen','label')]]\"\n            on-click=\"_onButtonTap\"\n            toggle$=\"[[fullscreen]]\"\n            step=\"1\"\n          >\n          </a11y-media-button>\n        </template>\n        <paper-menu-button\n          id=\"settings\"\n          allow-outside-scroll\n          horizontal-align=\"right\"\n          ignore-select\n          on-change=\"_onSettingsChanged\"\n          on-iron-activate=\"_handleSettingsActivate\"\n          on-iron-select=\"_handleSettingsSelect\"\n          vertical-align=\"bottom\"\n        >\n          <paper-icon-button\n            action=\"settings\"\n            alt$=\"[[_getLocal('settings','label')]]\"\n            icon$=\"[[_getLocal('settings','icon')]]\"\n            slot=\"dropdown-trigger\"\n          >\n          </paper-icon-button>\n          <paper-listbox id=\"settingslist\" slot=\"dropdown-content\">\n            <paper-item hidden$=\"[[!hasCaptions]]\">\n              <div class=\"setting\">\n                <div class=\"setting-text\">\n                  [[_getLocal('captions','label')]]\n                </div>\n                <div class=\"setting-control\">\n                  <dropdown-select\n                    id=\"tracks\"\n                    disabled$=\"[[!hasCaptions]]\"\n                    no-label-float\n                    on-change=\"_handleTrackChange\"\n                    value\n                  >\n                    <paper-item value=\"\"\n                      >[[_getLocal('captions','off')]]</paper-item\n                    >\n                    <template is=\"dom-repeat\" items=\"{{tracks}}\" as=\"option\">\n                      <paper-item value$=\"{{option.value}}\"\n                        >{{option.text}}</paper-item\n                      >\n                    </template>\n                  </dropdown-select>\n                </div>\n              </div>\n            </paper-item>\n            <paper-item hidden$=\"[[noTranscriptToggle]]\">\n              <div class=\"setting\">\n                <div id=\"transcript-label\" class=\"setting-text\">\n                  [[_getLocal('transcript','label')]]\n                </div>\n                <div class=\"setting-control\">\n                  <paper-toggle-button\n                    id=\"transcript-toggle\"\n                    aria-labelledby=\"transcript-label\"\n                    checked$=\"[[!hideTranscript]]\"\n                    controls=\"transcript\"\n                    disabled$=\"[[noTranscriptToggle]]\"\n                  >\n                  </paper-toggle-button>\n                </div>\n              </div>\n            </paper-item>\n            <paper-item>\n              <div class=\"setting\">\n                <div id=\"loop-label\" class=\"setting-text\">\n                  [[_getLocal('loop','label')]]\n                </div>\n                <div class=\"setting-control\">\n                  <paper-toggle-button\n                    id=\"loop\"\n                    aria-labelledby=\"loop-label\"\n                    checked$=\"[[loop]]\"\n                  ></paper-toggle-button>\n                </div>\n              </div>\n            </paper-item>\n            <paper-item>\n              <div class=\"setting\">\n                <div id=\"speed-label\" class=\"setting-text\">\n                  [[_getLocal('speed','label')]]\n                </div>\n                <div class=\"setting-control\">\n                  <paper-slider\n                    id=\"speed\"\n                    aria-labelledby=\"speed-label\"\n                    class=\"setting-slider\"\n                    min=\"0.5\"\n                    max=\"4\"\n                    pin\n                    step=\"0.5\"\n                    tab-index=\"-1\"\n                    value$=\"[[playbackRate]]\"\n                  ></paper-slider>\n                </div>\n              </div>\n            </paper-item>\n          </paper-listbox>\n        </paper-menu-button>\n        <paper-tooltip for=\"settings\">\n          [[_getLocal('settings','label')]]\n        </paper-tooltip>\n      </div>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    root._addResponsiveUtility({\n      element: root,\n      attribute: \"responsive-size\",\n      relativeToParent: true,\n      sm: 300,\n      md: 600,\n      lg: 900,\n      xl: 1200\n    });\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    let root = this;\n    // when the mute button is in focus,\n    // add focus class to make the volume slider appear\n    root.$.mute.$.button.onfocus = function() {\n      root.$.volume.classList.add(\"focus\");\n    };\n    // when the mute button is blurred,\n    // remove focus class to make the volume slider disappear\n    root.$.mute.$.button.onblur = function() {\n      root.$.volume.classList.remove(\"focus\");\n    };\n  }\n\n  /**\n   * updates the play status of the media\n   *\n   * @param {string} the status, eg., `Loading...` or `00:02:01/00:11:43`\n   */\n  setStatus(status) {\n    this.$.statbar.innerText = status;\n  }\n\n  /**\n   * loads tracks from array\n   *\n   * @param {object} the tracks of the media\n   */\n  setTracks(tracks) {\n    this.set(\"tracks\", []);\n    this.set(\"tracks\", tracks.slice(0));\n  }\n\n  /**\n   * returns true if player is xs or sm and needs to use compact controls\n   *\n   * @param {string} the size of the player: `xs`,`sm`,`md`,`lg`, or `xl`\n   * @returns {boolean} Should the player use compact controls?\n   */\n  _getCompactControls(responsiveSize) {\n    return (\n      this._testAttribute(responsiveSize, \"xs\") ||\n      this._testAttribute(responsiveSize, \"sm\")\n    );\n  }\n\n  /**\n   * handles when the tracks dropdown selection changes\n   * (when the tracks dropdown-select changes, update track and CC button)\n   */\n  _handleTrackChange(e) {\n    let root = this;\n    if (root.__selectedTrack !== null) {\n      if (e.detail.value !== \"\") {\n        root.dispatchEvent(\n          new CustomEvent(\"select-track\", {\n            detail: { control: root, value: e.detail.value }\n          })\n        );\n        root.dispatchEvent(\n          new CustomEvent(\"toggle-cc\", {\n            detail: { control: root, value: true }\n          })\n        );\n      } else {\n        root.dispatchEvent(\n          new CustomEvent(\"toggle-cc\", {\n            detail: { control: root, value: false }\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * prevent settings menu from being closed before action is taken\n   */\n  _handleSettingsSelect(e) {\n    //e.preventDefault();\n  }\n\n  /**\n   * prevent settings menu from being closed before action is taken\n   */\n  _handleSettingsActivate(e) {\n    //if (e.target == this.$.settingslist) e.preventDefault();\n  }\n\n  /**\n   * determine which button was clicked and act accordingly\n   */\n  _onButtonTap(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"controls-change\", { detail: e.detail })\n    );\n    this.$.settings.close();\n  }\n\n  /**\n   * determine which button was clicked and act accordingly\n   */\n  _onSettingsChanged(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"controls-change\", { detail: e.target })\n    );\n    this.$.settings.close();\n  }\n\n  /**\n   * Determines if the transcript button should be hidden.\n   *\n   * @param {boolean} Is this feature available?\n   * @param {boolean} Is the player too small to fit the extra controls?\n   * @returns {boolean} Show the transcript button?\n   */\n  _hideTranscriptButton(noTranscriptToggle, compactControls) {\n    return noTranscriptToggle || compactControls;\n  }\n\n  /**\n   * Determines if the print transcript feature is available from the controls.\n   *\n   * @param {boolean} Is the player in stand-alone mode?\n   * @param {boolean} Is the player in fixed-height/iframe mode?\n   * @returns {boolean} Should print transcript be unavailable from controls?\n   */\n  _noPrinting(standAlone, fixedHeight) {\n    return standAlone || !fixedHeight;\n  }\n\n  /**\n   * Determines if the transcript toggle feature is available.\n   *\n   * @param {boolean} Is the player in stand-alone mode?\n   * @param {boolean} Is the player in fixed-height/iframe mode?\n   * @returns {boolean} Should transcript toggle be unavailable?\n   */\n  _noTranscriptToggle(standAlone, fixedHeight, hasTranscript) {\n    return standAlone || fixedHeight || !hasTranscript;\n  }\n}\nwindow.customElements.define(A11yMediaControls.tag, A11yMediaControls);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\n\nexport { A11yMediaHtml5 };\n/**\n * `a11y-media-html5`\n * `Loads HTML5 audio or video. `\n *\n * @microcopy - language worth noting:\n```<a11y-media-html5>                   \n    <source src=\"/path/to/video.mp4\" type=\"video/mp4\">\n    <source src=\"/path/to/video.webm\" type=\"video/webm\">\n    <track label=\"English\" kind=\"subtitles\" srclang=\"en\" src=\"path/to/subtitles/en.vtt\" default>\n    <track label=\"Deutsch\" kind=\"subtitles\" srclang=\"de\" src=\"path/to/subtitles/de.vtt\">\n    <track label=\"Español\" kind=\"subtitles\" srclang=\"es\" src=\"path/to/subtitles/es.vtt\">\n  </a11y-media-html5>```\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaHtml5 extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /*\n       * id of element button controls\n       */\n      controls: {\n        type: String,\n        value: \"video\"\n      },\n      /**\n       * crossorigin attribute for <video> and <audio> tags\n       */\n      crossorigin: {\n        type: String,\n        value: null\n      },\n      /*\n       * Is it disabled?\n       */\n      disabled: {\n        type: Boolean,\n        value: null\n      },\n      /*\n       * iron-icon type\n       */\n      icon: {\n        type: String,\n        value: null\n      },\n      /*\n       * button label\n       */\n      label: {\n        type: String,\n        value: null\n      },\n      /**\n       * the language of the media (if different from user interface language)\n       */\n      mediaLang: {\n        name: \"mediaLang\",\n        type: String,\n        value: \"en\"\n      },\n      /*\n       * Is it paused?\n       */\n      paused: {\n        type: Boolean,\n        value: true\n      },\n      /*\n       * the seekable range of the media\n       */\n      seekable: {\n        type: Object,\n        value: {\n          length: 0,\n          start: null,\n          stop: null\n        }\n      },\n      /**\n       * Source of optional thumbnail image\n       */\n      thumbnailSrc: {\n        name: \"thumbnailSrc\",\n        type: String,\n        value: null,\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-html5\";\n  }\n\n  //get player-specific behaviors\n  static get behaviors() {\n    return [A11yMediaBehaviors];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style>\n        :host {\n          height: 100%;\n          display: flex;\n          align-items: stretch;\n          position: relative;\n        }\n        :host([hidden]) {\n          display: none;\n        }\n        #video {\n          width: 100%;\n          max-width: 100%;\n        }\n      </style>\n      <video\n        id=\"video\"\n        aria-hidden$=\"[[isYoutube]]\"\n        autoplay$=\"[[autoplay]]\"\n        crossorigin$=\"[[crossorigin]]\"\n        hidden$=\"[[audioOnly]]\"\n        lang$=\"[[mediaLang]]\"\n        on-loadedmetadata=\"_handleMetadata\"\n        poster$=\"[[thumbnailSrc]]\"\n        src$=\"[[manifest]]\"\n        preload=\"metadata\"\n      >\n        HTML5 video not supported\n      </video>\n      <audio\n        id=\"audio\"\n        autoplay$=\"[[autoplay]]\"\n        crossorigin$=\"[[crossorigin]]\"\n        hidden$=\"[[!audioOnly]]\"\n        lang$=\"[[mediaLang]]\"\n        on-loadedmetadata=\"_handleMetadata\"\n        poster$=\"[[thumbnailSrc]]\"\n        preload=\"metadata\"\n      >\n        HTML5 audio not supported\n      </audio>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    let root = this;\n    root.media =\n      root.$.video !== undefined && !root.audioOnly\n        ? root.$.video\n        : root.$.audio;\n  }\n\n  /**\n   * handles the loaded metadata\n   */\n  _handleMetadata() {\n    let root = this;\n    root.duration = root.media.duration > 0 ? root.media.duration : 0;\n    root.tracks = [];\n    root.volume = root.muted ? 0 : Math.max(this.volume, 10);\n    root.seekable = root.media.seekable;\n    root.setVolume(root.volume);\n    root.setMute(root.muted);\n    root.setCC(root.cc);\n    root.setLoop(root.loop);\n    root.setPlaybackRate(root.playbackRate);\n\n    // adjusts aspect ratio\n    root.aspectRatio = root.media.videoWidth / root.media.videoHeight;\n    root.dispatchEvent(new CustomEvent(\"media-loaded\", { detail: root }));\n  }\n\n  /**\n   * gets the buffered time\n   */\n  getBufferedTime() {\n    return this.media.buffered.length > 0\n      ? this.media.buffered.end(0)\n      : this.getCurrentTime();\n  }\n\n  /**\n   * gets the current time\n   *\n   * @returns {float} the elapsed time, in seconds\n   */\n  getCurrentTime() {\n    return this.media.currentTime;\n  }\n\n  /**\n   * plays the media\n   */\n  play() {\n    this.paused = false;\n    this.media.play();\n  }\n\n  /**\n   * pauses the media\n   */\n  pause() {\n    this.paused = true;\n    this.media.pause();\n  }\n\n  /**\n   * selects a specific track by index\n   *\n   * @param {float} the index of the track\n   */\n  selectTrack(index) {\n    this.selectedTrack = this.media.textTracks[index];\n    for (let i = 0; i < this.media.textTracks.length; i++) {\n      if (parseInt(index) === i) {\n        this.media.textTracks[i].mode = \"showing\";\n      } else if (this.media.textTracks[i] !== null) {\n        this.media.textTracks[i].mode = \"hidden\";\n      }\n    }\n  }\n\n  /**\n   * stops the media\n   */\n  stop() {\n    this.pause();\n    this.seek(0);\n  }\n\n  /**\n   * restarts the media\n   */\n  restart() {\n    this.seek(0);\n    this.play();\n  }\n\n  /**\n   * seeks to a specific time\n   */\n  seek(time) {\n    this.media.currentTime = time;\n  }\n\n  /**\n   * sets captions\n   *\n   * @param {boolean} Turn CC on? `true` is on; `false` or `null` is off.\n   *\n   */\n  setCC(mode) {\n    this.media.cc = mode === true;\n    if (this.selectedTrack !== undefined && mode == true) {\n      this.selectedTrack.mode = \"showing\";\n      this.$.video.textTracks.value = this.selectedTrackId;\n    } else if (\n      this.selectedTrack !== undefined &&\n      this.selectedTrack !== null\n    ) {\n      this.selectedTrack.mode = \"hidden\";\n      this.$.video.textTracks.value = \"\";\n    }\n  }\n\n  /**\n   * sets volume of media\n   *\n   * @param {integer} the volume level from 0-100\n   */\n  setVolume(value) {\n    this.media.volume = value / 100;\n  }\n\n  /**\n   * sets speed/playback rate of media\n   *\n   * @param {float} the playback rate, where 1 = 100%\n   */\n  setPlaybackRate(value) {\n    this.media.playbackRate = value !== null ? value : 1;\n  }\n\n  /**\n   * sets looping\n   *\n   * @param {boolean} Turn looping on? `true` is on; `false` or `null` is off.\n   */\n  setLoop(mode) {\n    this.media.loop = mode === true;\n  }\n\n  /**\n   * sets mute\n   *\n   * @param {boolean} Turn mute on? `true` is on; `false` or `null` is off.\n   */\n  setMute(mode) {\n    this.media.muted = mode;\n  }\n}\nwindow.customElements.define(A11yMediaHtml5.tag, A11yMediaHtml5);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\nimport \"@polymer/iron-a11y-keys/iron-a11y-keys.js\";\nimport \"@lrnwebcomponents/simple-search/lib/simple-search-content.js\";\n\nexport { A11yMediaTranscriptCue };\n/**\n * `a11y-media-transcript-cue`\n * `A single cue in a11y-media-transcriptas static text or as an button that controls media.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-transcript-cue \n  active-cues$=\"[[activeCues]]\"                   // An array of the currently active cues\n  cue$=\"[[cue]]\"                                  // An array of cue data\n  order$=\"[[cue.order]]\"                          // The index of the current cue\n  disable-interactive$=\"[[disableInteractive]]\"   // Is cue interactive? \n  controls$=\"[[mediaId]]\"                         // The id of the a11y-media-player element\n  hide-timestamps$=\"[[hideTimestamps]]\" >         // Hide cue timestamp?\n</a11y-media-transcript-cue>```\n * \n * Custom styles:\n```--a11y-media-transcript-bg-color: background color of the transcript, default is #ffffff\n--a11y-media-transcript-text-color: color of the transcript text, default is #000000```\n *   \n * Custom styles for focused cue:\n```--a11y-media-transcript-focused-cue-text: color of the focused cue text, default is --a11y-media-transcript-text-color\n--a11y-media-transcript-focused-cue-bg: background color of the focused cue, default is --a11y-media-transcript-bg-color\n--a11y-media-transcript-focused-cue-weight: font-weight of the focused cue, default is bold```\n *   \n * Custom styles for active cue:\n```--a11y-media-transcript-active-cue-text: color of the active cue text, default is --a11y-media-transcript-text-color\n--a11y-media-transcript-active-cue-bg: background color of the active cue, default is #ccfffd\n--a11y-media-transcript-active-cue-weight: font-weight of the active cue, default is normal```\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaTranscriptCue extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * is cue active\n       */\n      active: {\n        type: Boolean,\n        reflectToAttribute: true,\n        computed: \"_getActiveCue(cue,activeCues)\",\n        notify: true,\n        reflectToAttribute: true\n      },\n      /**\n       * array of currently active cues\n       */\n      activeCues: {\n        type: Array,\n        value: null,\n        notify: true\n      },\n      /**\n       * array of cue data\n       */\n      cue: {\n        type: Array,\n        value: null\n      },\n      /**\n       * disable interactive mode that makes the transcript clickable\n       */\n      disabled: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * parsed cue text\n       */\n      text: {\n        type: String,\n        value: \"\"\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-transcript-cue\";\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaBehaviors];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style is=\"custom-style\">\n        :host {\n          cursor: default;\n          display: table-row;\n          width: 100%;\n          color: var(--a11y-media-transcript-cue-color);\n          background-color: var(--a11y-media-transcript-cue-bg-color);\n          transition: color 0.25s, background-color 0.25s;\n        }\n        :host([hide-timestamps]) {\n          display: inline;\n        }\n        :host(:not([active]):not([disabled]):active),\n        :host(:not([active]):not([disabled]):focus),\n        :host(:not([active]):not([disabled]):hover) {\n          cursor: pointer;\n          color: var(--a11y-media-transcript-focused-cue-color);\n          background-color: var(--a11y-media-transcript-focused-cue-bg-color);\n          outline: 1px dotted var(--a11y-media-transcript-focused-cue-color);\n          @apply --a11y-media-transcript-focused-cue;\n        }\n        :host([active]) {\n          color: var(--a11y-media-transcript-active-cue-color);\n          background-color: var(--a11y-media-transcript-active-cue-bg-color);\n          @apply --a11y-media-transcript-active-cue;\n        }\n        :host #text {\n          display: table-cell;\n          width: 100%;\n          line-height: 200%;\n        }\n        :host([hide-timestamps]) #text {\n          display: inline;\n        }\n        :host #time {\n          display: table-cell;\n          font-size: 80%;\n          padding: 0 16px 0 0;\n          white-space: nowrap;\n          font-family: monospace;\n        }\n        :host([hide-timestamps]) #time {\n          display: none;\n        }\n        :host simple-search-content {\n          --simple-search-match-text-color: var(\n            --a11y-media-transcript-match-color\n          );\n          --simple-search-match-bg-color: var(\n            --a11y-media-transcript-match-bg-color\n          );\n          --simple-search-match-border-color: var(\n            --a11y-media-transcript-match-border-color\n          );\n          --simple-search-match: {\n            border: none;\n            border-radius: 4px;\n            font-weight: normal;\n          }\n        }\n        @media print {\n          :host,\n          :host([active]),\n          :host(:not([active]):not([disabled]):active),\n          :host(:not([active]):not([disabled]):focus),\n          :host(:not([active]):not([disabled]):hover) {\n            color: #000000;\n            background-color: #ffffff;\n          }\n        }\n      </style>\n      <span id=\"time\">[[cue.start]] - [[cue.end]]</span>\n      <span id=\"text\">\n        <simple-search-content id=\"content\" content=\"[[cue.text]]\">\n          [[cue.text]]\n        </simple-search-content>\n      </span>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    let root = this,\n      search = root.search;\n    if (!root.disabled) {\n      root.__target = this;\n      root.setAttribute(\"aria-role\", \"button\");\n      root.setAttribute(\"controls\", this.mediaId);\n    }\n    if (\n      !root.disableSearch &&\n      root.search !== undefined &&\n      root.search !== null\n    ) {\n      root.$.content.enableSearch(search);\n    }\n    root.addEventListener(\"click\", root._handleTap);\n  }\n\n  /**\n   * gets the active cue for styling\n   *\n   * @param {object} the current cue object\n   * @param {array} an array of all active cues\n   * @returns {boolean} Is the cue active?\n   */\n  _getActiveCue(cue, activeCues) {\n    return activeCues !== null && activeCues.includes(cue.order.toString())\n      ? true\n      : false;\n  }\n\n  /**\n   * handles tap\n   */\n  _handleTap(e) {\n    let root = this;\n    this.dispatchEvent(new CustomEvent(\"cue-seek\", { detail: root.cue.seek }));\n  }\n}\nwindow.customElements.define(\n  A11yMediaTranscriptCue.tag,\n  A11yMediaTranscriptCue\n);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\nimport \"./a11y-media-transcript-cue.js\";\n\nexport { A11yMediaTranscript };\n/**\n * `a11y-media-transcript`\n * `A transcript element to pair with a11y-media-player.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-transcript \n  accent-color$=\"[[accentColor]]\"                 // Optional accent color highlighted cues, \n                                                  // using the following materialize colors: \n                                                  // red, pink, purple, deep-purple, indigo, blue, \n                                                  // light blue, cyan, teal, green, light green, lime, \n                                                  // yellow, amber, orange, deep-orange, and brown. \n                                                  // Default is null. \n  custom-microcopy$=\"[[customMicrocopy]]\"         // Optional customization or text and icons\n  disable-interactive$=\"[[disableInteractive]]\"   // Disable interactive transcript cues?\n  disable-scroll$=\"[[disableScroll]]\"             // Disable autoscrolling transcript as video plays? \n  disable-search$=\"[[disableSearch]]\"             // Disable transcript search? \n  hide-timestamps$=\"[[hideTimestamps]]\"           // Hide cue timestamps?\n  media-id=\"\"                                     // The id of the player\n  selected-transcript$=\"[[selectedTranscript]]\">  // The index of the current track\n</a11y-media-transcript>```\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaTranscript extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * array of cues\n       */\n      activeCues: {\n        type: Array,\n        value: null,\n        reflectToAttribute: true,\n        notify: true\n      },\n      /**\n       * disable interactive mode that makes the transcript clickable\n       */\n      disableInteractive: {\n        name: \"disableInteractive\",\n        type: Boolean,\n        value: false\n      },\n      /**\n       * show cue's start and end time\n       */\n      hideTimestamps: {\n        name: \"hideTimestamps\",\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Language\n       */\n      lang: {\n        type: String,\n        value: \"en\",\n        reflectToAttribute: true\n      },\n      /**\n       * the id of media\n       */\n      mediaId: {\n        type: String,\n        value: null\n      },\n      /**\n       * tabindex of cues\n       */\n      tabIndex: {\n        type: Number,\n        computed: \"_getTabIndex(disableInteractive)\"\n      },\n      /**\n       * tabindex of cues\n       */\n      role: {\n        type: Number,\n        computed: \"_getRole(disableInteractive)\"\n      },\n      /**\n       * selected transcript track id\n       */\n      selectedTranscript: {\n        type: String,\n        value: \"0\"\n      },\n      /**\n       * the status of the transcript loading\n       */\n      status: {\n        type: String,\n        computed: \"_stampLoadingStatus(disableSeek)\"\n      },\n      /**\n       * array of cues\n       */\n      tracks: {\n        type: Array,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-transcript\";\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaBehaviors];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style>\n        :host {\n          color: var(--a11y-media-transcript-cue-color);\n          background-color: var(--a11y-media-transcript-cue-bg-color);\n          border-left: 1px solid var(--a11y-media-transcript-bg-color);\n        }\n        :host([hidden]) {\n          display: none !important;\n        }\n        :host .transcript-from-track {\n          display: none;\n          width: calc(100% - 30px);\n          padding: 0 15px 15px;\n          color: var(--a11y-media-transcript-cue-color);\n          background-color: var(--a11y-media-transcript-cue-bg-color);\n        }\n        :host .transcript-from-track[active] {\n          display: table;\n        }\n        :host .transcript-from-track[active][hideTimestamps] {\n          display: block;\n        }\n        :host .sr-only:not(:focus) {\n          position: absolute;\n          left: -99999;\n          top: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        @media print {\n          :host {\n            padding: 0 15px 5px;\n            color: #000;\n            background-color: #ffffff;\n            border-top: 1px solid #aaa;\n          }\n        }\n      </style>\n      <a id=\"transcript-desc\" class=\"sr-only\" href=\"#bottom\">\n        [[_getLocal('transcript','skip')]]\n      </a>\n      <div\n        aria-live=\"polite\"\n        id=\"loading\"\n        active$=\"[[_isLoading(selectedTranscript, tracks)]]\"\n        class=\"transcript-from-track\"\n      >\n        [[status]]\n      </div>\n      <template id=\"tracks\" is=\"dom-repeat\" items=\"{{tracks}}\" as=\"track\">\n        <div\n          aria-live=\"polite\"\n          id=\"track\"\n          class=\"transcript-from-track\"\n          lang=\"{{track.language}}\"\n          active$=\"[[_isActive(selectedTranscript,index)]]\"\n        >\n          <template is=\"dom-repeat\" items=\"{{track.cues}}\" as=\"cue\">\n            <a11y-media-transcript-cue\n              accent-color$=\"[[accentColor]]\"\n              active-cues$=\"[[activeCues]]\"\n              controls$=\"[[mediaId]]\"\n              cue$=\"{{cue}}\"\n              disabled$=\"[[disableCue]]\"\n              disable-search$=\"[[disableSearch]]\"\n              hide-timestamps$=\"[[hideTimestamps]]\"\n              on-cue-seek=\"_handleCueSeek\"\n              order$=\"{{cue.order}}\"\n              role=\"button\"\n              search=\"[[search]]\"\n              tabindex=\"0\"\n            >\n            </a11y-media-transcript-cue>\n          </template>\n        </div>\n      </template>\n      <template is=\"dom-repeat\" items=\"{{tracks}}\" as=\"track\">\n        <div\n          id=\"download\"\n          class=\"downloadable-track\"\n          hidden\n          active$=\"[[_isActive(selectedTranscript,index)]]\"\n        >\n          <template is=\"dom-repeat\" items=\"{{track.cues}}\" as=\"cue\">\n            [[cue.start]] - [[cue.end]]: [[cue.text]]\n          </template>\n        </div>\n      </template>\n      <div id=\"bottom\" class=\"sr-only\"></div>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.dispatchEvent(new CustomEvent(\"transcript-ready\", { detail: this }));\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n  }\n\n  /**\n   * gets download data for the active transcript\n   *\n   * @param {string} the title of the media\n   */\n  download(mediaTitle) {\n    let root = this,\n      a = document.createElement(\"a\"),\n      title =\n        mediaTitle !== null && mediaTitle !== \"\"\n          ? mediaTitle\n          : this._getLocal(\"transcript\", \"label\"),\n      filename =\n        mediaTitle !== null && mediaTitle !== \"\"\n          ? mediaTitle.replace(/[^\\w\\d]/g, \"\")\n          : \"Transcript\",\n      track = root.shadowRoot.querySelector(\"#download[active]\"),\n      data = track !== null ? track.innerText : \"\";\n    a.setAttribute(\n      \"href\",\n      \"data:text/plain;charset=UTF-8,\" + encodeURIComponent(title + \"\\n\" + data)\n    );\n    a.setAttribute(\"download\", filename + \".txt\");\n    a.style.display = \"none\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n  /**\n   * prints the active transcript\n   *\n   * @param {string} the title of the media\n   */\n  print(mediaTitle) {\n    let root = this,\n      track = root.shadowRoot.querySelector(\"#track[active]\").cloneNode(true),\n      css = html`\n        <style>\n          a11y-media-transcript-cue {\n            display: table-row;\n            background-color: #fff;\n            color: #000;\n          }\n          a11y-media-transcript-cue[hide-timestamps],\n          a11y-media-transcript-cue[hide-timestamps] #text {\n            display: inline;\n          }\n          a11y-media-transcript-cue #text {\n            display: table-cell;\n            line-height: 200%;\n          }\n          a11y-media-transcript-cue #time {\n            display: table-cell;\n            font-size: 80%;\n            padding: 0 16px;\n            white-space: nowrap;\n            font-family: monospace;\n          }\n          a11y-media-transcript-cue[hide-timestamps] #time {\n            display: none;\n          }\n          a11y-media-transcript-cue [matched] {\n            background-color: #fff;\n            color: #eee;\n            padding: 3px 4px;\n            border-radius: 3px;\n          }\n        </style>\n      `,\n      h1 = html`\n        <h1>Transcript</h1>\n      `;\n    if (mediaTitle !== undefined) h1.innerHTML = mediaTitle;\n    if ((track !== null) & (track !== undefined)) {\n      //From https://stackoverflow.com/questions/1071962/how-do-i-print-part-of-a-rendered-html-page-in-javascript#answer-1072151\n      let print = window.open(\n        \"\",\n        \"\",\n        \"left=0,top=0,width=552,height=477,toolbar=0,scrollbars=0,status =0\"\n      );\n      print.document.body.appendChild(css);\n      print.document.body.appendChild(h1);\n      print.document.body.appendChild(track);\n      print.document.close();\n      print.focus();\n      print.print();\n      print.close();\n    }\n  }\n\n  /**\n   * updates activeCues array and scrolls to position\n   *\n   * @param {array} an array of cues\n   */\n  setActiveCues(cues) {\n    let root = this,\n      offset =\n        root.shadowRoot.querySelector(\"#track\") !== null &&\n        root.shadowRoot.querySelector(\"#track\") !== undefined\n          ? root.shadowRoot.querySelector(\"#track\").offsetTop\n          : 0,\n      cue = root.shadowRoot.querySelector(\n        \"#track a11y-media-transcript-cue[active]\"\n      );\n    root.set(\"activeCues\", cues.slice(0));\n    if (\n      !root.disableScroll &&\n      cue !== undefined &&\n      cue !== null &&\n      root.activeCues !== undefined &&\n      cue.getAttribute(\"order\") !== root.activeCues[0]\n    ) {\n      //javascript scrolling from:  https://stackoverflow.com/questions/8917921/cross-browser-javascript-not-jquery-scroll-to-top-animation#answer-8918062\n      let scrollingTo = function(element, to, duration) {\n        if (duration <= 0) return;\n        var difference = to - element.scrollTop;\n        var perTick = (difference / duration) * 10;\n\n        setTimeout(function() {\n          element.scrollTop = element.scrollTop + perTick;\n          if (element.scrollTop === to) return;\n          scrollingTo(element, to, duration - 10);\n        }, 10);\n      };\n      scrollingTo(root, cue.offsetTop - offset, 250);\n    }\n  }\n\n  /**\n   * fires an event when media is associated with the player\n   *\n   * @param {object} the player\n   */\n  setMedia(player) {\n    this.media = player;\n    this.dispatchEvent(new CustomEvent(\"transcript-ready\", { detail: this }));\n  }\n\n  /**\n   * loads tracks from array\n   *\n   * @param {array} an array of tracks\n   */\n  setTracks(tracks) {\n    this.set(\"tracks\", tracks.slice(0));\n    this.notifyPath(\"tracks\");\n    if (this.tracks !== undefined && this.tracks.length > 0)\n      this.$.tracks.render();\n  }\n\n  /**\n   * fires an event when media is associated with the player\n   *\n   * @param {boolean} Hide transcript? `true` is hidden, `false` is visible, and `null` toggles based on current state.\n   */\n  toggleHidden(mode) {\n    let root = this,\n      inner = document.getElementById(\"inner\"),\n      active =\n        inner !== null && inner !== undefined\n          ? inner.querySelector(\"a11y-media-transcript-cue[active]\")\n          : null,\n      first =\n        inner !== null && inner !== undefined\n          ? inner.querySelector(\"a11y-media-transcript-cue\")\n          : null;\n    mode = mode !== undefined ? mode : this.hidden;\n    this.hidden = mode;\n  }\n\n  /**\n   * gets the tab-index of cues based on whether or not interactive cues are disabled\n   *\n   * @param {boolean} Is the interactive transcript mode disabled?\n   * @returns {integer} the tabindex of the cue\n   */\n  _getTabIndex(disableInteractive) {\n    return disableInteractive ? -1 : 0;\n  }\n\n  /**\n   * gets the role of cues based on whether or not interactive cues are disabled\n   *\n   * @param {boolean} Is the interactive transcript mode disabled?\n   * @returns {string} the role of the cue, `button` or `null`\n   */\n  _getRole(disableInteractive) {\n    return disableInteractive ? null : \"button\";\n  }\n\n  /**\n   * forwards the listener for transcript cue click to seek accordingly\n   */\n  _handleCueSeek(e) {\n    if (!this.disableInteractive) {\n      this.dispatchEvent(\n        new CustomEvent(\"transcript-seek\", { detail: e.detail })\n      );\n    }\n  }\n\n  /**\n   * determines if this is the currently selected transcript to show or hide\n   *\n   * @param {integer} the index of the transcript\n   */\n  _isActive(selectedTranscript, index) {\n    return (\n      selectedTranscript !== undefined &&\n      selectedTranscript !== null &&\n      parseInt(selectedTranscript) === parseInt(index)\n    );\n  }\n\n  /**\n   * determines if this is the currently selected transcript to show or hide\n   *\n   * @param {integer} the index of the transcript\n   */\n  _isLoading(selectedTranscript, tracks) {\n    return (\n      selectedTranscript === undefined ||\n      selectedTranscript === null ||\n      tracks === undefined ||\n      tracks === null ||\n      tracks.length === 0\n    );\n  }\n\n  _stampLoadingStatus(disableSeek) {\n    this.$.loading.innerHTML =\n      disableSeek === false\n        ? this._getLocal(\"transcript\", \"label\")\n        : this._getLocal(\"youTubeTranscript\", \"label\");\n    return this.$.loading.innerHTML;\n  }\n}\nwindow.customElements.define(A11yMediaTranscript.tag, A11yMediaTranscript);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\nimport \"@lrnwebcomponents/simple-search/simple-search.js\";\nimport \"./a11y-media-button.js\";\n\nexport { A11yMediaTranscriptControls };\n/**\n * `a11y-media-transcript-controls`\n * `A controls for the transcript element.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-transcript-controls \n  accent-color$=\"[[accentColor]]\"                 // Optional accent color highlighted cues, \n                                                  // using the following materialize colors: \n                                                  // red, pink, purple, deep-purple, indigo, blue, \n                                                  // light blue, cyan, teal, green, light green, lime, \n                                                  // yellow, amber, orange, deep-orange, and brown. \n                                                  // Default is null. \n  custom-microcopy$=\"[[customMicrocopy]]\"         // Optional customization or text and icons\n  disable-print-button$=\"[[disablePrintButton]]\"  // Disable the print button?\n  disable-scroll$=\"[[disableScroll]]\"             // Disable autoscrolling transcript as video plays? \n  disable-search$=\"[[disableSearch]]\"             // Disable transcript search? \n</a11y-media-transcript-controls>```\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaTranscriptControls extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * target of the controls\n       */\n      target: {\n        type: Object,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-transcript-controls\";\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaBehaviors];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          height: 44px;\n          max-height: 44px;\n          min-height: 44px;\n          color: var(--a11y-media-color);\n          background-color: var(--a11y-media-transcript-bg-color);\n          --a11y-media-button-bg-color: var(--a11y-media-transcript-bg-color);\n          --a11y-media-button-hover-bg-color: var(\n            --a11y-media-transcript-bg-color\n          );\n          --simple-search-input-text-color: var(--a11y-media-color);\n          --simple-search-input-line-color: var(--a11y-media-accent-color);\n          --simple-search-input-placeholder-color: var(\n            --a11y-media-transcript-color\n          );\n          --simple-search-button-color: var(--a11y-media-accent-color);\n          --simple-search-button-hover-color: var(\n            --a11y-media-faded-accent-color\n          );\n          --simple-search-button-bg-color: var(--a11y-media-bg-color);\n          --simple-search-button-border-color: var(--a11y-media-bg-color);\n          --simple-search-button-hover-border-color: var(--a11y-media-bg-color);\n          --simple-search-button-disabled-color: var(\n            --simple-colors-default-theme-grey-5\n          );\n          --simple-search-button-disabled-bg-color: var(\n            --simple-colors-default-theme-grey-2\n          );\n          --simple-search-button-disabled-border-color: var(\n            --simple-colors-default-theme-grey-3\n          );\n          --paper-input-container-input-color: var(--a11y-media-color);\n          --simple-search-container: {\n            padding: 0 15px;\n          }\n        }\n        :host #searchbar {\n          display: flex;\n          align-items: stretch;\n          justify-content: space-between;\n          width: 100%;\n        }\n        :host #searching {\n          flex-grow: 2;\n        }\n        :host #autoscroll {\n          padding-right: 8px;\n        }\n        :host #scrolling,\n        :host #printing {\n          display: flex;\n          align-items: center;\n        }\n        @media print {\n          :host {\n            display: none;\n          }\n        }\n      </style>\n      <div id=\"searchbar\">\n        <div id=\"searching\">\n          <simple-search\n            id=\"simplesearch\"\n            controls=\"transcript\"\n            disabled$=\"[[disableSearch]]\"\n            hidden$=\"[[disableSearch]]\"\n            no-label-float\n            next-button-icon$=\"[[_getLocal('nextResult','icon')]]\"\n            next-button-label$=\"[[_getLocal('nextResult','label')]]\"\n            prev-button-icon$=\"[[_getLocal('prevResult','icon')]]\"\n            prev-button-label$=\"[[_getLocal('prevResult','label')]]\"\n            search-input-icon$=\"[[_getLocal('search','icon')]]\"\n            search-input-label$=\"[[_getLocal('search','label')]]\"\n            target=\"[[target]]\"\n          >\n          </simple-search>\n        </div>\n        <div id=\"scrolling\">\n          <a11y-media-button\n            id=\"scroll\"\n            controls=\"transcript\"\n            icon=\"[[_getLocal('autoScroll','icon')]]\"\n            label=\"[[_getLocal('autoScroll','label')]]\"\n            on-click=\"_handleScrollClick\"\n            toggle$=\"[[!disableScroll]]\"\n          >\n          </a11y-media-button>\n        </div>\n        <div\n          id=\"printing\"\n          hidden$=\"[[disablePrintButton]]\"\n          disabled$=\"[[disablePrintButton]]\"\n        >\n          <a11y-media-button\n            id=\"download\"\n            controls=\"transcript\"\n            icon$=\"[[_getLocal('download','icon')]]\"\n            label=\"[[_getLocal('download','label')]]\"\n            on-click=\"_handleDownloadClick\"\n          >\n          </a11y-media-button>\n          <a11y-media-button\n            id=\"print\"\n            controls=\"transcript\"\n            icon$=\"[[_getLocal('print','icon')]]\"\n            label=\"[[_getLocal('print','label')]]\"\n            on-click=\"_handlePrintClick\"\n          >\n          </a11y-media-button>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    root.search = root.$.simplesearch;\n    root.dispatchEvent(\n      new CustomEvent(\"searchbar-added\", { detail: root.search })\n    );\n  }\n\n  /**\n   * handles the transcript scroll button toggle\n   */\n  _handleScrollClick(e) {\n    this.dispatchEvent(new CustomEvent(\"toggle-scroll\", { detail: this }));\n  }\n}\nwindow.customElements.define(\n  A11yMediaTranscriptControls.tag,\n  A11yMediaTranscriptControls\n);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\n\n// register globally so we can make sure there is only one\nwindow.A11yMediaYoutube = window.A11yMediaYoutube || {};\n// request if this exists. This helps invoke the element existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same modal\n\nwindow.A11yMediaYoutube.requestAvailability = () => {\n  if (!window.A11yMediaYoutube.instance) {\n    window.A11yMediaYoutube.instance = document.createElement(\n      \"a11y-media-youtube\"\n    );\n    document.body.appendChild(window.A11yMediaYoutube.instance);\n  }\n  return window.A11yMediaYoutube.instance;\n};\n/**\n * `a11y-media-youtube`\n * `A utility that manages multiple instances of a11y-media-player on a single page.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n */\nclass A11yMediaYoutube extends PolymerElement {\n  /* REQUIRED FOR TOOLING DO NOT TOUCH */\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-youtube\";\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * whether or not the YouTube API is ready\n       */\n      apiReady: {\n        type: Boolean,\n        value: window.YT !== undefined\n      },\n      /**\n       * a counter for creating unique ideas for each YouTube player container\n       */\n      counter: {\n        type: Number,\n        value: 0\n      }\n    };\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   * Makes sure there is a utility ready and listening for elements.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this,\n      api = document.createElement(\"script\");\n    api.setAttribute(\"src\", \"https://www.youtube.com/iframe_api\");\n    api.setAttribute(\"type\", \"text/javascript\");\n    document.body.appendChild(api);\n    window.onYouTubeIframeAPIReady = () => {\n      var event = new CustomEvent(\"youtube-api-ready\");\n      root.apiReady = true;\n      document.dispatchEvent(event);\n    };\n  }\n\n  /**\n   * initializes the youtube player for a given element\n   *\n   * @param {options} the YouTube options object, eg. `{ \"width\": \"100%\", \"height\": \"100%\", \"videoId\": \"NP0mQeLWCCo\" }`\n   * @returns {options} the YouTube player object\n   */\n  initYoutubePlayer(options) {\n    //get unique id for each youtube iframe\n    // function to create and init iframe\n    let temp = \"a11y-media-yt-\",\n      div = document.createElement(\"div\"),\n      vdata = options.videoId.split(/[\\?&]/),\n      vid = vdata[0],\n      start = null,\n      end = null,\n      cue = { videoId: vid };\n    this.counter++;\n    temp += this.counter;\n    document.body.appendChild(div);\n    div.setAttribute(\"id\", temp);\n    let loadVideo = e => {\n        for (let i = 1; i < vdata.length; i++) {\n          let param = vdata[i].split(\"=\");\n          if (param[0] === \"t\") {\n            let hh = param[1].match(/(\\d)+h/),\n              mm = param[1].match(/(\\d)+m/),\n              ss = param[1]\n                .replace(/\\d+h/, \"\")\n                .replace(/\\d+m/, \"\")\n                .replace(/s/, \"\")\n                .match(/(\\d)+/),\n              h = hh !== null && hh.length > 1 ? parseInt(hh[1]) * 360 : 0,\n              m = mm !== null && mm.length > 1 ? parseInt(mm[1]) * 60 : 0,\n              s = ss !== null && ss.length > 1 ? parseInt(ss[1]) : 0;\n            start = parseInt(h + m + s);\n          } else if (param[0] === \"start\") {\n            start = parseInt(param[1]);\n          } else if (param[0] === \"end\") {\n            end = parseInt(param[1]);\n          }\n        }\n        if (start !== null) {\n          start = Math.max(0, start);\n          cue.startSeconds = start;\n        } else {\n          start = 0;\n        }\n        if (end !== null) {\n          end = start !== null ? Math.max(start, end) : Math.max(0, end);\n          cue.endSeconds = end;\n        }\n        e.target.cueVideoById(cue);\n      },\n      iframe = new YT.Player(temp, {\n        width: options.width,\n        height: options.height,\n        events: { onReady: loadVideo },\n        playerVars: {\n          color: \"white\",\n          controls: 0,\n          autoplay: options.autoplay,\n          disablekb: 1,\n          enablejsapi: 1,\n          iv_load_policy: 3,\n          modestbranding: 1,\n          showinfo: 0,\n          rel: 0\n        }\n      });\n\n    // add methods and properties to api so that it matches HTML5 video\n    iframe.tracks = [];\n    iframe.duration = 0;\n    iframe.seekable = {\n      length: 1,\n      start: index => {\n        iframe.seekable.start = index => {\n          return start || 0;\n        };\n      },\n      end: index => {\n        iframe.seekable.end = index => {\n          return end !== null\n            ? Math.min(end, iframe.duration)\n            : iframe.duration;\n        };\n      }\n    };\n    iframe.paused = true;\n    iframe.timeupdate;\n    iframe.play = () => {\n      if (iframe.playVideo !== undefined) iframe.playVideo();\n    };\n    iframe.addEventListener(\"onStateChange\", () => {\n      iframe.paused = iframe.getPlayerState() !== 1;\n      if (iframe.paused) {\n        clearInterval(iframe.timeupdate);\n      } else {\n        iframe.timeupdate = setInterval(() => {\n          document.dispatchEvent(\n            new CustomEvent(\"timeupdate\", { detail: iframe })\n          );\n        }, 1);\n      }\n    });\n    iframe.pause = () => {\n      if (iframe.pauseVideo !== undefined) iframe.pauseVideo();\n    };\n    iframe.seek = (time = 0) => {\n      if (iframe.seekTo !== undefined) {\n        iframe.seekTo(time);\n        if (iframe.paused) {\n          iframe.seekupdate = setInterval(() => {\n            if (Math.abs(iframe.getCurrentTime() - time) < 1) {\n              document.dispatchEvent(\n                new CustomEvent(\"timeupdate\", { detail: iframe })\n              );\n              clearInterval(iframe.seekupdate);\n            }\n          }, 1);\n        }\n      }\n    };\n    iframe.setMute = mode => {\n      if (iframe.mute !== undefined) mode ? iframe.mute() : iframe.unMute();\n    };\n    return iframe;\n  }\n}\nwindow.customElements.define(A11yMediaYoutube.tag, A11yMediaYoutube);\nexport { A11yMediaYoutube };\n","/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { A11yMediaBehaviors } from \"./lib/a11y-media-behaviors.js\";\nimport { pathFromUrl } from \"@polymer/polymer/lib/utils/resolve-url.js\";\nimport \"@lrnwebcomponents/es-global-bridge/es-global-bridge.js\";\nimport \"./lib/a11y-media-state-manager.js\";\nimport \"./lib/a11y-media-controls.js\";\nimport \"./lib/a11y-media-html5.js\";\nimport \"./lib/a11y-media-transcript.js\";\nimport \"./lib/a11y-media-transcript-controls.js\";\nimport \"./lib/a11y-media-youtube.js\";\n/**\n * `a11y-media-player`\n * An accessible video player\n *\n * @microcopy - the mental model for this element\n * ```\n<a11y-media-player\n  accent-color$=\"[[accentColor]]\"              // Optional accent color for controls,\n                                               // using the following materialize colors:\n                                               // red, pink, purple, deep-purple, indigo, blue,\n                                               // light blue, cyan, teal, green, light green, lime,\n                                              // yellow, amber, orange, deep-orange, and brown.\n                                              // Default is null.\n  audio-only$=\"[[audioOnly]]\"                 // Is media audio only?\n  autoplay$=\"[[autoplay]]\"                    // Is player set to autoplay (not recommended for a11y)?\n  cc$=\"[[cc]]\"                                // Are closed captions toggled?\n  custom-microcopy$=\"[[customMicrocopy]]\"  // Optional customization or text and icons\n  dark$=\"[[dark]]\"  // Is the color scheme dark? Default is light.\n  dark-transcript$=\"[[darkTranscript]]\"  // Use dark theme on transcript? Default is false, even when player is dark.\n  disable-fullscreen$=\"[[disableFullscreen]]\" // Is full screen mode disabled?\n  disable-interactive$=\"[[disableInteractive]]\" // Disable interactive cues?\n  fullscreen$=\"[[fullscreen]]\"  // Is full screen mode toggled on?\n  height$=\"[[height]]\"  // The height of player\n  hide-timestamps$=\"[[hideTimestamps]]\"  // Hide cue timestamps?\n  lang$=\"[[lang]]\"  // The language of the media\n  loop$=\"[[loop]]\"  // Is video on a loop?\n  muted$=\"[[muted]]\"  // Is video muted?\n  media-title$=\"[[mediaTitle]]\"  // The title of the media\n  playback-rate$=\"[[playbackRate]]\"  // The speed that video plays, default is 1 (for 100%)\n  sticky-corner$=\"[[stickyCorner]]\"  // When user scrolls a playing video off-screen,\n  which corner will it stick to? Values are:\n  top-right (default), top-left, bottom-left, bottom-right,\n  and none (to turn sticky off)\n  thumbnail-src$=\"[[thumbnailSrc]]\"  // Optional thumbanil/cover image url\n  volume$=\"[[volume]]\">  // The initial volume of the video\n\n  <!--video sources and tracks-->\n  <source src=\"/path/to/video.mp4\" type=\"video/mp4\">\n  <source src=\"/path/to/video.webm\" type=\"video/webm\">\n  <track label=\"English\" kind=\"subtitles\" srclang=\"en\" src=\"path/to/subtitles/en.vtt\" default>\n  <track label=\"Deutsch\" kind=\"subtitles\" srclang=\"de\" src=\"path/to/subtitles/de.vtt\">\n  <track label=\"Español\" kind=\"subtitles\" srclang=\"es\" src=\"path/to/subtitles/es.vtt\">\n\n</a11y-media-player>```\n *\n * Intermediate customization of player:\n * ```\n--a11y-media-text-color: text color, default is --simple-colors-default-theme-grey-11\n--a11y-media-bg-color: background color, default is --simple-colors-default-theme-grey-2\n--a11y-media-hover-color: text color on hover, default is --simple-colors-default-theme-grey-12\n--a11y-media-hover-bg-color: background color, default is --simple-colors-default-theme-grey-2\n--a11y-media-accent-color: an accent color, default is --simple-colors-default-theme-accent-9\n--a11y-media-faded-accent-color: a subtler version of accent color, default is --simple-colors-default-theme-accent-8\n--a11y-media-outline-color: border-color of group, default is --a11y-media-bg-color```\n *\n * Intermediate customization of transcript:\n * ```\n --a11y-media-transcript-color: transcript color, default is --simple-colors-default-theme-grey-12\n--a11y-media-transcript-bg-color: transcript background color, default is --simple-colors-default-theme-grey-1\n--a11y-media-transcript-active-cue-color: transcript active cue color, default is --simple-colors-default-theme-grey-12\n--a11y-media-transcript-active-cue-bg-color: transcript active cue background color, default is --simple-colors-default-theme-grey-1\n--a11y-media-transcript-focused-cue-color: transcript focused cue color, default is --simple-colors-default-theme-grey-12\n--a11y-media-transcript-focused-cue-br-color: transcript focused cue background color, default is --simple-colors-default-theme-accent-1\n--a11y-media-transcript-match-color: transcript match color, default is --simple-colors-default-theme-accent-1\n--a11y-media-transcript-match-bg-color: transcript match background color, default is --simple-colors-default-theme-grey-12```\n *\n * Advanced styles for settings menu:\n * ```\n--a11y-media-settings-menu-color: settings menu text color, default is --a11y-media-text-color\n--a11y-media-settings-menu-bg-color: settings menu background color, default is --a11y-media-bg-color\n--a11y-media-settings-menu-hover-color: settings menu text color on hover, default is --a11y-media-hover-color\n--a11y-media-settings-menu-hover-bg-color: settings menu background color on hover, default is --a11y-media-hover-bg-color```\n *\n * Advanced styles for buttons:\n * ```\n--a11y-media-button-color: button text color, default is --a11y-media-text-color\n--a11y-media-button-bg-color: button background color, default is --a11y-media-bg-color\n--a11y-media-button-hover-color: button text color when focused/hovered, default is --a11y-media-hover-color\n--a11y-media-button-hover-bg-color: button background color when focused/hovered, default is --a11y-media-bg-color\n--a11y-media-button-toggle-color: button text color when tggled on, default is --a11y-media-faded-accent-color```\n *\n * Advanced styles for toggles:\n * ```\n--paper-toggle-button-unchecked-bar-color: color of toggle button when off, default is --a11y-media-color\n--paper-toggle-button-unchecked-button-color: color of toggle button when off, default is --a11y-media-color\n--paper-toggle-button-checked-bar-color: color of toggle button when on, default is --a11y-media-accent-color\n--paper-toggle-button-checked-button-color: color of toggle button when on, default is --a11y-media-accent-color```\n *\n * Advanced styles for sliders:\n * ```\n--a11y-media-slider-primary-color: primary slider color, default is --a11y-media-accent-color\n--a11y-media-slider-secondary-color: slider buffer color, default is --a11y-media-faded-accent-color\n--a11y-media-slider-pin-color: color of the pin that shows slider value, default is --a11y-media-faded-bg-color\n--a11y-media-slider-pin-start-color: color of the pin at start default is --a11y-media-faded-bg-color\n--a11y-media-slider-pin-end-color: color of the pin at end, default is --a11y-media-faded-bg-color\n--a11y-media-slider-knob-color: slider knob color, default is --a11y-media-accent-color\n--a11y-media-slider-knob-start-color: slider knob color at start, default is --a11y-media-accent-color\n--a11y-media-slider-knob-end-color: slider knob color at end, default is --a11y-media-accent-color\n--a11y-media-slider-knob-border-color: slider knob bordercolor, default is --a11y-media-accent-color\n--a11y-media-slider-knob-start-border-color: slider knob border color at start, default is --a11y-media-accent-color\n--a11y-media-slider-knob-end-border-color: slider knob border color at end, default is --a11y-media-accent-color```\n *\n * @extends A11yMediaBehaviors\n * @polymer\n * @customElement\n * @demo demo/index.html video demo\n * @demo demo/audio.html audio demo\n * @demo demo/youtube.html YouTube demo\n *\n */\nclass A11yMediaPlayer extends A11yMediaBehaviors {\n  \n  // render function\n  static get template() {\n    return html`\n<style>\n:host {\n  display: block;\n  width: calc(100% - 2px);\n  border: 1px solid var(--simple-colors-default-theme-grey-3);\n  --a11y-media-color: var(--simple-colors-default-theme-grey-11);\n  --a11y-media-bg-color: var(--simple-colors-default-theme-grey-2);\n  --a11y-media-hover-color: var(--simple-colors-default-theme-grey-12);\n  --a11y-media-hover-bg-color: var(--simple-colors-default-theme-grey-2);\n  --a11y-media-accent-color: var(--simple-colors-default-theme-accent-9);\n  --a11y-media-faded-accent-color: var(--simple-colors-default-theme-accent-8);\n\n  \n  --a11y-media-settings-menu-color: var(--a11y-media-color);\n  --a11y-media-settings-menu-bg-color: var(--a11y-media-bg-color);\n  --a11y-media-settings-menu-hover-color: var(--a11y-media-hover-color);\n  --a11y-media-settings-menu-hover-bg-color: var(--a11y-media-hover-bg-color);\n\n  \n  --a11y-media-button-color: var(--a11y-media-color);\n  --a11y-media-button-bg-color: var(--a11y-media-bg-color);\n  --a11y-media-button-hover-color: var(--a11y-media-accent-color);\n  --a11y-media-button-hover-bg-color: var(--a11y-media-hover-bg-color);\n  --a11y-media-button-toggle-color: var(--a11y-media-faded-accent-color);\n\n  \n  --paper-toggle-button-unchecked-bar-color: var(--a11y-media-color);\n  --paper-toggle-button-unchecked-button-color: var(--a11y-media-color);\n  --paper-toggle-button-checked-bar-color: var(--a11y-media-accent-color);\n  --paper-toggle-button-checked-button-color: var(--a11y-media-accent-color);\n\n  \n  --paper-slider-active-color: var(--a11y-media-accent-color);\n  --paper-slider-secondary-color: var(--a11y-media-faded-accent-color);\n  --paper-slider-pin-color: var(--a11y-media-faded-bg-color);\n  --paper-slider-pin-start-color: var(--a11y-media-faded-bg-color);\n  --paper-slider-pin-end-color: var(--a11y-media-faded-bg-color);\n  --paper-slider-knob-color: var(--a11y-media-accent-color);\n  --paper-slider-knob-start-color: var(--a11y-media-bg-color);\n  --paper-slider-knob-end-color: var(--a11y-media-bg-color);\n  --paper-slider-knob-border-color: var(--a11y-media-accent-color);\n  --paper-slider-knob-start-border-color: var(--a11y-media-bg-color);\n  --paper-slider-knob-end-border-color: var(--a11y-media-bg-color);\n  \n  \n  --a11y-media-transcript-color: var(--simple-colors-default-theme-grey-7);\n  --a11y-media-transcript-bg-color: var(--simple-colors-default-theme-grey-1);\n  --a11y-media-transcript-accent-color: var(--simple-colors-default-theme-accent-8);\n  --a11y-media-transcript-faded-accent-color: var(--simple-colors-default-theme-accent-10);\n  --a11y-media-transcript-cue-color: var(--simple-colors-fixed-theme-grey-12);\n  --a11y-media-transcript-cue-bg-color: var(--simple-colors-fixed-theme-grey-1);\n  --a11y-media-transcript-active-cue-color: var(--simple-colors-fixed-theme-grey-12);\n  --a11y-media-transcript-active-cue-bg-color: var(--simple-colors-fixed-theme-accent-1);\n  --a11y-media-transcript-focused-cue-color: var(--simple-colors-fixed-theme-grey-12);\n  --a11y-media-transcript-focused-cue-bg-color: var(--simple-colors-fixed-theme-grey-2);\n  --a11y-media-transcript-match-color: var(--simple-colors-fixed-theme-grey-1);\n  --a11y-media-transcript-match-bg-color: var(--simple-colors-fixed-theme-accent-10);\n  --a11y-media-transcript-match-border-color: var(--simple-colors-fixed-theme-accent-12);\n}\n:host([dark]) {\n  border: 1px solid var(--simple-colors-default-theme-grey-1);\n}\n:host([dark-transcript]) {\n  --a11y-media-transcript-bg-color: var(--simple-colors-dark-theme-grey-1);\n  --a11y-media-transcript-cue-color: var(--simple-colors-dark-theme-grey-12);\n  --a11y-media-transcript-cue-bg-color: var(--simple-colors-dark-theme-grey-1);\n  --a11y-media-transcript-active-cue-color: var(--simple-colors-dark-theme-accent-10);\n  --a11y-media-transcript-active-cue-bg-color: var(--simple-colors-dark-theme-grey-1);\n  --a11y-media-transcript-match-color: var(--simple-colors-dark-theme-grey-1);\n  --a11y-media-transcript-match-bg-color: var(--simple-colors-dark-theme-accent-10);\n  --a11y-media-transcript-match-border-color: var(--simple-colors-dark-theme-accent-12);\n  --a11y-media-transcript-focused-cue-color: var(--simple-colors-dark-theme-grey-12);\n  --a11y-media-transcript-focused-cue-bg-color: var(--simple-colors-dark-theme-grey-2);\n}\n:host,\n:host #outerplayer {\n  color: var(--simple-colors-default-theme-grey-12);\n  background-color: var(--simple-colors-default-theme-grey-2);\n}\n:host > * {\n  transition: all 0.5s;\n}\n:host,\n:host #outerplayer,\n:host #player,\n:host #outertranscript,\n:host #innertranscript {\n  display: flex;\n  flex-flow: column;\n  align-items: stretch;\n  align-content: stretch;\n} \n:host #innerplayer {\n  display: flex;\n}\n:host([hidden]),\n:host *[hidden] {\n  display: none !important;\n}\n:host #innerplayer,\n:host #player, \n:host #player > *,\n:host #customcc,\n:host #customcctxt,\n:host #slider,\n:host #controls,\n:host #outertranscript,\n:host #innertranscript {\n  width: 100%;\n}\n:host #innertranscript > * {\n  width: calc(100% - 1px);\n}\n:host > *,\n:host #innerplayer,\n:host #player,\n:host #player > *,\n:host #customcctxt {\n  flex: 1 1 auto;\n}\n:host #controls,\n:host #tcontrols {\n  flex: 0 0 44px;\n}\n:host #innerplayer {\n  margin: 0 auto;\n}\n:host #player {\n  position: relative;\n}\n:host #player > * {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n}\n:host #playbutton,\n:host #slider,\n:host #controls {\n  z-index: 2;\n}\n:host([audio-only]) #playbutton {\n  opacity: 0;\n}\n:host #slider {\n  flex: 0 0 32px;\n  height: 32px;\n}\n:host([thumbnail-src]) #youtube {\n  opacity: 0;\n}\n:host #youtube[elapsed] {\n  opacity: 1;\n  transition: opacity 0.5s;\n}\n:host #customcc:not([hidden]) {\n  font-size: 20px;\n  transition: font-size 0.25s;\n  display: flex;\n}\n:host #customcctxt:not(:empty) {\n  align-self: flex-end;\n  font-family: sans-serif;\n  color: white;\n  margin: 4px 10px;\n  padding: 0.15em 4px;\n  background-color: black;\n  background-color: rgba(0, 0, 0, 0.8);\n  transition: all 0.5s;\n}\n:host([audio-only]:not([thumbnail-src])) #customcctxt {\n  align-self: center;\n  color: var(--a11y-media-color);\n  background-color: transparent;\n}\n:host #printthumb {\n  width: 100%;\n  margin: 0;\n  display: block;\n  border-top: 1px solid #aaaaaa;\n}\n:host .media-caption:not(:empty) {\n  width: calc(100% - 30px);\n  padding: 5px 15px;\n}\n:host .media-type {\n  font-style: italic;\n}\n:host #outertranscript {\n  padding: 0 1px 0 0;\n}\n:host #innertranscript {\n  flex: 1 0 194px;\n}\n:host #transcript {\n  flex: 1 0 150px;\n  overflow-y: scroll;\n}\n:host .sr-only {\n  position: absolute;\n  left: -9999px;\n  font-size: 0;\n  height: 0;\n  width: 0;\n  overflow: hidden;\n}\n@media screen {\n  :host([flex-layout]:not([responsive-size=\"xs\"])) {\n    flex-flow: row;\n    padding: 0;\n  }\n  :host([flex-layout]:not([responsive-size=\"xs\"])) #outerplayer {\n    flex: 1 0 auto;\n  }\n  :host #printthumb,\n  :host([height]) #outertranscript,\n  :host([stand-alone]) #outertranscript,\n  :host([hide-transcript]) #outertranscript {\n    display: none;\n  }\n  :host([sticky]:not([sticky-corner=\"none\"])) #outerplayer {\n    position: fixed;\n    top: 5px;\n    right: 5px;\n    width: 200px;\n    max-width: 200px;\n    z-index: 999999;\n    border: 1px solid var(--a11y-media-bg-color);\n    box-shadow: 1px 1px 20px 1px rgba(125, 125, 125);\n    border-radius: 3.2px;\n  }\n  :host([dark][sticky]:not([sticky-corner=\"none\"])) #outerplayer {\n    border: 1px solid var(--a11y-media-bg-color);\n  }\n  :host([sticky][sticky-corner=\"top-left\"]) #outerplayer {\n    right: unset;\n    left: 5px;\n  }\n  :host([flex-layout]:not([responsive-size=\"xs\"])) > div {\n    width: 50%;\n    flex: 1 1 auto;\n  }\n  :host #innertranscript {\n    position: relative;\n  }\n  :host([hide-transcript]) #outerplayer {\n    min-width: 50%;\n    max-width: 100%;\n  }\n  :host([hide-transcript]) #outertranscript {\n    display: none;\n  }\n  :host(:not([no-height]):not([stacked-layout]):not([responsive-size=\"xs\"]))\n    #transcript {\n    position: absolute;\n    top: 44px;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    overflow-y: scroll;\n  }\n  :host(:not([no-height]):not([stacked-layout]):not([responsive-size=\"xs\"]))\n    #innerplayer.totop {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 200px !important;\n    z-index: 9999;\n  }\n  :host([sticky][sticky-corner=\"bottom-left\"]) #innerplayer {\n    top: unset;\n    right: unset;\n    bottom: 5px;\n  }\n  :host([sticky][sticky-corner=\"bottom-right\"]) #innerplayer {\n    top: unset;\n    bottom: 5px;\n  }\n  :host([sticky]:not([sticky-corner=\"none\"]):not([no-height]):not([stacked-layout]):not([responsive-size=\"xs\"]))\n    #controls {\n    display: none;\n  }\n  :host([responsive-size=\"lg\"]) #customcc {\n    font-size: 16px;\n  }\n  :host([responsive-size=\"md\"]) #customcc,\n  :host([flex-layout][responsive-size=\"xl\"]) #customcc {\n    font-size: 14px;\n  }\n  :host([responsive-size=\"sm\"]) #customcc,\n  :host([flex-layout][responsive-size=\"lg\"]) #customcc {\n    font-size: 12px;\n  }\n  :host([responsive-size=\"xs\"]) #customcc,\n  :host([flex-layout][responsive-size=\"md\"]) #customcc,\n  :host([flex-layout][responsive-size=\"sm\"]) #customcc {\n    font-size: 10px;\n  }\n  :host([sticky]:not([sticky-corner=\"none\"])) #customcc {\n    display: none;\n  }\n  :host .media-caption {\n    color: var(--a11y-media-bg-color);\n    background-color: var(--a11y-media-accent-color);\n  }\n  :host #audio-only {\n    text-align: center;\n    font-style: italic;\n    width: 100%;\n    line-height: 160%;\n  }\n  :host .print-only {\n    display: none;\n  }\n}\n\n@media print {\n  :host,\n  :host([dark]) {\n    outline: 1px solid #aaaaaa;\n    background-color: #ffffff;\n  }\n  :host .screen-only,\n  :host #printthumb:not([src]),\n  :host(:not([thumbnail-src])) #player {\n    display: none;\n  }\n  :host #searchbar {\n    display: none;\n  }\n  :host .media-caption {\n    background-color: #cccccc;\n    color: #000000;\n    font-size: 120%;\n  }\n}</style>\n<div class=\"sr-only\">[[mediaCaption]]</div>\n  <div id=\"outerplayer\">\n    <div id=\"innerplayer\">\n      <div id=\"player\"\n        style$=\"[[_getThumbnailCSS(thumbnailSrc,isYoutube,audioOnly)]]\">\n        <a11y-media-play-button\n          id=\"playbutton\"\n          action$=\"[[playPause.action]]\"\n          audio-only$=\"[[audioOnly]]\"\n          disabled=\"true\"\n          elapsed$=\"[[_hidePlayButton(thumbnailSrc, isYoutube, __elapsed)]]\"\n          hidden$=\"[[audioNoThumb]]\"\n          disabled$=\"[[audioNoThumb]]\"\n          on-controls-change=\"_onControlsChanged\"\n          localization$=\"[[localization]]\">\n        </a11y-media-play-button>\n        <a11y-media-html5\n          id=\"html5\"\n          audio-only$=\"[[audioOnly]]\"\n          autoplay$=\"[[autoplay]]\"\n          cc$=\"[[cc]]\"\n          crossorigin$=\"[[crossorigin]]\"\n          hidden$=\"[[isYoutube]]\"\n          media-lang$=\"[[mediaLang]]\"\n          loop$=\"[[loop]]\"\n          muted$=\"[[muted]]\"\n          manifest$=\"[[manifest]]\"\n          on-media-loaded=\"_handleMediaLoaded\"\n          ontimeupdate=\"_handleTimeUpdate\"\n          playing$=\"[[__playing]]\"\n          playback-rate$=\"[[playbackRate]]\"\n          thumbnail-src$=\"[[thumbnailSrc]]\"\n          preload$=\"[[preload]]\"\n          volume$=\"[[volume]]\"\n        >\n          <slot></slot>\n        </a11y-media-html5>\n        <div id=\"youtube\" \n          elapsed$=\"[[__elapsed]]\" \n          lang$=\"[[mediaLang]]\"\n          video-id$=\"[[videoId]]\">\n        </div>\n        <div id=\"customcc\" \n          aria-live=\"polite\"\n          class=\"screen-only\" \n          hidden$=\"[[!showCustomCaptions]]\">\n          <div id=\"customcctxt\"></div>\n        </div>\n      </div>\n    </div>\n    <paper-slider id=\"slider\"\n      class=\"screen-only\"\n      disabled$=\"[[disableSeek]]\"\n      label$=\"[[seekSlider.label]]\"\n      min=\"0\"\n      max=\"[[__duration]]\"\n      on-mousedown=\"_handleSliderStart\"\n      on-mouseup=\"_handleSliderStop\"\n      on-keyup=\"_handleSliderStop\"\n      on-keydown=\"_handleSliderStart\"\n      on-blur=\"_handleSliderStop\"\n      secondary-progress=\"[[__buffered]]\"\n      value=\"[[__elapsed]]\"\n    >\n    </paper-slider>\n    <a11y-media-controls id=\"controls\"\n      cc$=\"[[cc]]\"\n      disable-seek$=\"[[disableSeek]]\"\n      fixed-height$=\"[[height]]\"\n      fullscreen$=\"[[fullscreen]]\"\n      fullscreen-button$=\"[[fullscreenButton]]\"\n      has-captions$=\"[[hasCaptions]]\"\n      has-transcript$=\"[[hasTranscript]]\"\n      hide-transcript$=\"[[hideTranscript]]\"\n      mute-unmute=\"[[muteUnmute]]\"\n      on-controls-change=\"_onControlsChanged\"\n      on-print-transcript=\"_handlePrinting\"\n      on-download-transcript=\"_handleDownload\"\n      responsive-size$=\"[[responsiveSize]]\"\n      play-pause=\"[[playPause]]\"\n      stand-alone$=\"[[standAlone]]\"\n      volume=\"[[__volume]]\">\n    </a11y-media-controls>\n    <div\n      aria-hidden=\"true\"\n      class=\"screen-only media-caption\"\n      hidden$=\"[[!_hasAttribute(mediaCaption)]]\">\n      [[mediaCaption]]\n    </div>\n    <div class=\"print-only media-caption\">[[printCaption]]</div>\n  </div>\n  <img id=\"printthumb\" aria-hidden=\"true\" src$=\"[[thumbnailSrc]]\" />\n  <div id=\"outertranscript\" hidden$=\"[[standAlone]]\">\n    <div id=\"innertranscript\" hidden$=\"[[hideTranscript]]\">\n      <a11y-media-transcript-controls id=\"tcontrols\"\n        accent-color$=\"[[accentColor]]\"\n        localization$=\"[[localization]]\"\n        dark$=\"[[darkTranscript]]\"\n        disable-print-button$=\"[[disablePrintButton]]\"\n        disable-scroll$=\"[[disableScroll]]\"\n        disable-search$=\"[[disableSearch]]\"\n        has-transcript$=\"[[hasTranscript]]\"\n        localization$=\"[[localization]]\"\n        on-searchbar-added=\"_handleSearchAdded\"\n        on-toggle-scroll=\"_handleTranscriptScrollToggle\"\n        on-print-transcript=\"_handlePrinting\"\n        on-download-transcript=\"_handleDownload\"\n        stand-alone$=\"[[standAlone]]\">\n      </a11y-media-transcript-controls>\n      <a11y-media-transcript id=\"transcript\" \n        accent-color$=\"[[accentColor]]\"\n        dark$=\"[[darkTranscript]]\"\n        disable-scroll$=\"[[disableScroll]]\"\n        disable-search$=\"[[disableSearch]]\"\n        disable-seek$=\"[[disableSeek]]\"\n        disable-interactive$=\"[[disableInteractive]]\"\n        hide-timestamps$=\"[[hideTimestamps]]\"\n        media-id$=\"[[id]]\"\n        on-transcript-seek=\"_handleTranscriptSeek\"\n        localization$=\"[[localization]]\"\n        search=\"[[search]]\"\n        selected-transcript$=\"[[__selectedTrack]]\">\n      </a11y-media-transcript>\n    </div>\n  </div>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  /**\n   * Allow this media to play concurrently with other a11y-media-players?\n   * Default is to pause this a11y-media-player when other a11y-media-player starts playing.\n   */\n\n  \"allowConcurrent\": {\n    \"name\": \"allowConcurrent\",\n    \"type\": \"Boolean\",\n    \"value\": false\n  },\n  /**\n   * Is it an audio player with no thumbnail?\n   */\n  \"audioNoThumb\": {\n    \"name\": \"audioNoThumb\",\n    \"type\": \"Boolean\",\n    \"computed\": \"_getAudioNoThumb(audioOnly,thumbnailSrc)\"\n  },\n  /**\n   * Use dark theme on transcript? Default is false, even when player is dark.\n   */\n  \"darkTranscript\": {\n    \"name\": \"darkTranscript\",\n    \"type\": \"Boolean\",\n    \"value\": false\n  },\n  /**\n   * disable fullscreen option\n   */\n  \"disableFullscreen\": {\n    \"name\": \"disableFullscreen\",\n    \"type\": \"Boolean\",\n    \"value\": false\n  },\n  /**\n   * disable interactive mode that makes the transcript clickable\n   */\n  \"disableInteractive\": {\n    \"name\": \"disableInteractive\",\n    \"type\": \"Boolean\",\n    \"value\": false\n  },\n  /**\n   * Determines if video and transcript are in a flex layout\n   */\n  \"flexLayout\": {\n    \"name\": \"flexLayout\",\n    \"type\": \"Boolean\",\n    \"computed\": \"_isFlexLayout(standAlone,hideTranscript,audioNoThumb,stackedLayout)\",\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Is fullscreen mode?\n   */\n  \"fullscreen\": {\n    \"name\": \"fullscreen\",\n    \"type\": \"Boolean\",\n    \"value\": false\n  },\n  /**\n   * show the FullscreenButton?\n   */\n  \"fullscreenButton\": {\n    \"name\": \"fullscreenButton\",\n    \"type\": \"Boolean\",\n    \"computed\": \"_getFullscreenButton(disableFullscreen,audioNoThumb,screenfullLoaded)\",\n    \"notify\": true\n  },\n\n  /**\n   * Does the player have tracks?\n   */\n  \"hasCaptions\": {\n    \"name\": \"hasCaptions\",\n    \"type\": \"Boolean\",\n    \"value\": false\n  },\n\n  /**\n   * Hide elapsed time?\n   */\n  \"hideElapsedTime\": {\n    \"name\": \"hideElapsedTime\",\n    \"type\": \"Boolean\",\n    \"value\": false\n  },\n  /**\n   * show cue's start and end time\n   */\n  \"hideTimestamps\": {\n    \"name\": \"hideTimestamps\",\n    \"type\": \"Boolean\",\n    \"value\": false\n  },\n  /**\n   * initially hide the transcript?\n   */\n  \"hideTranscript\": {\n    \"name\": \"hideTranscript\",\n    \"type\": \"Boolean\",\n    \"value\": false,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * initially hide the transcript?\n   */\n  \"id\": {\n    \"name\": \"id\",\n    \"type\": \"String\",\n    \"value\": null,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * The default media caption if none is given.\n   */\n  \"mediaCaption\": {\n    \"name\": \"mediaCaption\",\n    \"type\": \"String\",\n    \"computed\": \"_getMediaCaption(audioOnly,localization,mediaTitle)\"\n  },\n  /**\n   * the language of the media (if different from user interface language)\n   */\n  \"mediaLang\": {\n    \"name\": \"mediaLang\",\n    \"type\": \"String\",\n    \"value\": \"en\"\n  },\n  /**\n   * mute/unmute button\n   */\n  \"muteUnmute\": {\n    \"name\": \"muteUnmute\",\n    \"type\": \"Object\",\n    \"computed\": \"_getMuteUnmute(muted)\"\n  },\n  /**\n   * The media caption that displays when the page is printed.\n   */\n  \"printCaption\": {\n    \"name\": \"printCaption\",\n    \"type\": \"String\",\n    \"computed\": \"_getPrintCaption(audioOnly,audioLabel,videoLabel,mediaTitle)\"\n  },\n  /**\n   * Size of the a11y media element for responsive styling\n   */\n  \"responsiveSize\": {\n    \"name\": \"responsiveSize\",\n    \"type\": \"String\",\n    \"notify\": true,\n    \"value\": \"xs\",\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Has screenfull loaded?\n   */\n  \"screenfullLoaded\": {\n    \"name\": \"screenfullLoaded\",\n    \"type\": \"Boolean\",\n    \"value\": false,\n    \"notify\": true\n  },\n  /**\n   * is YouTube?\n   */\n  \"showCustomCaptions\": {\n    \"name\": \"showCustomCaptions\",\n    \"type\": \"Boolean\",\n    \"computed\": \"_showCustomCaptions(isYoutube, audioOnly, hasCaptions, cc)\"\n  },\n  /**\n   * Optional array ouf sources.\n   */\n  \"sources\": {\n    \"name\": \"sources\",\n    \"type\": \"Array\",\n    \"value\": []\n  },\n  /**\n   * stacked layout instead of side-by-side?\n   */\n  \"stackedLayout\": {\n    \"name\": \"stackedLayout\",\n    \"type\": \"Boolean\",\n    \"value\": false\n  },\n  /**\n   * Is the video currently sticky, i.e. it is fixed to the corner when playing but scrolled off screen?\n   */\n  \"sticky\": {\n    \"name\": \"sticky\",\n    \"type\": \"Boolean\",\n    \"value\": false,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * When playing but scrolled off screen, to which corner does it \"stick\":\n   * top-left, top-right, bottom-left, bottom-right, or none?\n   * Default is \"top-right\". \"None\" disables stickiness.\n   */\n  \"stickyCorner\": {\n    \"name\": \"stickyCorner\",\n    \"type\": \"String\",\n    \"value\": \"top-right\",\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Source of optional thumbnail image\n   */\n  \"thumbnailSrc\": {\n    \"name\": \"thumbnailSrc\",\n    \"type\": \"String\",\n    \"value\": null,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Optional array ouf tracks.\n   */\n  \"tracks\": {\n    \"name\": \"tracks\",\n    \"type\": \"Array\",\n    \"value\": []\n  },\n  /**\n   * play/pause button\n   */\n  \"playPause\": {\n    \"name\": \"playPause\",\n    \"type\": \"Object\",\n    \"computed\": \"_getPlayPause(__playing)\"\n  },\n  /**\n   * Notice if the video is playing\n   */\n  \"__playing\": {\n    \"name\": \"__playing\",\n    \"type\": \"Boolean\",\n    \"value\": false,\n    \"notify\": true,\n    \"reflectToAttribute\": true\n  }\n}\n;\n  }\n\n  constructor() {\n    super();\n    import(\"@polymer/paper-slider/paper-slider.js\");\n    import(\"@polymer/iron-icons/iron-icons.js\");\n    import(\"@polymer/iron-icons/av-icons.js\");\n    import(\"@lrnwebcomponents/a11y-media-player/lib/a11y-media-play-button.js\");\n    const basePath = pathFromUrl(decodeURIComponent(import.meta.url));\n    const location = `${basePath}lib/screenfull/dist/screenfull.js`;\n    window.ESGlobalBridge.requestAvailability();\n    window.ESGlobalBridge.instance.load(\"screenfullLib\", location);\n    window.addEventListener(\n      \"es-bridge-screenfullLib-loaded\",\n      this._onScreenfullLoaded.bind(this)\n    );\n    this.__playerAttached = true;\n    window.A11yMediaStateManager.requestAvailability();\n  }\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-player\";\n  }\n\n  //get player-specific behaviors\n  static get behaviors() {\n    return [A11yMediaBehaviors];\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this._addResponsiveUtility();\n    window.dispatchEvent(new CustomEvent(\"a11y-player\", { detail: this }));\n    if (this.isYoutube) {\n      this._youTubeRequest();\n    }\n  }\n\n  /**\n   * sets initial values and loads video or youtube iframe\n   */\n  ready() {\n    super.ready();\n    let root = this,\n      aspect = 16 / 9,\n      tracks = new Array(),\n      tdata = new Array(),\n      selected = 0;\n    if (typeof screenfull === \"object\") root._onScreenfullLoaded.bind(root);\n    if (root.id === null) root.id = \"a11y-media-player\" + Date.now();\n    root.__playerReady = true;\n    root.target = root.shadowRoot.querySelector(\"#transcript\");\n    root.__status = root._getLocal(\"loading\", \"label\");\n    root.__slider = root.$.slider;\n    root.__slider.min = 0;\n    root.__volume = root.muted ? 0 : Math.max(this.volume, 10);\n    root.__resumePlaying = false;\n    root.__duration = 0;\n    root.$.controls.setStatus(root.__status);\n    root.width = root.width !== null ? root.width : \"100%\";\n    root.style.maxWidth = root.width !== null ? root.width : \"100%\";\n    root._setPlayerHeight(aspect);\n    if (root.isYoutube) {\n      root._youTubeRequest();\n      document.addEventListener(\"timeupdate\", e => {\n        if (e.detail === root.media) root._handleTimeUpdate(e);\n      });\n    } else {\n      root.media = root.$.html5;\n      root.media.media.addEventListener(\"timeupdate\", e => {\n        root._handleTimeUpdate(e);\n      });\n      root._addSourcesAndTracks();\n    }\n    root.$.transcript.setMedia(root.$.innerplayer);\n  }\n\n  /**\n   * plays the media\n   */\n  play() {\n    let root = this,\n      stopped = !(root.__playing === true);\n    root.__playing = true;\n    root.media.play();\n    window.dispatchEvent(\n      new CustomEvent(\"a11y-player-playing\", { detail: root })\n    );\n  }\n\n  /**\n   * pauses the media\n   */\n  pause() {\n    let root = this;\n    root.__playing = false;\n    root.media.pause();\n  }\n\n  /**\n   * stops the media\n   */\n  stop() {\n    this.pause();\n    this.seek(0);\n  }\n\n  /**\n   * restarts the media\n   */\n  restart() {\n    this.seek(0);\n    this.play();\n  }\n\n  /**\n   * seeks media backward at a set increment\n   *\n   * @param {float} the elepsed time, in seconds\n   */\n  rewind(amt) {\n    amt = amt !== undefined ? amt : this.media.duration / 20;\n    this.__resumePlaying = this.__playing;\n    this.seek(this.media.getCurrentTime() - amt, 0);\n    if (this.__resumePlaying) this.play();\n    this.__resumePlaying = false;\n  }\n\n  /**\n   * seeks media forward at a set increment\n   *\n   * @param {float} the elepsed time, in seconds\n   */\n  forward(amt) {\n    amt = amt !== undefined ? amt : this.media.duration / 20;\n    this.__resumePlaying = this.__playing;\n    this.seek(this.media.getCurrentTime() + amt);\n    if (this.__resumePlaying) this.play();\n    this.__resumePlaying = false;\n  }\n\n  /**\n   * seeks to a specific time\n   *\n   * @param {float} the time, in seconds, to seek\n   */\n  seek(time) {\n    let seekable =\n      this.media !== undefined && this.media !== null\n        ? this.media.seekable\n        : [];\n    if (\n      seekable.length > 0 &&\n      time >= seekable.start(0) &&\n      time <= seekable.end(0)\n    ) {\n      this.media.seek(time);\n    }\n  }\n\n  /**\n   * selects a specific track by index\n   *\n   * @param {integer} the index of the track\n   */\n  selectTrack(index) {\n    this.__selectedTrack = index;\n    this.$.html5.selectTrack(index);\n  }\n\n  /**\n   * set volume of media\n   *\n   * @param {integer} the volume level from 0-100\n   */\n  setVolume(value) {\n    this.volume = value !== null ? value : 70;\n    this.media.setVolume(this.volume);\n    this.muted = this.volume === 0;\n  }\n\n  /**\n   * set speed/playback rate of media\n   *\n   * @param {float} the playback rate, where 1 = 100%\n   */\n  setPlaybackRate(value) {\n    value = value !== null ? value : 1;\n    this.media.setPlaybackRate(value);\n  }\n\n  /**\n   * toggles captions\n   *\n   * @param {boolean} Toggle CC on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleCC(mode) {\n    this.cc = mode === undefined ? !this.cc : mode;\n    this.$.html5.setCC(this.cc);\n  }\n\n  /**\n   * toggles looping\n   *\n   * @param {boolean} Toggle looping on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleLoop(mode) {\n    if (this.isYoutube) {\n    } else {\n      this.loop = mode === undefined ? !this.loop : mode;\n      this.media.setLoop(this.loop);\n    }\n  }\n\n  /**\n   * toggles mute\n   *\n   * @param {boolean} Toggle mute on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleMute(mode) {\n    this.muted = mode === undefined ? !this.muted : mode;\n    this.__volume = this.muted ? 0 : Math.max(this.volume, 10);\n    this.media.setMute(this.muted);\n  }\n\n  /**\n   * toggles sticky attribute\n   *\n   * @param {boolean} Toggle sticky mode on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleSticky(mode) {\n    mode = mode === undefined ? !this.sticky : mode;\n    this.sticky = mode;\n    this.dispatchEvent(new CustomEvent(\"player-sticky\", { detail: this }));\n  }\n\n  /**\n   * toggles transcript\n   *\n   * @param {boolean} Toggle transcript on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleTranscript(mode) {\n    mode = mode === undefined ? this.hideTranscript : mode;\n    this.hideTranscript = !mode;\n    if (this.$.transcript !== undefined && this.$.transcript !== null) {\n      this.dispatchEvent(\n        new CustomEvent(\"transcript-toggle\", { detail: this })\n      );\n    }\n  }\n\n  /**\n   * dynamically adds source and track data\n   * from the sources and tracks properties\n   * (needed for media-player)\n   */\n  _appendToPlayer(data, type) {\n    if (data !== undefined && data !== null && data !== []) {\n      let root = this,\n        arr = Array.isArray(data) ? data : JSON.parse(data);\n      for (let i = 0; i < arr.length; i++) {\n        let el = document.createElement(type);\n        for (let key in arr[i]) {\n          el.setAttribute(key, arr[i][key]);\n        }\n        root.$.html5.media.appendChild(el);\n      }\n    }\n  }\n\n  /**\n   * sets the height of the player\n   * @param {Number} the aspect ratio of the media or its poster thumbnail\n   */\n  _setPlayerHeight(aspect) {\n    let root = this;\n    if (root.audioOnly && root.thumbnailSrc === null && root.height === null) {\n      root.$.player.style.height = \"60px\";\n    } else if (root.height === null) {\n      root.$.player.style.paddingTop = 100 / aspect + \"%\";\n      root.$.innerplayer.style.maxWidth =\n        \"calc(\" + aspect * 100 + \"vh - \" + aspect * 80 + \"px)\";\n    } else {\n      root.$.outerplayer.style.height = root.height;\n    }\n  }\n\n  /**\n   * gets media caption\n   *\n   * @param {boolean} Is the player set to audio-only?\n   * @param {string} the text that indicates this player is audio-only\n   * @param {string} the title of the media\n   * @returns {string} the media caption\n   */\n  _getMediaCaption(audioOnly, localization, mediaTitle) {\n    let audioLabel = this._getLocal(\"audio\", \"label\"),\n      hasMediaTitle =\n        mediaTitle !== undefined && mediaTitle !== null && mediaTitle !== \"\";\n    if (audioOnly && hasMediaTitle) {\n      return mediaTitle + \" (\" + audioLabel + \")\";\n    } else if (audioOnly) {\n      return audioLabel;\n    } else if (hasMediaTitle) {\n      return mediaTitle;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * set play/pause button\n   *\n   * @param {boolean} Is the media muted?\n   * @param {string} label if button mutes media\n   * @param {string} icon if button mutes media\n   * @param {string} label if button unmutes media\n   * @param {string} icon if button unmutes media\n   * @returns {object} an object containing the current state of the play/pause button, eg., `{\"label\": \"mute\", \"icon\": \"av:volume-off\"}`\n   */\n  _getMuteUnmute(muted) {\n    return muted\n      ? {\n          label: this._getLocal(\"unmute\", \"label\"),\n          icon: this._getLocal(\"unmute\", \"icon\"),\n          action: \"unmute\"\n        }\n      : {\n          label: this._getLocal(\"mute\", \"label\"),\n          icon: this._getLocal(\"mute\", \"icon\"),\n          action: \"mute\"\n        };\n  }\n\n  /**\n   * gets print caption\n   *\n   * @param {boolean} Is the player set to audio-only?\n   * @param {string} the text that indicates this player is audio-only\n   * @param {string} the text that indicates this player is for video\n   * @param {string} the title of the media\n   * @returns {string} the media caption when the page is printed\n   */\n  _getPrintCaption(audioOnly, localization, mediaTitle) {\n    let audioLabel = this._getLocal(\"audio\", \"label\"),\n      videoLabel = this._getLocal(\"video\", \"label\"),\n      hasMediaTitle =\n        mediaTitle !== undefined && mediaTitle !== null && mediaTitle !== \"\";\n    if (audioOnly && hasMediaTitle) {\n      return mediaTitle + \" (\" + audioLabel + \")\";\n    } else if (audioOnly) {\n      return audioLabel;\n    } else if (hasMediaTitle) {\n      return mediaTitle + \" (\" + videoLabel + \")\";\n    } else {\n      return videoLabel;\n    }\n  }\n\n  /**\n   * get thumbanail css based on whether or not the video is playing\n   *\n   * @param {string} the url for the thumbnail image\n   * @returns {string} the string for the style attribute\n   */\n  _getThumbnailCSS(thumbnailSrc, isYoutube, audioOnly) {\n    return thumbnailSrc != null && (isYoutube || audioOnly)\n      ? \"background-image: url(\" + thumbnailSrc + \"); background-size: cover;\"\n      : null;\n  }\n\n  /**\n   * loads a track's cue metadata\n   */\n  _addSourcesAndTracks() {\n    let root = this,\n      counter = 0;\n    root.querySelectorAll(\"source,track\").forEach(node => {\n      root.$.html5.media.appendChild(node);\n    });\n    root._appendToPlayer(root.tracks, \"track\");\n    root._appendToPlayer(root.sources, \"source\");\n    root.$.html5.media.textTracks.onaddtrack = e => {\n      root.hasCaptions = true;\n      root.hasTranscript = !root.standAlone;\n      root._getTrackData(e.track, counter++);\n    };\n  }\n\n  /**\n   * returns true if an attribute is set to a value\n   *\n   * @param {boolean} Is the media audio only?\n   * @param {string} optional: the source URL of the thumbnail image\n   * @returns {boolean} Should height of video/thumbnail area be set to 0?\n   */\n  _getAudioNoThumb(audioOnly, thumbnailSrc) {\n    return audioOnly && (thumbnailSrc === null || thumbnailSrc === undefined);\n  }\n\n  /**\n   * returns whether or not the fullscreen mode should be disabled\n   *\n   * @param {boolean} Is fullscreen mode set to disabled?\n   * @returns {boolean} Should fullscreen disabled?\n   */\n  _getFullscreenButton(disableFullscreen, audioNoThumb, screenfullLoaded) {\n    if (\n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent\n      ) ||\n      disableFullscreen ||\n      audioNoThumb ||\n      !screenfullLoaded\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * set play/pause button\n   *\n   * @param {boolean} Is the media playing?\n   * @param {string} label if button pauses media\n   * @param {string} icon if button pauses media\n   * @param {string} label if button plays media\n   * @param {string} icon if button plays media\n   * @returns {object} an object containing the current state of the play/pause button, eg., `{\"label\": \"Pause\", \"icon\": \"av:pause\"}`\n   */\n  _getPlayPause(__playing) {\n    return __playing !== false\n      ? {\n          label: this._getLocal(\"pause\", \"label\"),\n          icon: this._getLocal(\"pause\", \"icon\"),\n          action: \"pause\"\n        }\n      : {\n          label: this._getLocal(\"play\", \"label\"),\n          icon: this._getLocal(\"play\", \"icon\"),\n          action: \"play\"\n        };\n  }\n\n  /**\n   * loads a track's cue metadata\n   */\n  _getTrackData(track, id) {\n    let root = this,\n      selected = track.default === true || root.__selectedTrack === undefined,\n      loadCueData;\n    if (selected) root.selectTrack(id);\n    track.mode = selected && this.cc === true ? \"showing\" : \"hidden\";\n    loadCueData = setInterval(() => {\n      if (\n        track.cues !== undefined &&\n        track.cues !== null &&\n        track.cues.length > 0\n      ) {\n        clearInterval(loadCueData);\n        let cues = Object.keys(track.cues).map(key => {\n          return {\n            order: track.cues[key].id !== \"\" ? track.cues[key].id : key,\n            seek: track.cues[key].startTime,\n            seekEnd: track.cues[key].endTime,\n            start: root._getHHMMSS(\n              track.cues[key].startTime,\n              root.media.duration\n            ),\n            end: root._getHHMMSS(track.cues[key].endTime, root.media.duration),\n            text: track.cues[key].text\n          };\n        });\n\n        if (root.__tracks === undefined) root.__tracks = [];\n        root.push(\"__tracks\", {\n          value: id,\n          language: track.language,\n          text:\n            track.label !== undefined\n              ? track.label\n              : track.language !== undefined\n              ? track.language\n              : \"Track \" + id,\n          cues: cues\n        });\n        root.$.controls.setTracks(root.__tracks);\n        root.$.transcript.setTracks(root.__tracks);\n        root.push(\"__tracks\");\n        track.oncuechange = e => {\n          root.$.transcript.setActiveCues(\n            Object.keys(e.currentTarget.activeCues).map(key => {\n              return e.currentTarget.activeCues[key].id;\n            })\n          );\n        };\n      }\n    }, 1);\n  }\n\n  /**\n   * handles the seek function when a transcript cue is activated\n   */\n  _handleTranscriptSeek(e) {\n    let root = this;\n    if (\n      !root.standAlone &&\n      root.$.transcript !== undefined &&\n      root.$.transcript !== null\n    ) {\n      root.__resumePlaying = root.__playing;\n      root.seek(e.detail);\n    }\n  }\n\n  /**\n   * handles media metadata when media is loaded\n   */\n  _handleMediaLoaded(e) {\n    let root = this,\n      aspect = root.media.aspectRatio;\n    root._setPlayerHeight(aspect);\n    root.$.playbutton.removeAttribute(\"disabled\");\n\n    // gets and converts video duration\n    root._setElapsedTime();\n    root._getTrackData(root.$.html5.media);\n  }\n\n  /**\n   * determines if there\n   *\n   * @param {string} the url for the thumbnail image\n   * @returns {string} the string for the style attribute\n   */\n  _hidePlayButton(thumbnailSrc, isYoutube, __elapsed) {\n    return (\n      (isYoutube && thumbnailSrc === null) ||\n      !(__elapsed === undefined || __elapsed === 0)\n    );\n  }\n\n  /**\n   * handles transcript printing\n   */\n  _handlePrinting(e) {\n    let root = this;\n    root.dispatchEvent(\n      new CustomEvent(\"printing-transcript\", { detail: root })\n    );\n    root.$.transcript.print(root.mediaTitle);\n  }\n\n  /**\n   * sets search the simple-search element\n   */\n  _handleSearchAdded(e) {\n    this.search = e.detail;\n  }\n\n  /**\n   * handles duration slider dragging with a mouse\n   */\n  _handleSliderStart(e) {\n    this.__resumePlaying = !this.paused;\n    this.pause();\n    this.__seeking = true;\n  }\n\n  /**\n   * handles duration slider dragging with a mouse\n   */\n  _handleSliderStop(e) {\n    this.seek(this.$.slider.immediateValue);\n    this.__seeking = false;\n    if (this.__resumePlaying) {\n      this.play();\n      this.__resumePlaying = null;\n    }\n  }\n\n  /**\n   * handles time updates\n   */\n  _handleTimeUpdate(e) {\n    let root = this;\n    //if play exceeds clip length, stop\n    if (root.isYoutube && root.media.duration !== root.media.getDuration()) {\n      root.__duration = root.media.duration = root.media.getDuration();\n      root.disableSeek = false;\n      root._addSourcesAndTracks();\n      if (\n        root.media.seekable &&\n        root.media.seekable.length > 0 &&\n        root.media.seekable.start(0) !== 0\n      ) {\n        root.$.slider.min = root.media.seekable.start(0);\n      }\n    }\n    if (\n      root.media.seekable !== undefined &&\n      root.media.seekable.length > 0 &&\n      root.media.seekable.end(0) <= root.media.getCurrentTime()\n    ) {\n      root.stop();\n      root.__playing = false;\n    }\n    //prevent slider and cue updates until finished seeking\n    root._updateCustomTracks();\n    root._setElapsedTime();\n  }\n\n  /**\n   * handles transcript scroll toggle\n   */\n  _handleTranscriptScrollToggle(e) {\n    this.disableScroll = !this.disableScroll;\n  }\n\n  /**\n   * Determines if video and transcript are in a flex layout\n   *\n   * @param {boolean} Is the player in stand-alone mode?\n   * @param {boolean} Is the transcript hidden?\n   * @param {boolean} Does the media no video or thumbnail image?\n   * @param {boolean} Is the layout stacked?\n   * @returns {boolean} Is the video in flex layout mode?\n   */\n  _isFlexLayout(standAlone, hideTranscript, audioNoThumb, stackedLayout) {\n    return !standAlone && !hideTranscript && !audioNoThumb && !stackedLayout;\n  }\n\n  /**\n   * determine which button was clicked and act accordingly\n   */\n  _onControlsChanged(e) {\n    let root = this,\n      action = e.detail.action !== undefined ? e.detail.action : e.detail.id;\n    if (action === \"backward\" || action === \"rewind\") {\n      root.rewind();\n    } else if (action === \"captions\") {\n      root.toggleCC();\n    } else if (action === \"transcript\" || action === \"transcript-toggle\") {\n      root.toggleTranscript();\n    } else if (e.detail.id === \"tracks\") {\n      if (e.detail.value === \"\") {\n        root.toggleCC(false);\n      } else {\n        root.toggleCC(true);\n        root.selectTrack(e.detail.value);\n      }\n    } else if (action === \"forward\") {\n      root.forward();\n    } else if (action === \"fullscreen\" && root.fullscreenButton) {\n      root.toggleTranscript(root.fullscreen);\n      screenfull.toggle(root.$.outerplayer);\n    } else if (action === \"loop\") {\n      root.toggleLoop();\n    } else if (action === \"mute\" || action === \"unmute\") {\n      root.toggleMute();\n    } else if (action === \"pause\") {\n      root.pause();\n    } else if (action === \"play\") {\n      root.play();\n    } else if (action === \"restart\") {\n      root.seek(0);\n      root.play();\n    } else if (action === \"speed\") {\n      root.setPlaybackRate(e.detail.value);\n    } else if (action === \"volume\") {\n      root.setVolume(e.detail.value);\n    }\n  }\n\n  /**\n   * sets the element's screenfullLoaded variable to true once screenfull is loaded\n   * and adds an event listener for screenfull\n   */\n  _onScreenfullLoaded() {\n    let root = this;\n    root.screenfullLoaded = true;\n\n    // handles fullscreen\n    if (screenfull) {\n      screenfull.on(\"change\", () => {\n        if (screenfull.enabled) root.fullscreen = screenfull.isFullscreen;\n      });\n    }\n  }\n\n  /**\n   * sets duration, taking into consideration start and stop times\n   *\n   * @param {integer} seek time in seconds, optional\n   * @returns {string} status\n   */\n  _setElapsedTime() {\n    let elapsed =\n        this.__seeking === true\n          ? this.$.slider.immediateValue\n          : this.media.getCurrentTime() > 0\n          ? this.media.getCurrentTime()\n          : 0,\n      duration = this.media.duration > 0 ? this.media.duration : 0;\n    this.__elapsed = elapsed;\n    this.__duration = duration;\n    if (this.media.seekable !== undefined && this.media.seekable.length > 0) {\n      if (this.media.seekable.start(0) !== undefined)\n        elapsed -= this.media.seekable.start(0);\n      if (this.media.seekable.end(0) !== undefined)\n        duration =\n          this.media.seekable.end(0) -\n          (this.media.seekable.start(0) !== undefined\n            ? this.media.seekable.start(0)\n            : 0);\n    }\n    this.__status =\n      this._getHHMMSS(elapsed, duration) + \"/\" + this._getHHMMSS(duration);\n    this.$.controls.setStatus(this.__status);\n  }\n\n  /**\n   * Show custom CC (for audio and YouTube)?\n   *\n   * @param {boolean} Is the media from YouTube?\n   * @param {boolean} Is the media audio only?\n   * @param {boolean} Does the media have CC tracks?\n   * @param {boolean} Are the CC turned on?\n   * @returns {boolean} Should the player show custom CC?\n   */\n  _showCustomCaptions(isYoutube, audioOnly, hasCaptions, cc) {\n    return (isYoutube || audioOnly) && hasCaptions && cc;\n  }\n\n  /**\n   * determines if there\n   *\n   * @param {string} the url for the thumbnail image\n   * @returns {string} the string for the style attribute\n   */\n  _useYoutubeIframe(thumbnailSrc, isYoutube, __elapsed) {\n    return (\n      isYoutube &&\n      (thumbnailSrc === null || __elapsed === undefined || __elapsed === 0)\n    );\n  }\n\n  /**\n   * gets YouTube iframe\n   */\n  _youTubeRequest() {\n    window.A11yMediaYoutube.requestAvailability();\n    let root = this,\n      ytUtil = window.A11yMediaYoutube.instance;\n    root.disableSeek = true;\n    if (root.__playerAttached && root.__playerReady) {\n      let ytInit = () => {\n          // once metadata is ready on video set it on the media player\n          // initialize the YouTube player\n          root.media = ytUtil.initYoutubePlayer({\n            width: \"100%\",\n            height: \"100%\",\n            videoId: root.youtubeId\n          });\n          root.__status = root._getLocal(\"youTubeLoading\", \"label\");\n          root.$.controls.setStatus(root.__status);\n          // move the YouTube iframe to the media player's YouTube container\n          root.$.youtube.appendChild(root.media.a);\n          root.__ytAppended = true;\n          root._updateCustomTracks();\n        },\n        checkApi = e => {\n          if (ytUtil.apiReady) {\n            document.removeEventListener(\"youtube-api-ready\", checkApi);\n            if (!root.__ytAppended) {\n              ytInit();\n            }\n          }\n        };\n      if (ytUtil.apiReady) {\n        if (!root.__ytAppended) {\n          ytInit();\n        }\n      } else {\n        document.addEventListener(\"youtube-api-ready\", checkApi);\n      }\n    }\n  }\n\n  /**\n   * updates custom tracks for youTube\n   */\n  _updateCustomTracks() {\n    if ((this.isYoutube || this.audioOnly) && this.__tracks) {\n      let root = this,\n        track = root.__tracks[this.$.transcript.selectedTranscript],\n        active = [],\n        caption = \"\";\n      if (\n        track !== undefined &&\n        track !== null &&\n        track.cues !== undefined &&\n        track.cues !== null\n      ) {\n        for (let i = 0; i < track.cues.length; i++) {\n          if (\n            track.cues[i].seek < root.__elapsed &&\n            track.cues[i].seekEnd > root.__elapsed\n          ) {\n            active.push(track.cues[i].order);\n            caption = caption === \"\" ? track.cues[i].text : caption;\n          }\n        }\n        root.$.customcctxt.innerText = caption;\n        root.$.transcript.setActiveCues(active);\n      }\n    }\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    window.removeEventListener(\n      \"es-bridge-screenfullLib-loaded\",\n      this._onScreenfullLoaded.bind(this)\n    );\n    super.disconnectedCallback();\n  }\n}\nwindow.customElements.define(A11yMediaPlayer.tag, A11yMediaPlayer);\nexport { A11yMediaPlayer };\n"],"names":["A11yMediaBehaviors","SimpleColors","attr","val","options","window","ResponsiveUtility","requestAvailability","dispatchEvent","CustomEvent","detail","undefined","element","this","attribute","relativeToParent","max","a","b","i","none","Math","floor","round","key","subkey","local","localization","localizationDefaults","e","$","transcript","download","mediaTitle","print","audioOnly","name","type","Boolean","value","reflectToAttribute","autoplay","cc","disablePrintButton","disableSearch","disableScroll","disableSeek","hasTranscript","height","String","isYoutube","computed","lang","Object","audio","label","autoScroll","icon","captions","off","forward","fullscreen","loading","loop","mute","nextResult","pause","play","prevResult","restart","rewind","search","seekSlider","settings","speed","skip","unmute","video","volume","youTubeLoading","youTubeTranscript","readOnly","manifest","media","muted","playbackRate","Number","playing","playPause","preload","standAlone","status","selectedTrack","selectedTrackID","target","tracks","Array","width","youtubeId","youTube","customElements","define","tag","A11yMediaStateManager","instance","document","createElement","body","appendChild","root","__playerLoader","players","push","addEventListener","PolymerElement","screenfullLoaded","stickyPlayer","__stickyManager","setStickyPlayer","__scrollChecker","_checkScroll","player","length","playeri","allowConcurrent","parent","_getParentNode","__playerTop","offsetTop","__playerUpperMiddle","offsetHeight","__playerLowerMiddle","toggleSticky","__parent","style","checkConcurrentPlayers","wintop","pageYOffset","winbottom","innerHeight","__playing","node","parentNode","nodeType","Node","DOCUMENT_FRAGMENT_NODE","host","removeEventListener","A11yMediaButton","__target","button","action","controls","toggle","disabled","html","A11yMediaControls","_addResponsiveUtility","sm","md","lg","xl","onfocus","classList","add","onblur","remove","statbar","innerText","set","slice","responsiveSize","_testAttribute","__selectedTrack","control","close","noTranscriptToggle","compactControls","fixedHeight","fullscreenButton","nofity","hasCaptions","notify","hideTranscript","hideTranscriptButton","muteUnmute","noPrinting","A11yMediaHtml5","duration","seekable","setVolume","setMute","setCC","setLoop","setPlaybackRate","aspectRatio","videoWidth","videoHeight","buffered","end","getCurrentTime","currentTime","paused","index","textTracks","parseInt","mode","seek","time","selectedTrackId","crossorigin","mediaLang","start","stop","thumbnailSrc","A11yMediaTranscriptCue","setAttribute","mediaId","content","enableSearch","_handleTap","cue","activeCues","includes","order","toString","active","text","A11yMediaTranscript","title","_getLocal","filename","replace","track","shadowRoot","querySelector","data","encodeURIComponent","display","click","removeChild","cloneNode","css","h1","innerHTML","open","focus","cues","offset","getAttribute","scrollingTo","to","perTick","scrollTop","setTimeout","notifyPath","render","inner","getElementById","hidden","disableInteractive","selectedTranscript","hideTimestamps","tabIndex","role","A11yMediaTranscriptControls","simplesearch","A11yMediaYoutube","api","onYouTubeIframeAPIReady","event","apiReady","temp","div","vdata","videoId","split","vid","counter","iframe","YT","Player","events","onReady","param","hh","match","mm","ss","h","m","s","startSeconds","endSeconds","cueVideoById","playerVars","color","disablekb","enablejsapi","iv_load_policy","modestbranding","showinfo","rel","min","playVideo","getPlayerState","clearInterval","timeupdate","setInterval","pauseVideo","seekTo","seekupdate","abs","unMute","A11yMediaPlayer","basePath","pathFromUrl","decodeURIComponent","location","ESGlobalBridge","load","_this","_onScreenfullLoaded","bind","__playerAttached","_youTubeRequest","screenfull","id","Date","now","__playerReady","__status","__slider","slider","__volume","__resumePlaying","__duration","setStatus","maxWidth","_setPlayerHeight","_handleTimeUpdate","html5","_addSourcesAndTracks","setMedia","innerplayer","amt","selectTrack","sticky","arr","isArray","JSON","parse","el","aspect","paddingTop","outerplayer","audioLabel","hasMediaTitle","videoLabel","querySelectorAll","forEach","_appendToPlayer","sources","onaddtrack","_getTrackData","disableFullscreen","audioNoThumb","test","navigator","userAgent","loadCueData","selected","keys","map","startTime","seekEnd","endTime","_getHHMMSS","__tracks","language","setTracks","oncuechange","setActiveCues","currentTarget","playbutton","removeAttribute","_setElapsedTime","__elapsed","__seeking","immediateValue","getDuration","_updateCustomTracks","stackedLayout","toggleCC","toggleTranscript","toggleLoop","toggleMute","on","enabled","isFullscreen","elapsed","ytUtil","ytInit","initYoutubePlayer","youtube","__ytAppended","checkApi","caption","customcctxt"],"mappings":"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"}