{"version":3,"file":"item-overlay-ops.umd.js","sources":["item-overlay-ops.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\n/**\n * `item-overlay-ops`\n * `Overlayed editing ops on whatever the current item slotted in is`\n *\n * @demo demo/index.html\n *\n * @microcopy - the mental model for this element\n */\nclass ItemOverlayOps extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          outline: none;\n        }\n        #container {\n          display: none;\n          opacity: 0;\n          background-color: transparent;\n          transition: background-color 0.6s linear, visibility 0.6s linear,\n            opacity 0.6s linear;\n          visibility: hidden;\n        }\n        :host([edit-mode]) #container {\n          display: block;\n          opacity: 0.4;\n          visibility: visible;\n          background-color: var(--item-overlay-ops, #999999);\n          position: absolute;\n          z-index: 1;\n          @apply --item-overlay-ops-container;\n        }\n        :host([edit-mode]) #container:hover,\n        :host([edit-mode]) #container:focus,\n        :host([focused]) #container {\n          opacity: 0.8;\n          background-color: var(--item-overlay-ops, #ffffff);\n        }\n        .ops {\n          width: 100%;\n          height: 39px;\n          padding: 0;\n          margin: 0;\n          border-bottom: 1px solid rgba(100, 100, 100, 0.4);\n          text-align: center;\n        }\n        .ops paper-icon-button {\n          display: inline-flex;\n          width: 26px;\n          height: 26px;\n          padding: 1px;\n          margin: 6px;\n          color: #999999;\n        }\n        .ops paper-icon-button#cancel {\n          width: 16px;\n          height: 16px;\n          padding: 0px;\n          margin: 4px;\n          position: absolute;\n        }\n        .ops paper-icon-button.active {\n          color: #000000;\n          background-color: rgba(255, 255, 255, 0.6);\n          border-radius: 50%;\n        }\n        .active-op {\n          text-transform: capitalize;\n          margin: 0;\n          height: 40px;\n          line-height: 40px;\n          font-size: 20px;\n          text-align: center;\n        }\n        #workingarea {\n          width: 100%;\n          padding: 0;\n          margin: 0 auto;\n          align-content: center;\n        }\n        #workingarea paper-icon-button {\n          width: 50%;\n          height: 100%;\n          display: inline-flex;\n          min-width: unset;\n          padding: 16px;\n          margin: 0;\n          border: none;\n          border-radius: 0;\n        }\n        #workingarea #option1 {\n          background-color: rgba(100, 255, 100, 0.6);\n        }\n        #workingarea #option2 {\n          background-color: rgba(255, 100, 100, 0.6);\n        }\n        #workingarea #option1:hover,\n        #workingarea #option1:focus {\n          background-color: rgba(100, 255, 100, 1);\n        }\n        #workingarea #option2:hover,\n        #workingarea #option2:focus {\n          background-color: rgba(255, 100, 100, 1);\n        }\n        #workingarea {\n          display: none;\n        }\n        #workingarea.move {\n          display: flex;\n        }\n        #workingarea.move #option1,\n        #workingarea.move #option2 {\n          background-color: rgba(200, 200, 200, 0.5);\n        }\n        #workingarea.move #option1:hover,\n        #workingarea.move #option1:focus,\n        #workingarea.move #option2:hover,\n        #workingarea.move #option2:focus {\n          background-color: rgba(200, 200, 200, 1);\n        }\n        #workingarea.remove {\n          display: flex;\n        }\n        #workingarea.duplicate {\n          display: flex;\n        }\n      </style>\n      <div id=\"container\">\n        <div class=\"ops\">\n          <paper-icon-button\n            on-click=\"_opTap\"\n            icon=\"icons:add\"\n            id=\"add\"\n            hidden\\$=\"[[!add]]\"\n            title=\"Add to this\"\n          ></paper-icon-button>\n          <paper-icon-button\n            on-click=\"_opTap\"\n            icon=\"icons:create\"\n            id=\"edit\"\n            hidden\\$=\"[[!edit]]\"\n            title=\"Edit this\"\n          ></paper-icon-button>\n          <paper-icon-button\n            on-click=\"_opTap\"\n            icon=\"icons:swap-horiz\"\n            id=\"move\"\n            hidden\\$=\"[[!move]]\"\n            title=\"Move this\"\n          ></paper-icon-button>\n          <paper-icon-button\n            on-click=\"_opTap\"\n            icon=\"icons:delete\"\n            id=\"remove\"\n            hidden\\$=\"[[!remove]]\"\n            title=\"Delete this\"\n          ></paper-icon-button>\n          <paper-icon-button\n            on-click=\"_opTap\"\n            icon=\"icons:content-copy\"\n            id=\"duplicate\"\n            hidden\\$=\"[[!duplicate]]\"\n            title=\"Duplicate this\"\n          ></paper-icon-button>\n          <paper-icon-button\n            on-click=\"_opTap\"\n            icon=\"icons:cancel\"\n            id=\"cancel\"\n            hidden\\$=\"[[!__anyOp]]\"\n            title=\"Cancel\"\n          ></paper-icon-button>\n        </div>\n        <div class=\"active-op\">[[activeTitle]]</div>\n        <div id=\"workingarea\" class\\$=\"[[activeOp]]\">\n          <paper-icon-button\n            on-click=\"_optionSelected\"\n            id=\"option1\"\n            title=\"[[__option1Text]]\"\n            icon=\"[[__option1Icon]]\"\n          ></paper-icon-button>\n          <paper-icon-button\n            on-click=\"_optionSelected\"\n            id=\"option2\"\n            title=\"[[__option2Text]]\"\n            icon=\"[[__option2Icon]]\"\n          ></paper-icon-button>\n        </div>\n      </div>\n      <slot></slot>\n    `;\n  }\n\n  static get tag() {\n    return \"item-overlay-ops\";\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Edit mode whether it is shown or not\n       */\n      editMode: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      },\n      /**\n       * Edit mode whether it is shown or not\n       */\n      focused: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      },\n      /**\n       * Title to present of active option\n       */\n      activeTitle: {\n        type: String\n      },\n      /**\n       * Active operation\n       */\n      activeOp: {\n        type: String\n      },\n      /**\n       * Add opertaions\n       */\n      add: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Edit opertaions\n       */\n      edit: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Move opertaions\n       */\n      move: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Allow height to be defined rather than calculated\n       */\n      fixedHeight: {\n        type: Number,\n        observer: \"fixedHeightChanged\"\n      },\n      /**\n       * Ability to disable height setting. Useful if using CSS vars.\n       */\n      disableAutoHeight: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Remove opertaions\n       */\n      remove: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Duplicate opertaions\n       */\n      duplicate: {\n        type: Boolean,\n        value: false\n      },\n      __anyOp: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  /**\n   * attached life cycle\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    // delay is enough to get the height correct\n    setTimeout(() => {\n      this._windowResize();\n    }, 5);\n    this.setAttribute(\"tabindex\", \"0\");\n    window.addEventListener(\"resize\", this._windowResize.bind(this));\n    afterNextRender(this, function() {\n      this.addEventListener(\"focusin\", this._inFocus.bind(this));\n      this.addEventListener(\"focusout\", this._outFocus.bind(this));\n    });\n  }\n\n  /**\n   * detached life cycle\n   */\n  disconnectedCallback() {\n    this.removeEventListener(\"focusin\", this._inFocus.bind(this));\n    this.removeEventListener(\"focusout\", this._outFocus.bind(this));\n    window.removeEventListener(\"resize\", this._windowResize.bind(this));\n    super.disconnectedCallback();\n  }\n  /**\n   * Fixed height changed, update.\n   */\n  fixedHeightChanged(newValue, oldValue) {\n    if (newValue) {\n      if (!this.disableAutoHeight) {\n        this.$.container.style.height = this.fixedHeight + \"px\";\n        this.$.workingarea.style.height = this.fixedHeight - 80 + \"px\";\n      }\n    }\n  }\n  /**\n   * react to window resizing\n   */\n  _windowResize(e) {\n    let rect = this.getBoundingClientRect();\n    this.$.container.style.width = rect.width + \"px\";\n    if (!this.disableAutoHeight) {\n      if (!this.fixedHeight || typeof this.fixedHeight === typeof undefined) {\n        this.$.container.style.height = rect.height + \"px\";\n        this.$.workingarea.style.height = rect.height - 80 + \"px\";\n      } else {\n        this.$.container.style.height = this.fixedHeight + \"px\";\n        this.$.workingarea.style.height = this.fixedHeight - 80 + \"px\";\n      }\n    } else {\n      this.$.workingarea.style.height = rect.height - 80 + \"px\";\n    }\n  }\n\n  /**\n   * Support tapping the buttons in the top\n   */\n  _opTap(e) {\n    let normalizedEvent = dom(e);\n    let local = normalizedEvent.localTarget;\n    this.activeTitle = local.getAttribute(\"id\");\n    this.activeOp = local.getAttribute(\"id\");\n    this._resetActive();\n    this.__anyOp = true;\n    local.classList.add(\"active\");\n    // we switch icons for these\n    switch (this.activeOp) {\n      case \"cancel\":\n        local.classList.remove(\"active\");\n        this.activeTitle = null;\n        this.activeOp = null;\n        this.__anyOp = false;\n        break;\n      case \"remove\":\n        this.__option1Icon = \"icons:check\";\n        this.__option1Text = \"Confirm deleting this\";\n        this.__option2Icon = \"icons:clear\";\n        this.__option2Text = \"Cancel\";\n        break;\n      case \"duplicate\":\n        this.__option1Icon = \"icons:check\";\n        this.__option1Text = \"Confirm duplicating this\";\n        this.__option2Icon = \"icons:clear\";\n        this.__option2Text = \"Cancel\";\n        break;\n      case \"move\":\n        this.__option1Icon = \"icons:arrow-back\";\n        this.__option1Text = \"Move item left\";\n        this.__option2Icon = \"icons:arrow-forward\";\n        this.__option2Text = \"Move item right\";\n        break;\n    }\n    // let others know there's an event here\n    let op = {\n      element: this,\n      operation: this.activeOp\n    };\n    this.dispatchEvent(\n      new CustomEvent(\"item-overlay-op-changed\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: op\n      })\n    );\n  }\n\n  /**\n   * Set element reflected focus so we can get the whole thing\n   */\n  _inFocus(e) {\n    if (this.editMode) {\n      this.focused = true;\n    }\n  }\n\n  /**\n   * Drop element reflection when all focus offs are fired\n   */\n  _outFocus(e) {\n    if (this.editMode) {\n      this.focused = false;\n    }\n  }\n\n  /**\n   * fire event because an option was selected.\n   */\n  _optionSelected(e) {\n    let normalizedEvent = dom(e);\n    let local = normalizedEvent.localTarget;\n    // fire that an option was selected and about what operation\n    let ops = {\n      element: this,\n      operation: this.activeOp,\n      option: local.getAttribute(\"id\")\n    };\n    this.dispatchEvent(\n      new CustomEvent(\"item-overlay-option-selected\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: ops\n      })\n    );\n    // don't reset for movement, just confirm / reject actions\n    if (this.activeOp != \"move\") {\n      this._resetActive();\n      this.activeOp = null;\n    }\n  }\n\n  /**\n   * Reset the active selections\n   */\n  _resetActive() {\n    this.$.add.classList.remove(\"active\");\n    this.$.edit.classList.remove(\"active\");\n    this.$.move.classList.remove(\"active\");\n    this.$.remove.classList.remove(\"active\");\n    this.$.duplicate.classList.remove(\"active\");\n  }\n}\nwindow.customElements.define(ItemOverlayOps.tag, ItemOverlayOps);\nexport { ItemOverlayOps };\n"],"names":["ItemOverlayOps","PolymerElement","html","editMode","type","Boolean","reflectToAttribute","value","focused","activeTitle","String","activeOp","add","edit","move","fixedHeight","Number","observer","disableAutoHeight","remove","duplicate","__anyOp","setTimeout","_this","_windowResize","setAttribute","window","addEventListener","this","bind","afterNextRender","_inFocus","_outFocus","removeEventListener","newValue","oldValue","$","container","style","height","workingarea","e","rect","getBoundingClientRect","width","_typeof","local","dom","localTarget","getAttribute","_resetActive","classList","__option1Icon","__option1Text","__option2Icon","__option2Text","op","element","operation","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","ops","option","customElements","define","tag"],"mappings":"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"}