{"version":3,"file":"absolute-position-behavior.umd.js","sources":["lib/absolute-position-state-manager.js","absolute-position-behavior.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-resizable-behavior/iron-resizable-behavior.js\";\n\n// register globally so we can make sure there is only one\nwindow.AbsolutePositionStateManager = window.AbsolutePositionStateManager || {};\n// request if this exists. This helps invoke the el existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same modal\nwindow.AbsolutePositionStateManager.requestAvailability = () => {\n  if (!window.AbsolutePositionStateManager.instance) {\n    window.AbsolutePositionStateManager.instance = document.createElement(\n      \"absolute-position-state-manager\"\n    );\n    document.body.appendChild(window.AbsolutePositionStateManager.instance);\n  }\n  return window.AbsolutePositionStateManager.instance;\n};\n/**\n * `absolute-position-state-manager`\n * `A utility that manages the state of multiple a11y-media-players on a single page.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n */\nclass AbsolutePositionStateManager extends PolymerElement {\n  /* REQUIRED FOR TOOLING DO NOT TOUCH */\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"absolute-position-state-manager\";\n  }\n\n  // properties available to the custom el for data binding\n  static get properties() {\n    return {\n      /**\n       * Stores an array of all the players on the page.\n       */\n      els: {\n        type: Array,\n        value: []\n      }\n    };\n  }\n\n  /**\n   * Makes sure there is a utility ready and listening for els.\n   */\n  constructor() {\n    super();\n    let root = this;\n\n    // sets the instance to the current instance\n    if (!window.AbsolutePositionStateManager.instance) {\n      window.AbsolutePositionStateManager.instance = this;\n      return this;\n    }\n  }\n\n  /**\n   * life cycle, el is afixed to the DOM\n   * Makes sure there is a utility ready and listening for els.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * Loads el into array\n   */\n  loadElement(el) {\n    let root = this;\n    root.__on = root.__on !== undefined ? root.__on : false;\n    root.els.push(el);\n    root.positionElement(el);\n    if (!root.__on) root.addEventListeners();\n    root.__on = true;\n  }\n\n  /**\n   * Unloads el from array\n   */\n  unloadElement(el) {\n    let root = this;\n    root.els.filter(el => el === el);\n    root.__on = root.els > 0;\n    if (!root.__on) root.removeEventListeners();\n  }\n\n  /**\n   * Adds event listeners\n   */\n  addEventListeners() {\n    let root = this;\n    root.__timeout = false;\n    root.updateElements();\n    document.addEventListener(\"load\", root.updateElements());\n    window.addEventListener(\"resize\", function() {\n      clearTimeout(root.__timeout);\n      root.__timeout = setTimeout(root.updateElements(), 250);\n    });\n    root.__observer = new MutationObserver(function(mutations) {\n      root.checkMutations(mutations);\n    });\n    root.__observer.observe(document, {\n      attributes: true,\n      childList: true,\n      subtree: true,\n      characterData: true\n    });\n  }\n\n  /**\n   * Checks if there are any chances other than to\n   * the element's position and updates accordioning.\n   * This is needed so that positioning the elements\n   * doesn't trigger an infinite loop of updates.\n   *\n   * @param {array} mutation records\n   * @return {void}\n   */\n  checkMutations(mutations) {\n    let update = false;\n\n    mutations.forEach(mutation => {\n      if (update) return;\n      update =\n        update ||\n        !(\n          mutation.type === \"attributes\" &&\n          mutation.attributeName === \"style\" &&\n          this.els.includes(mutation.target)\n        );\n    });\n    if (update) this.updateElements();\n  }\n\n  /**\n   * Returns the target el that this el is anchored to. It is\n   * either the el given by the `for` attribute, or the immediate parent\n   * of the el.\n   *\n   * @param {object} element using absolute-position behavior\n   * @return {object} target element for positioning\n   */\n  findTarget(el) {\n    let selector = \"#\" + el.for,\n      docQuery =\n        document.querySelectorAll(selector).length === 1\n          ? document.querySelector(selector)\n          : null,\n      target = el.target || docQuery,\n      ancestor = el;\n\n    /**\n     * Use `target` object if specified.\n     * If not, query the document for elements with the id specified in the `for` attribute.\n     * If there is more than one element that matches, find the closest matching element.\n     */\n    while (\n      el.for !== undefined &&\n      target === null &&\n      ancestor !== null &&\n      ancestor !== document\n    ) {\n      ancestor = ancestor.parentNode;\n      if (ancestor.nodeType === 11) ancestor = ancestor.host;\n      target = ancestor ? ancestor.querySelector(selector) : null;\n    }\n    return target;\n  }\n\n  /**\n   * Removes event listeners\n   * @return {void}\n   */\n  removeEventListeners() {\n    let root = this;\n    document.removeEventListener(\"load\", root.updateElements());\n    window.removeEventListener(\"resize\", function() {\n      clearTimeout(root.__timeout);\n      root.__timeout = setTimeout(root.updateElements(), 250);\n    });\n    if (root.__observer) {\n      root.__observer.disconnect();\n    }\n  }\n\n  /**\n   * Updates position for all elements on the page.\n   * @return {void}\n   */\n  updateElements() {\n    let root = this;\n    root.els.forEach(el => {\n      root.positionElement(el);\n    });\n  }\n\n  /**\n   * Gets an updated position based on target.\n   * @param {object} the element using absolute-position behavior\n   * @return {void}\n   */\n  positionElement(el) {\n    let target = this.findTarget(el);\n    if (!target || !el.offsetParent) return;\n    let offset = el.offset,\n      parentRect = el.offsetParent.getBoundingClientRect(),\n      targetRect = target.getBoundingClientRect(),\n      elRect = el.getBoundingClientRect(),\n      centerOffset = (targetRect.width - elRect.width) / 2,\n      middleOffset = (targetRect.height - elRect.height) / 2,\n      elLeft,\n      elTop,\n      styleLeft,\n      styleRight,\n      styleTop,\n      styleBottom;\n    switch (el.position) {\n      case \"top\":\n        elLeft = targetRect.left + centerOffset;\n        elTop = targetRect.top - elRect.height - offset;\n        break;\n      case \"bottom\":\n        elLeft = targetRect.left + centerOffset;\n        elTop = targetRect.top + targetRect.height + offset;\n        break;\n      case \"left\":\n        elLeft = targetRect.left - elRect.width - offset;\n        elTop = targetRect.top + middleOffset;\n        break;\n      case \"right\":\n        elLeft = targetRect.left + targetRect.width + offset;\n        elTop = targetRect.top + middleOffset;\n        break;\n    }\n    el.style.position = \"absolute\";\n    // TODO(noms): This should use IronFitBehavior if possible.\n    styleLeft = elLeft + \"px\";\n    styleTop = elTop + \"px\";\n    if (el.fitToVisibleBounds) {\n      /// if the left side is off-screen\n      if (\n        elLeft - offset < parentRect.left ||\n        elRect.width > parentRect.width\n      ) {\n        styleLeft = parentRect.left + \"px\";\n        /// if the right side is off-screen\n      } else if (elRect.right > parentRect.right) {\n        styleLeft = targetRect.right - elRect.width + \"px\";\n      }\n      //if the top is off screen\n      if (\n        elTop - offset < parentRect.top ||\n        elRect.height > parentRect.height\n      ) {\n        styleTop = parentRect.top + \"px\";\n        // if the bottom is off screen\n      } else if (elRect.bottom > parentRect.bottom) {\n        styleLeft = targetRect.bottom - elRect.height + \"px\";\n      }\n    }\n    el.style.left = styleLeft;\n    el.style.top = styleTop;\n    //provide positions for el and target (in case furthor positioning adjustments are needed)\n    el.__positions = {\n      self: elRect,\n      parent: parentRect,\n      target: targetRect\n    };\n  }\n\n  /**\n   * life cycle, el is removed from the DOM\n   */\n  disconnectedCallback() {\n    this.removeEventListeners();\n    super.disconnectedCallback();\n  }\n}\nwindow.customElements.define(\n  AbsolutePositionStateManager.tag,\n  AbsolutePositionStateManager\n);\nexport { AbsolutePositionStateManager };\n","/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"./lib/absolute-position-state-manager\";\n\n/**\n * `absolute-position-behavior`\n * `Abstracting the positioning behavior from paper-tooltip to be resusable in other elements`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass AbsolutePositionBehavior extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n</style>\n<slot></slot>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  /**\n   * Element is positioned from connected to disconnected?\n   * Otherwise setPosition and unsetPosition must be called manually.\n   */\n  \"auto\": {\n    \"type\": \"Boolean\",\n    \"value\": false\n  },\n  /**\n   * If true, no parts of the tooltip will ever be shown offscreen.\n   */\n  \"fitToVisibleBounds\": {\n    \"type\": \"Boolean\",\n    \"value\": false,\n    \"observer\": \"updatePosition\"\n  },\n  /**\n   * The id of the element that the tooltip is anchored to. This element\n   * must be a sibling of the tooltip. If this property is not set,\n   * then the tooltip will be centered to the parent node containing it.\n   */\n  \"for\": {\n    \"type\": \"String\",\n    \"observer\": \"updatePosition\",\n    \"reflectToAttribute\": true\n  },\n  /**\n   * The spacing between the top of the tooltip and the element it is\n   * anchored to.\n   */\n  \"offset\": {\n    \"type\": \"Number\",\n    \"value\": 0,\n    \"observer\": \"updatePosition\"\n  },\n  /**\n   * Positions the tooltip to the top, right, bottom, left of its content.\n   */\n  \"position\": {\n    \"type\": \"String\",\n    \"value\": \"bottom\",\n    \"observer\": \"updatePosition\",\n    \"reflectToAttribute\": true\n  },\n  /**\n   * The actual target element\n   */\n  \"target\": {\n    \"type\": \"Object\",\n    \"observer\": \"updatePosition\"\n  },\n  /**\n   * The element's style\n   */\n  \"__positions\": {\n    \"type\": \"Object\"\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"absolute-position-behavior\";\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    root.__observe = false;\n    root.__manager = window.AbsolutePositionStateManager.requestAvailability();\n    if (root.auto !== false) root.setPosition();\n  }\n\n  /**\n   * life cycle, element is ready\n   */\n  ready() {\n    super.ready();\n  }\n  /**\n   * Registers the element with AbsolutePositionStateManager\n   */\n  setPosition() {\n    let root = this;\n    root.__observe = true;\n    root.__manager.loadElement(root);\n  }\n\n  /**\n   * Unregisters the element with AbsolutePositionStateManager\n   */\n  unsetPosition() {\n    let root = this;\n    root.__observe = false;\n    root.__manager.unloadElement(root);\n  }\n\n  /**\n   * Updates  the element's position\n   */\n  updatePosition() {\n    let root = this;\n    if (root.__observe === true) {\n      root.__manager.positionElement(root);\n    }\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    this.unsetPosition();\n    super.disconnectedCallback();\n  }\n}\nwindow.customElements.define(\n  AbsolutePositionBehavior.tag,\n  AbsolutePositionBehavior\n);\nexport { AbsolutePositionBehavior };\n"],"names":["window","AbsolutePositionStateManager","requestAvailability","instance","document","createElement","body","appendChild","PolymerElement","els","type","Array","value","el","this","__on","undefined","push","positionElement","addEventListeners","filter","removeEventListeners","root","__timeout","updateElements","addEventListener","clearTimeout","setTimeout","__observer","MutationObserver","mutations","checkMutations","observe","attributes","childList","subtree","characterData","update","forEach","mutation","attributeName","_this2","includes","target","selector","docQuery","querySelectorAll","length","querySelector","ancestor","parentNode","nodeType","host","removeEventListener","disconnect","findTarget","offsetParent","elLeft","elTop","styleLeft","styleTop","offset","parentRect","getBoundingClientRect","targetRect","elRect","centerOffset","width","middleOffset","height","position","left","top","style","fitToVisibleBounds","right","bottom","__positions","self","parent","customElements","define","tag","AbsolutePositionBehavior","__observe","__manager","auto","setPosition","loadElement","unloadElement","unsetPosition","html"],"mappings":"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"}