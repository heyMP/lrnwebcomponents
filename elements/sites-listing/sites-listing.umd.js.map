{"version":3,"file":"sites-listing.umd.js","sources":["sites-listing.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@polymer/iron-ajax/iron-ajax.js\";\nimport \"@polymer/iron-list/iron-list.js\";\nimport \"@lrnwebcomponents/sites-listing/lib/site-card.js\";\nimport \"@polymer/paper-button/paper-button.js\";\n/**\n * `sites-listing`\n * @demo demo/index.html\n */\nclass SitesListing extends PolymerElement {\n  constructor() {\n    super();\n    import(\"@lrnwebcomponents/elmsln-loading/elmsln-loading.js\");\n  }\n  static get template() {\n    return html`\n      <style>\n        :host {\n          height: 100vh;\n          display: flex;\n          flex-direction: column;\n        }\n        iron-list {\n          flex: 1 1 auto;\n        }\n        #loading {\n          width: 100%;\n          z-index: 1000;\n          opacity: 0.8;\n          padding: 16px;\n          text-align: center;\n          align-content: center;\n          justify-content: center;\n          height: 100vh;\n          position: absolute;\n          background-color: rgba(250, 250, 250, 0.8);\n          transition: all linear 0.8s;\n          visibility: visible;\n        }\n        #loading div {\n          font-size: 32px;\n          font-weight: bold;\n          padding: 16px;\n        }\n        #loading[data-loading] {\n          background-color: rgba(0, 0, 0, 0);\n          opacity: 0;\n          visibility: hidden;\n        }\n        site-card {\n          padding: 16px;\n          font-size: 16px;\n        }\n        paper-button.site-card-wrapper {\n          margin: 0;\n          padding: 0;\n        }\n      </style>\n      <iron-ajax\n        id=\"loaddata\"\n        auto=\"\"\n        loading=\"{{__loading}}\"\n        url=\"[[dataSource]]\"\n        handle-as=\"json\"\n        debounce-duration=\"250\"\n        last-response=\"{{sitesResponse}}\"\n      ></iron-ajax>\n      <div id=\"loading\" data-loading\\$=\"[[!__loading]]\">\n        <elmsln-loading size=\"large\"></elmsln-loading>\n        <div>Loading..</div>\n      </div>\n      <iron-list id=\"list\" items=\"[[sites]]\" as=\"site\" grid=\"\">\n        <template>\n          <paper-button\n            on-focusin=\"_mouseEnter\"\n            on-focusout=\"_mouseLeave\"\n            data-site-id\\$=\"[[site.id]]\"\n            class=\"site-card-wrapper\"\n            on-click=\"_siteClicked\"\n          >\n            <site-card\n              data-site-id\\$=\"[[site.id]]\"\n              size=\"[[size]]\"\n              image=\"[[site.metadata.image]]\"\n              icon=\"[[site.metadata.icon]]\"\n              name=\"[[site.title]]\"\n              title=\"[[site.description]]\"\n              elevation=\"2\"\n            ></site-card>\n          </paper-button>\n        </template>\n      </iron-list>\n    `;\n  }\n  static get tag() {\n    return \"sites-listing\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Object, JSON Outline Schema format\n       */\n      sitesResponse: {\n        type: Object,\n        notify: true,\n        observer: \"_sitesResponseChanged\"\n      },\n      /**\n       * Array of site objects\n       */\n      sites: {\n        type: Array,\n        notify: true\n      },\n      /**\n       * Size of the cards\n       */\n      size: {\n        type: String,\n        value: \"large\"\n      },\n      /**\n       * Data Source to power the loading of sites in JSON Outline Schema format.\n       */\n      dataSource: {\n        type: String\n      },\n      /**\n       * Allow for loading the location in the array rather than firing an event\n       */\n      loadLocation: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n  /**\n   * attached life cycle\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener(\n      \"sites-listing-refresh-data\",\n      this.refreshData.bind(this)\n    );\n  }\n  /**\n   * detached life cycle\n   */\n  disconnectedCallback() {\n    window.removeEventListener(\n      \"sites-listing-refresh-data\",\n      this.refreshData.bind(this)\n    );\n    super.disconnectedCallback();\n  }\n  /**\n   * force the request to regenerate\n   */\n  refreshData(e) {\n    this.shadowRoot.querySelector(\"#loaddata\").generateRequest();\n  }\n  /**\n   * Parse JSON Outline Schema for the items and bind that to sites\n   */\n  _sitesResponseChanged(newValue, oldValue) {\n    if (newValue) {\n      if (typeof newValue.items !== typeof undefined) {\n        this.set(\"sites\", []);\n        this.set(\"sites\", newValue.items);\n        this.notifyPath(\"sites.*\");\n      }\n    }\n  }\n  /**\n   * Handle tap on paper-button above to redirect to the correct data.\n   */\n  _siteClicked(e) {\n    var normalizedEvent = dom(e);\n    var local = normalizedEvent.localTarget;\n    // this will have the id of the current course\n    var active = local.getAttribute(\"data-site-id\");\n    // find the course by it's unique id and filter just to it\n    let findSite = this.sites.filter(site => {\n      if (site.id !== active) {\n        return false;\n      }\n      return true;\n    });\n    // if we found one, make it the top level item\n    if (findSite.length > 0) {\n      findSite = findSite.pop();\n    }\n    // double check we have a URI\n    if (this.loadLocation && typeof findSite.location !== typeof undefined) {\n      window.location.href = findSite.location;\n    }\n    this.dispatchEvent(\n      new CustomEvent(\"sites-listing-item-selected\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: findSite\n      })\n    );\n  }\n  /**\n   * Increase elevation while hovering.\n   */\n  _mouseEnter(e) {\n    let card = dom(e.target).querySelectorAll(\"site-card\")[0];\n    card.__oldElevation = card.elevation;\n    if (card.elevation + 2 > 5) {\n      card.elevation = 5;\n    } else {\n      card.elevation += 2;\n    }\n  }\n\n  /**\n   * Reset the elevation.\n   */\n  _mouseLeave(e) {\n    let card = dom(e.target).querySelectorAll(\"site-card\")[0];\n    card.elevation = card.__oldElevation;\n  }\n}\nwindow.customElements.define(SitesListing.tag, SitesListing);\nexport { SitesListing };\n"],"names":["SitesListing","PolymerElement","html","sitesResponse","type","Object","notify","observer","sites","Array","size","String","value","dataSource","loadLocation","Boolean","window","addEventListener","this","refreshData","bind","removeEventListener","e","shadowRoot","querySelector","generateRequest","newValue","oldValue","_typeof","items","set","notifyPath","active","dom","localTarget","getAttribute","findSite","filter","site","id","length","pop","location","href","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","card","target","querySelectorAll","__oldElevation","elevation","customElements","define","tag"],"mappings":"qyMAcMA,8KAGK,8SAHgBC,+DAMhBC,8CAgFA,yDAGA,CAILC,cAAe,CACbC,KAAMC,OACNC,QAAQ,EACRC,SAAU,yBAKZC,MAAO,CACLJ,KAAMK,MACNH,QAAQ,GAKVI,KAAM,CACJN,KAAMO,OACNC,MAAO,SAKTC,WAAY,CACVT,KAAMO,QAKRG,aAAc,CACZV,KAAMW,QACNH,OAAO,2GASXI,OAAOC,iBACL,6BACAC,KAAKC,YAAYC,KAAKF,sDAOxBF,OAAOK,oBACL,6BACAH,KAAKC,YAAYC,KAAKF,oGAOdI,QACLC,WAAWC,cAAc,aAAaC,gEAKvBC,EAAUC,GAC1BD,iBACEE,EAAOF,EAASG,cACbC,IAAI,QAAS,SACbA,IAAI,QAASJ,EAASG,YACtBE,WAAW,iDAOTT,OAIPU,EAHkBC,MAAIX,GACEY,YAETC,aAAa,gBAE5BC,EAAWlB,KAAKV,MAAM6B,OAAO,SAAAC,UAC3BA,EAAKC,KAAOP,IAMdI,EAASI,OAAS,IACpBJ,EAAWA,EAASK,OAGlBvB,KAAKJ,4BAAgBc,EAAOQ,EAASM,YACvC1B,OAAO0B,SAASC,KAAOP,EAASM,eAE7BE,cACH,IAAIC,YAAY,8BAA+B,CAC7CC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQb,yCAOFd,OACN4B,EAAOjB,MAAIX,EAAE6B,QAAQC,iBAAiB,aAAa,GACvDF,EAAKG,eAAiBH,EAAKI,UACvBJ,EAAKI,UAAY,EAAI,EACvBJ,EAAKI,UAAY,EAEjBJ,EAAKI,WAAa,sCAOVhC,OACN4B,EAAOjB,MAAIX,EAAE6B,QAAQC,iBAAiB,aAAa,GACvDF,EAAKI,UAAYJ,EAAKG,oDAG1BrC,OAAOuC,eAAeC,OAAOxD,EAAayD,IAAKzD"}