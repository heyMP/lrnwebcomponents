{"version":3,"file":"dropdown-select.umd.js","sources":["dropdown-select.umd.js"],"sourcesContent":["import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\n/**\n`dropdown-select`\nAn easy to use, works as expected dropdown menu. Add slotted items like follows:\n\n<dropdown-select\n  allow-outside-scroll\n  always-float-label\n  dynamic-align\n  error-message=\"Required.\"\n  horizontal-align=\"left\"\n  label=\"Select an item.\" \n  no-animations\n  no-label-float\n  placeholder=\"none\" \n  restore-focus-on-close \n  vertical-align=\"bottom\" \n  vertical-offset=\"10\">\n  <paper-item value=\"100\">100 things</paper-item>\n  <paper-item value=\"1000\">Another value</paper-item>\n  <paper-item value=\"10\">Value is 10, but you will see this text</paper-item>\n</dropdown-select>\n\n* @demo demo/index.html\n\n*/\nclass DropdownSelect extends PolymerElement {\n  constructor() {\n    super();\n    import(\"@polymer/paper-dropdown-menu/paper-dropdown-menu.js\");\n    import(\"@polymer/paper-item/paper-item.js\");\n    import(\"@polymer/paper-listbox/paper-listbox.js\");\n  }\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n        paper-listbox ::slotted(paper-item) {\n          display: block;\n          width: calc(100% - 32px);\n          padding: 0 16px;\n          min-height: 32px;\n          vertical-align: text-top;\n          line-height: 32px;\n          @apply --dropdown-select-items;\n        }\n        paper-listbox paper-listbox {\n          @apply --dropdown-listbox;\n        }\n      </style>\n      <paper-dropdown-menu\n        id=\"menu\"\n        allow-outside-scroll\\$=\"[[allowOutsideScroll]]\"\n        always-float-label\\$=\"[[alwaysFloatLabel]]\"\n        dynamic-align\\$=\"[[dynamicAlign]]\"\n        error-message\\$=\"[[errorMessage]]\"\n        horizontal-align\\$=\"[[horizontalAlign]]\"\n        label\\$=\"[[label]]\"\n        no-animations\\$=\"[[noAnimations]]\"\n        no-label-float\\$=\"[[noLabelFloat]]\"\n        on-selected-item-changed=\"_getSelectedValue\"\n        placeholder\\$=\"[[placeholder]]\"\n        restore-focus-on-close\\$=\"[[restoreFocusOnClose]]\"\n        vertical-align\\$=\"[[verticalAlign]]\"\n        vertical-offset\\$=\"[[verticalOffset]]\"\n      >\n        <paper-listbox\n          id=\"listbox\"\n          slot=\"dropdown-content\"\n          class=\"dropdown-content\"\n        >\n          <slot id=\"content\"></slot>\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get tag() {\n    return \"dropdown-select\";\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function() {\n      this._valueChanged(this.value);\n      this.addEventListener(\"paper-dropdown-open\", this._onOpen.bind(this));\n      this.addEventListener(\"paper-dropdown-close\", this._onClose.bind(this));\n    });\n  }\n  disconnectedCallback() {\n    this.removeEventListener(\"paper-dropdown-open\", this._onOpen.bind(this));\n    this.removeEventListener(\"paper-dropdown-close\", this._onClose.bind(this));\n    super.disconnectedCallback();\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Set to true in order to prevent scroll from being constrained\n       * to the dropdown when it opens.\n       */\n      allowOutsideScroll: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set to true to always float the label.\n       */\n      alwaysFloatLabel: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * If true, the `horizontalAlign` and `verticalAlign` properties will\n       * be considered preferences instead of strict requirements when\n       * positioning the dropdown and may be changed if doing so reduces\n       * the area of the dropdown falling outside of `fitInto`.\n       */\n      dynamicAlign: {\n        type: Boolean\n      },\n\n      /**\n       * The error message to display when invalid.\n       */\n      errorMessage: {\n        type: String\n      },\n\n      /**\n       * The orientation against which to align the menu dropdown\n       * horizontally relative to the dropdown trigger.\n       */\n      horizontalAlign: {\n        type: String,\n        value: \"right\"\n      },\n\n      /**\n       * The label of the select menu\n       */\n      label: {\n        type: String,\n        value: \"Select an option.\"\n      },\n\n      /**\n       * Set to true to disable animations when opening and closing the\n       * dropdown.\n       */\n      noAnimations: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set to true to disable the floating label.\n       */\n      noLabelFloat: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * True if the dropdown is open. Otherwise, false.\n       */\n      opened: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * The placeholder for the dropdown.\n       */\n      placeholder: {\n        type: String\n      },\n\n      /**\n       * Whether focus should be restored to the dropdown when the menu closes.\n       */\n      restoreFocusOnClose: {\n        type: Boolean,\n        value: true\n      },\n\n      /**\n       * The last selected item.\n       */\n      selectedItem: {\n        type: Object\n      },\n\n      /**\n       * The index of the selected item\n       */\n      selectedItemIndex: {\n        type: Number,\n        value: null\n      },\n\n      /**\n       * The label of the selected item\n       */\n      selectedItemLabel: {\n        type: String,\n        value: null\n      },\n\n      /**\n       * The default value\n       */\n      value: {\n        type: String,\n        value: null,\n        notify: true,\n        reflectToAttribute: true,\n        observer: \"_valueChanged\"\n      },\n\n      /**\n       * The orientation against which to align the menu dropdown\n       * vertically relative to the dropdown trigger.\n       */\n      verticalAlign: {\n        type: String,\n        value: \"top\"\n      },\n\n      /**\n       * Overrides the vertical offset computed in\n       * _computeMenuVerticalOffset.\n       */\n      verticalOffset: {\n        type: Number\n      }\n    };\n  }\n\n  /**\n   * Get the value of the selected item.\n   */\n  _getSelectedValue(e) {\n    if (e.detail.value !== null) {\n      this.value = e.detail.value.getAttribute(\"value\");\n      this._setSelectedValues();\n      this.dispatchEvent(\n        new CustomEvent(\"change\", {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: { value: this.value }\n        })\n      ); //support for old version\n      this.dispatchEvent(\n        new CustomEvent(\"dropdown-select-changed\", {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: this\n        })\n      );\n    }\n  }\n\n  /**\n   * Sets the opened property to true\n   */\n  _onOpen(e) {\n    this.opened = true;\n  }\n\n  /**\n   * Sets the opened property to false\n   */\n  _onClose(e) {\n    this.opened = false;\n  }\n  /**\n   * Get the value of the selected item.\n   */\n  _setSelectedValues() {\n    this.selectedItem = this.shadowRoot.querySelector(\"#menu\").selectedItem;\n    this.selectedItemLabel = this.shadowRoot.querySelector(\n      \"#menu\"\n    ).selectedItemLabel;\n    this.selectedItemIndex = this.shadowRoot.querySelector(\"#listbox\").selected;\n  }\n  /**\n   * Notice value has changed and ensure data model is accurate\n   */\n  _valueChanged(newValue, oldValue) {\n    let children = dom(this).querySelectorAll(\"paper-item\");\n    if (children !== undefined && children !== null) {\n      for (let i = 0; i < children.length; i++) {\n        if (this.value === children[i].getAttribute(\"value\")) {\n          this.shadowRoot.querySelector(\"#listbox\").selected = i;\n          this._setSelectedValues();\n        }\n      }\n    }\n  }\n}\nwindow.customElements.define(DropdownSelect.tag, DropdownSelect);\nexport { DropdownSelect };\n"],"names":["DropdownSelect","PolymerElement","html","allowOutsideScroll","type","Boolean","value","alwaysFloatLabel","dynamicAlign","errorMessage","String","horizontalAlign","label","noAnimations","noLabelFloat","opened","placeholder","restoreFocusOnClose","selectedItem","Object","selectedItemIndex","Number","selectedItemLabel","notify","reflectToAttribute","observer","verticalAlign","verticalOffset","afterNextRender","this","_valueChanged","addEventListener","_onOpen","bind","_onClose","removeEventListener","e","detail","getAttribute","_setSelectedValues","dispatchEvent","CustomEvent","bubbles","cancelable","composed","shadowRoot","querySelector","selected","newValue","oldValue","children","dom","querySelectorAll","i","length","window","customElements","define","tag"],"mappings":"+tIA4BMA,8KAGK,8DACA,4CACA,mSALkBC,+DAQlBC,8CA8CA,2DAiBA,CAKLC,mBAAoB,CAClBC,KAAMC,QACNC,OAAO,GAMTC,iBAAkB,CAChBH,KAAMC,QACNC,OAAO,GASTE,aAAc,CACZJ,KAAMC,SAMRI,aAAc,CACZL,KAAMM,QAORC,gBAAiB,CACfP,KAAMM,OACNJ,MAAO,SAMTM,MAAO,CACLR,KAAMM,OACNJ,MAAO,qBAOTO,aAAc,CACZT,KAAMC,QACNC,OAAO,GAMTQ,aAAc,CACZV,KAAMC,QACNC,OAAO,GAMTS,OAAQ,CACNX,KAAMC,QACNC,OAAO,GAMTU,YAAa,CACXZ,KAAMM,QAMRO,oBAAqB,CACnBb,KAAMC,QACNC,OAAO,GAMTY,aAAc,CACZd,KAAMe,QAMRC,kBAAmB,CACjBhB,KAAMiB,OACNf,MAAO,MAMTgB,kBAAmB,CACjBlB,KAAMM,OACNJ,MAAO,MAMTA,MAAO,CACLF,KAAMM,OACNJ,MAAO,KACPiB,QAAQ,EACRC,oBAAoB,EACpBC,SAAU,iBAOZC,cAAe,CACbtB,KAAMM,OACNJ,MAAO,OAOTqB,eAAgB,CACdvB,KAAMiB,gHAzJVO,kBAAgBC,KAAM,gBACfC,cAAcD,KAAKvB,YACnByB,iBAAiB,sBAAuBF,KAAKG,QAAQC,KAAKJ,YAC1DE,iBAAiB,uBAAwBF,KAAKK,SAASD,KAAKJ,6DAI9DM,oBAAoB,sBAAuBN,KAAKG,QAAQC,KAAKJ,YAC7DM,oBAAoB,uBAAwBN,KAAKK,SAASD,KAAKJ,0GAyJpDO,GACO,OAAnBA,EAAEC,OAAO/B,aACNA,MAAQ8B,EAAEC,OAAO/B,MAAMgC,aAAa,cACpCC,0BACAC,cACH,IAAIC,YAAY,SAAU,CACxBC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVP,OAAQ,CAAE/B,MAAOuB,KAAKvB,eAGrBkC,cACH,IAAIC,YAAY,0BAA2B,CACzCC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVP,OAAQR,yCASRO,QACDrB,QAAS,mCAMPqB,QACFrB,QAAS,oDAMTG,aAAeW,KAAKgB,WAAWC,cAAc,SAAS5B,kBACtDI,kBAAoBO,KAAKgB,WAAWC,cACvC,SACAxB,uBACGF,kBAAoBS,KAAKgB,WAAWC,cAAc,YAAYC,+CAKvDC,EAAUC,OAClBC,EAAWC,MAAItB,MAAMuB,iBAAiB,iBACtCF,MAAAA,MACG,IAAIG,EAAI,EAAGA,EAAIH,EAASI,OAAQD,IAC/BxB,KAAKvB,QAAU4C,EAASG,GAAGf,aAAa,gBACrCO,WAAWC,cAAc,YAAYC,SAAWM,OAChDd,2DAMfgB,OAAOC,eAAeC,OAAOzD,EAAe0D,IAAK1D"}