{"version":3,"file":"data-viz.umd.js","sources":["data-viz.umd.js"],"sourcesContent":["/**\n * Copyright 2019 \n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\n// register globally so we can make sure there is only one\nwindow.DataViz = window.DataViz || {};\n// request if this exists. This helps invoke the element existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same data-viz element, making it a singleton.\nwindow.DataViz.requestAvailability = () => {\n  // if there is no single instance, generate one and append it to end of the document\n  if (!window.DataViz.instance) {\n    window.DataViz.instance = document.createElement(\"data-viz\");\n    document.body.appendChild(window.DataViz.instance);\n  }\n  return window.DataViz.instance;\n};\n\n/**\n * `data-viz`\n * `display pouch-db data using graphs`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass DataViz extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n</style>\n<slot></slot>\n<div>[[title]]</div>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  \"title\": {\n    \"name\": \"title\",\n    \"type\": \"String\",\n    \"value\": \"data-viz-default-value\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  }\n};\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"data-viz\";\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    \n    window.addEventListener(\"data-viz-hide\", this.hideDataViz.bind(this));\n    window.addEventListener(\"data-viz-show\", this.showDataViz.bind(this));\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    super.connectedCallback();\n    window.removeEventListener(\"data-viz-hide\", this.hideDataViz.bind(this));\n    window.removeEventListener(\"data-viz-show\", this.showDataViz.bind(this));\n  }\n  /**\n   * Hide callback\n   */\n  hideDataViz (e) {\n    // add your code to run when the singleton hides\n  }\n  /**\n   * Show / available callback\n   */\n  showDataViz (e) {\n    // add your code to run when the singleton is called for\n  }\n\n  \n}\nwindow.customElements.define(DataViz.tag, DataViz);\nexport { DataViz };\n"],"names":["window","DataViz","requestAvailability","instance","document","createElement","body","appendChild","PolymerElement","html","addEventListener","this","hideDataViz","bind","showDataViz","removeEventListener","e","customElements","define","tag"],"mappings":"q7CAMAA,OAAOC,QAAUD,OAAOC,SAAW,GAInCD,OAAOC,QAAQC,oBAAsB,kBAE9BF,OAAOC,QAAQE,WAClBH,OAAOC,QAAQE,SAAWC,SAASC,cAAc,YACjDD,SAASE,KAAKC,YAAYP,OAAOC,QAAQE,WAEpCH,OAAOC,QAAQE,cAclBF,gaAAgBO,+DAIXC,qDAeA,OACA,MACC,aACA,eACC,6CACa,YACV,sCAUL,kHAQPT,OAAOU,iBAAiB,gBAAiBC,KAAKC,YAAYC,KAAKF,OAC/DX,OAAOU,iBAAiB,gBAAiBC,KAAKG,YAAYD,KAAKF,4GAO/DX,OAAOe,oBAAoB,gBAAiBJ,KAAKC,YAAYC,KAAKF,OAClEX,OAAOe,oBAAoB,gBAAiBJ,KAAKG,YAAYD,KAAKF,2CAKvDK,wCAMAA,yCAMfhB,OAAOiB,eAAeC,OAAOjB,EAAQkB,IAAKlB"}