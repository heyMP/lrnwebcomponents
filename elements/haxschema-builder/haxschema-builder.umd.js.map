{"version":3,"file":"haxschema-builder.umd.js","sources":["haxschema-builder.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport \"@lrnwebcomponents/json-editor/json-editor.js\";\nimport \"@lrnwebcomponents/code-editor/code-editor.js\";\nimport \"@vaadin/vaadin-split-layout/vaadin-split-layout.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@lrnwebcomponents/hax-body/lib/hax-schema-form.js\";\n/**\n * `haxschema-builder`\n * `dynamically build and visualize HAXschema`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass HaxschemaBuilder extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\ncode-editor {\n  height: 500px;\n}</style>\n<vaadin-split-layout>\n  <div>\n    <paper-button raised noink on-click=\"addConfigure\">Add to configure</paper-button>\n    <paper-button raised noink on-click=\"addAdvanced\">Add to advanced</paper-button>\n    <code-editor id=\"code\"  on-value-changed=\"_editorDataChanged\" language=\"json\"></code-editor>\n    <json-editor id=\"json\" label=\"JSON\" value=\"{{haxSchema}}\"></json-editor>\n  </div>\n  <div>\n    <hax-schema-form id=\"form\" configure-schema=\"[[configureSchema]]\" advanced-schema=\"[[advancedSchema]]\" value=\"{{value}}\"></hax-schema-form>\n  </div>\n</vaadin-split-layout>`;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return {\n  \"canScale\": true,\n  \"canPosition\": true,\n  \"canEditSource\": true,\n  \"gizmo\": {\n    \"title\": \"Haxschema builder\",\n    \"description\": \"dynamically build and visualize HAXschema\",\n    \"icon\": \"icons:android\",\n    \"color\": \"green\",\n    \"groups\": [\"Builder\"],\n    \"handles\": [],\n    \"meta\": {\n      \"author\": \"btopro\",\n      \"owner\": \"The Pennsylvania State University\"\n    }\n  },\n  \"settings\": {\n    \"quick\": [],\n    \"configure\": [\n      {\n        \"property\": \"source\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": true,\n        \"icon\": \"icons:link\",\n        \"validationType\": \"url\"\n      }\n    ],\n    \"advanced\": []\n  }\n}\n;\n  }\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  /**\n   * schema to extract for whatever you wanted it for\n   */\n  \"haxSchema\": {\n    \"name\": \"haxSchema\",\n    \"type\": \"String\",\n    \"notify\": true,\n    \"observer\": \"_haxSchemaChanged\"\n  },\n  /**\n   * configure form schema to extract for whatever you wanted it for\n   */\n  \"configureSchema\": {\n    \"name\": \"configureSchema\",\n    \"type\": \"Object\",\n    \"value\": {}\n  },\n  /**\n   * advanced form schema to extract for whatever you wanted it for\n   */\n  \"advancedSchema\": {\n    \"name\": \"advancedSchema\",\n    \"type\": \"Object\",\n    \"value\": {}\n  },\n  /**\n   * Optional remote source to pull in\n   */\n  \"source\": {\n    \"name\": \"source\",\n    \"type\": \"String\"\n  },\n  /**\n   * String based value passed between the elements to stitch together\n   */\n  \"value\": {\n    \"name\": \"value\",\n    \"type\": \"String\"\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"haxschema-builder\";\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.HAXWiring = new HAXWiring();\n    this.HAXWiring.setup(\n      HaxschemaBuilder.haxProperties,\n      HaxschemaBuilder.tag,\n      this\n    );\n    if (!this.source) {\n      this.haxSchema = JSON.stringify(\n        this.HAXWiring.prototypeHaxProperties(),\n        null,\n        2\n      );\n    }\n    // HACK to get initial paint to have the correct form\n    this.$.form.modeTab = \"advanced\";\n    setTimeout(() => {\n      this.$.form.modeTab = \"configure\";\n    }, 2000);\n  }\n  /**\n   * Force an update on code editor when this value changes\n   */\n  _haxSchemaChanged(newValue) {\n    if (newValue) {\n      this.$.code.editorValue = newValue;\n    }\n  }\n  /**\n   * Notice code editor changes and reflect them into this element\n   */\n  _editorDataChanged(e) {\n    // value coming up off of this and get it propegated correctly\n    this.haxSchema = e.detail.value;\n    let hs = JSON.parse(this.haxSchema);\n    for (var key in hs.settings) {\n      let schema = this.HAXWiring.getHaxJSONSchema(key, hs);\n      this.set(key + \"Schema\", schema);\n    }\n  }\n  addAdvanced(e) {\n    let hs = JSON.parse(this.haxSchema);\n    hs.settings.advanced.push(this.__propPrototype());\n    this.__refreshSchemas(hs);\n  }\n  addConfigure(e) {\n    let hs = JSON.parse(this.haxSchema);\n    hs.settings.configure.push(this.__propPrototype());\n    this.__refreshSchemas(hs);\n  }\n  __refreshSchemas(hs) {\n    for (var key in hs.settings) {\n      let schema = this.HAXWiring.getHaxJSONSchema(key, hs);\n      this.set(key + \"Schema\", schema);\n    }\n    this.haxSchema = JSON.stringify(hs);\n  }\n  __propPrototype() {\n    return {\n      property: \"title\",\n      title: \"Title\",\n      description: \"\",\n      inputMethod: \"textfield\",\n      icon: \"android\",\n      required: true,\n      validationType: \"text\"\n    };\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  //disconnectedCallback() {}\n}\nwindow.customElements.define(HaxschemaBuilder.tag, HaxschemaBuilder);\nexport { HaxschemaBuilder };\n"],"names":["HaxschemaBuilder","PolymerElement","html","HAXWiring","setup","haxProperties","tag","this","source","haxSchema","JSON","stringify","prototypeHaxProperties","$","form","modeTab","setTimeout","_this","newValue","code","editorValue","e","detail","value","hs","parse","key","settings","schema","getHaxJSONSchema","set","advanced","push","__propPrototype","__refreshSchemas","configure","property","title","description","inputMethod","icon","required","validationType","window","customElements","define"],"mappings":"wpFAsBMA,gaAAyBC,+DAIpBC,wDA0BA,WACG,eACG,iBACE,QACR,OACE,gCACM,iDACP,sBACC,eACC,CAAC,mBACA,QACH,QACI,eACD,+CAGD,OACD,aACI,CACX,UACc,qBACG,eACA,sBACH,OACJ,4BACU,iBAGV,8CAOL,WAII,MACH,iBACA,iBACE,WACE,qCAKK,MACT,uBACA,eACC,mBAKO,MACR,sBACA,eACC,WAKD,MACA,cACA,gBAKD,MACC,aACA,6CAWD,2IAOFC,UAAY,IAAIA,iBAChBA,UAAUC,MACbJ,EAAiBK,cACjBL,EAAiBM,IACjBC,MAEGA,KAAKC,cACHC,UAAYC,KAAKC,UACpBJ,KAAKJ,UAAUS,yBACf,KACA,SAICC,EAAEC,KAAKC,QAAU,WACtBC,WAAW,WACTC,EAAKJ,EAAEC,KAAKC,QAAU,aACrB,+CAKaG,GACZA,SACGL,EAAEM,KAAKC,YAAcF,8CAMXG,QAEZZ,UAAYY,EAAEC,OAAOC,UACtBC,EAAKd,KAAKe,MAAMlB,KAAKE,eACpB,IAAIiB,KAAOF,EAAGG,SAAU,KACvBC,EAASrB,KAAKJ,UAAU0B,iBAAiBH,EAAKF,QAC7CM,IAAIJ,EAAM,SAAUE,wCAGjBP,OACNG,EAAKd,KAAKe,MAAMlB,KAAKE,WACzBe,EAAGG,SAASI,SAASC,KAAKzB,KAAK0B,wBAC1BC,iBAAiBV,wCAEXH,OACPG,EAAKd,KAAKe,MAAMlB,KAAKE,WACzBe,EAAGG,SAASQ,UAAUH,KAAKzB,KAAK0B,wBAC3BC,iBAAiBV,4CAEPA,OACV,IAAIE,KAAOF,EAAGG,SAAU,KACvBC,EAASrB,KAAKJ,UAAU0B,iBAAiBH,EAAKF,QAC7CM,IAAIJ,EAAM,SAAUE,QAEtBnB,UAAYC,KAAKC,UAAUa,mDAGzB,CACLY,SAAU,QACVC,MAAO,QACPC,YAAa,GACbC,YAAa,YACbC,KAAM,UACNC,UAAU,EACVC,eAAgB,6CAQtBC,OAAOC,eAAeC,OAAO7C,EAAiBM,IAAKN"}