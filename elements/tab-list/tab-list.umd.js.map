{"version":3,"file":"tab-list.umd.js","sources":["tab-list.umd.js"],"sourcesContent":["import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\n/**\n * `tab-list`\n * `A simple listing of tabed links / items`\n * @demo demo/index.html\n */\nclass TabList extends PolymerElement {\n  constructor() {\n    super();\n    import(\"@polymer/paper-tabs/paper-tabs.js\");\n    import(\"@polymer/paper-tabs/paper-tab.js\");\n    import(\"@polymer/paper-button/paper-button.js\");\n    afterNextRender(this, function() {\n      this.HAXWiring = new HAXWiring();\n      this.HAXWiring.setup(TabList.haxProperties, TabList.tag, this);\n    });\n  }\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          margin: 0 auto;\n          list-style: none;\n          display: block;\n          padding: 16px;\n          border-bottom: 1px solid black;\n        }\n        paper-tabs {\n          align-items: center;\n          justify-items: center;\n        }\n        paper-tab a {\n          text-decoration: none;\n          flex: unset;\n          height: unset;\n          width: 100%;\n          text-align: center;\n        }\n        paper-button {\n          text-transform: unset;\n          width: 100%;\n          display: block;\n          min-width: unset;\n          margin: 0;\n          text-overflow: ellipsis;\n          overflow: hidden;\n        }\n        @media screen and (max-width: 600px) {\n          paper-tab {\n            display: block;\n          }\n        }\n      </style>\n      <paper-tabs>\n        <template is=\"dom-repeat\" items=\"[[tabs]]\" as=\"tab\">\n          <paper-tab>\n            <a target=\"_blank\" href=\"[[tab.link]]\" tabindex=\"-1\">\n              <paper-button raised>[[tab.label]]</paper-button>\n            </a>\n          </paper-tab>\n        </template>\n      </paper-tabs>\n    `;\n  }\n  static get tag() {\n    return \"tab-list\";\n  }\n  static get observers() {\n    return [\"_valueChanged(tabs.*)\"];\n  }\n  static get properties() {\n    return {\n      /**\n       * List of tabs\n       */\n      tabs: {\n        type: Array,\n        value: [],\n        notify: true\n      }\n    };\n  }\n  /**\n   * Notice an array has changed and update the DOM.\n   */\n  _valueChanged(e) {\n    for (var i in e.base) {\n      for (var j in e.base[i]) {\n        this.notifyPath(\"tabs.\" + i + \".\" + j);\n      }\n    }\n  }\n  static get haxProperties() {\n    return {\n      canScale: false,\n      canPosition: false,\n      canEditSource: false,\n      gizmo: {\n        title: \"Tabs\",\n        description: \"A list of links as tabs.\",\n        icon: \"icons:tab\",\n        color: \"grey\",\n        groups: [\"Presentation\", \"Links\"],\n        handles: [],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [],\n        configure: [\n          {\n            property: \"tabs\",\n            title: \"Tabs\",\n            description: \"Listing of tabs\",\n            inputMethod: \"array\",\n            properties: [\n              {\n                property: \"link\",\n                title: \"Link\",\n                description: \"link to go to\",\n                inputMethod: \"textfield\",\n                required: true\n              },\n              {\n                property: \"label\",\n                title: \"Label\",\n                description: \"text to place on the tab\",\n                inputMethod: \"textfield\",\n                required: true\n              }\n            ]\n          }\n        ],\n        advanced: []\n      }\n    };\n  }\n}\nwindow.customElements.define(TabList.tag, TabList);\nexport { TabList };\n"],"names":["TabList","afterNextRender","HAXWiring","setup","haxProperties","tag","this","PolymerElement","html","tabs","type","Array","value","notify","canScale","canPosition","canEditSource","gizmo","title","description","icon","color","groups","handles","meta","author","settings","quick","configure","property","inputMethod","properties","required","advanced","e","i","base","j","notifyPath","window","customElements","define"],"mappings":"43EAQMA,uOAGK,4CACA,2CACA,yCACPC,uBAAsB,gBACfC,UAAY,IAAIA,iBAChBA,UAAUC,MAAMH,EAAQI,cAAeJ,EAAQK,IAAKC,gQARzCC,+DAYXC,8CAgDA,mDAGA,CAAC,kEAGD,CAILC,KAAM,CACJC,KAAMC,MACNC,MAAO,GACPC,QAAQ,gDAeL,CACLC,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLC,MAAO,OACPC,YAAa,2BACbC,KAAM,YACNC,MAAO,OACPC,OAAQ,CAAC,eAAgB,SACzBC,QAAS,GACTC,KAAM,CACJC,OAAQ,qBAGZC,SAAU,CACRC,MAAO,GACPC,UAAW,CACT,CACEC,SAAU,OACVX,MAAO,OACPC,YAAa,kBACbW,YAAa,QACbC,WAAY,CACV,CACEF,SAAU,OACVX,MAAO,OACPC,YAAa,gBACbW,YAAa,YACbE,UAAU,GAEZ,CACEH,SAAU,QACVX,MAAO,QACPC,YAAa,2BACbW,YAAa,YACbE,UAAU,MAKlBC,SAAU,gDAjDFC,OACP,IAAIC,KAAKD,EAAEE,SACT,IAAIC,KAAKH,EAAEE,KAAKD,QACdG,WAAW,QAAUH,EAAI,IAAME,wCAmD5CE,OAAOC,eAAeC,OAAOzC,EAAQK,IAAKL"}