{"version":3,"file":"lrndesign-avatar.umd.js","sources":["lrndesign-avatar.umd.js"],"sourcesContent":["import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { SimpleColors } from \"@lrnwebcomponents/simple-colors/simple-colors.js\";\n/**\n * `lrndesign-avatar`\n * `Visualize a user account eitehr with an image, a label, or as abstract art.`\n * @demo demo/index.html\n */\nclass LrndesignAvatar extends PolymerElement {\n  constructor() {\n    super();\n    import(\"@lrnwebcomponents/paper-avatar/paper-avatar.js\");\n  }\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n        paper-avatar {\n          --paper-avatar-width: var(--lrndesign-avatar-width);\n          --paper-avatar-height: var(--lrndesign-avatar-height);\n        }\n      </style>\n      <paper-avatar\n        label=\"[[label]]\"\n        src=\"[[src]]\"\n        two-chars=\"[[twoChars]]\"\n        style$=\"background-color:[[hexColor]];\"\n        jdenticon=\"[[jdenticon]]\"\n      ></paper-avatar>\n    `;\n  }\n\n  static get tag() {\n    return \"lrndesign-avatar\";\n  }\n  _getHexColor(color) {\n    let name = color.replace(\"-text\", \"\");\n    let tmp = new SimpleColors();\n    if (tmp.colors[name]) {\n      return tmp.colors[name][6];\n    }\n    return \"#000000\";\n  }\n  static get properties() {\n    return {\n      /**\n       * text to use for avatar\n       */\n      label: {\n        type: String,\n        value: \"lrndesign-avatar\"\n      },\n      /**\n       * link to an image, optional\n       */\n      src: {\n        type: String\n      },\n      /**\n       * Mode for presenting 1st two letters\n       */\n      twoChars: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Class for the color\n       */\n      hexColor: {\n        type: String,\n        computed: \"_getHexColor(color)\"\n      },\n      /**\n       * Color class work to apply\n       */\n      color: {\n        type: String,\n        value: \"blue\",\n        reflectToAttribute: true\n      },\n      /**\n       * Form abstract art from hash of label\n       */\n      jdenticon: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n}\nwindow.customElements.define(LrndesignAvatar.tag, LrndesignAvatar);\nexport { LrndesignAvatar };\n"],"names":["LrndesignAvatar","PolymerElement","html","label","type","String","value","src","twoChars","Boolean","hexColor","computed","color","reflectToAttribute","jdenticon","name","replace","tmp","SimpleColors","colors","window","customElements","define","tag"],"mappings":"onDAOMA,8KAGK,0SAHmBC,+DAMnBC,8CAqBA,4DAWA,CAILC,MAAO,CACLC,KAAMC,OACNC,MAAO,oBAKTC,IAAK,CACHH,KAAMC,QAKRG,SAAU,CACRJ,KAAMK,QACNH,OAAO,GAKTI,SAAU,CACRN,KAAMC,OACNM,SAAU,uBAKZC,MAAO,CACLR,KAAMC,OACNC,MAAO,OACPO,oBAAoB,GAKtBC,UAAW,CACTV,KAAMK,QACNH,OAAO,8CAlDAM,OACPG,EAAOH,EAAMI,QAAQ,QAAS,IAC9BC,EAAM,IAAIC,sBACVD,EAAIE,OAAOJ,GACNE,EAAIE,OAAOJ,GAAM,GAEnB,+CAiDXK,OAAOC,eAAeC,OAAOtB,EAAgBuB,IAAKvB"}