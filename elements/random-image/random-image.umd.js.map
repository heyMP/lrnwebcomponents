{"version":3,"file":"random-image.umd.js","sources":["random-image.umd.js"],"sourcesContent":["import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\n/**\n`random-image`\nElement to show random image from a given group.\n\n* @demo demo/index.html\n*/\nclass RandomImage extends PolymerElement {\n  constructor() {\n    super();\n    import(\"@polymer/iron-image/iron-image.js\");\n  }\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n        .is-circle {\n          border: 1px solid grey;\n          border-radius: 50%;\n          box-shadow: 0px 5px 10px #ccc;\n        }\n      </style>\n      <iron-image\n        style=\"width:200px; height:200px;\"\n        class$=\"[[mode]]\"\n        sizing=\"contain\"\n        src$=\"[[imgSrc]]\"\n        title$=\"[[imgTitle]]\"\n      ></iron-image>\n    `;\n  }\n\n  static get tag() {\n    return \"random-image\";\n  }\n\n  static get properties() {\n    return {\n      mode: {\n        type: String,\n        notify: true,\n        value: \"\"\n      },\n      imgSrc: {\n        type: String\n      },\n      imgTitle: {\n        type: String\n      },\n      imagesList: {\n        type: Object,\n        notify: true,\n        // When initializing a property to an object or array value, use a function to ensure that each element\n        // gets its own copy of the value, rather than having an object or array shared across all instances of the element\n        value() {\n          return [];\n        }\n      }\n    };\n  }\n\n  _pickRandomProperty(obj) {\n    var result;\n    var count = 0;\n    for (var prop in obj) if (Math.random() < 1 / ++count) result = prop;\n    return result;\n  }\n\n  ready() {\n    super.ready();\n    var randomPos = this._pickRandomProperty(this.imagesList);\n    this.imgSrc = this.imagesList[randomPos].path;\n    this.imgTitle = this.imagesList[randomPos].title;\n  }\n}\nwindow.customElements.define(RandomImage.tag, RandomImage);\nexport { RandomImage };\n"],"names":["RandomImage","PolymerElement","html","mode","type","String","notify","value","imgSrc","imgTitle","imagesList","Object","obj","result","count","prop","Math","random","randomPos","this","_pickRandomProperty","path","title","window","customElements","define","tag"],"mappings":"g1DAQMA,8KAGK,6RAHeC,+DAMfC,8CAsBA,wDAIA,CACLC,KAAM,CACJC,KAAMC,OACNC,QAAQ,EACRC,MAAO,IAETC,OAAQ,CACNJ,KAAMC,QAERI,SAAU,CACRL,KAAMC,QAERK,WAAY,CACVN,KAAMO,OACNL,QAAQ,EAGRC,uBACS,uDAMKK,OACdC,EACAC,EAAQ,MACP,IAAIC,KAAQH,EAASI,KAAKC,SAAW,IAAMH,IAAOD,EAASE,UACzDF,gFAKHK,EAAYC,KAAKC,oBAAoBD,KAAKT,iBACzCF,OAASW,KAAKT,WAAWQ,GAAWG,UACpCZ,SAAWU,KAAKT,WAAWQ,GAAWI,2CAG/CC,OAAOC,eAAeC,OAAOzB,EAAY0B,IAAK1B"}