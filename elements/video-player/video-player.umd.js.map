{"version":3,"file":"video-player.umd.js","sources":["video-player.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport { A11yBehaviors } from \"@lrnwebcomponents/a11y-behaviors/a11y-behaviors.js\";\nimport \"@polymer/polymer/lib/elements/dom-repeat.js\";\nimport \"@polymer/polymer/lib/elements/dom-if.js\";\nimport { SchemaBehaviors } from \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\nimport { MediaBehaviorsVideo } from \"@lrnwebcomponents/media-behaviors/media-behaviors.js\";\n/**\n * `video-player`\n * `A simple responsive video player with ridiculously powerful backing`\n *\n * @microcopy - language worth noting:\n * - `video source` - url / link to the video file\n * ```\n<video-player \n  accent-color$=\"[[accentColor]]\"                 // Optional accent color for controls, \n                                                  // using the following materialize colors: \n                                                  // red, pink, purple, deep-purple, indigo, blue, \n                                                  // light blue, cyan, teal, green, light green, lime, \n                                                  // yellow, amber, orange, deep-orange, and brown. \n                                                  // Default is null. \n  dark$=\"[[dark]]\"                                // Is the color scheme dark? Default is light. \n  dark-transcript$=\"[[darkTranscript]]\"           // Use dark theme on transcript? Default is false, even when player is dark.   \n  disable-interactive$=\"[[disableInteractive]]\"   // Disable interactive cues?\n  height$=\"[[height]]\"                            // The height of player\n  hide-timestamps$=\"[[hideTimestamps]]\"           // Hide cue timestamps?\n  lang$=\"[[lang]]\"                                // The language of the media\n  media-title$=\"[[mediaTitle]]\"                   // The title of the media\n  source$=\"[[source]]\"                            // The source URL of the media\n  sticky-corner$=\"[[stickyCorner]]\"               // When user scrolls a playing video off-screen, \n                                                      which corner will it stick to? Values are: \n                                                      top-right (default), top-left, bottom-left, bottom-right, \n                                                      and none (to turn sticky off)\n  thumbnail-src$=\"[[thumbnailSrc]]\"               // Optional thumbanil/cover image url\n  width$=\"[[width]]\">                              // The width of the media             \n  <div slot=\"caption\">Optional caption info.</div>\n</video-player>```\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass VideoPlayer extends MediaBehaviorsVideo(\n  A11yBehaviors(SchemaBehaviors(PolymerElement))\n) {\n  \n  // render function\n  static get template() {\n    return html`\n<style>\n:host {\n  display: block;\n  margin: 0 0 15px;\n}\n.video-caption {\n  font-style: italic;\n  margin: 0;\n  padding: 8px;\n  @apply --video-player-caption-theme;\n}</style>\n<div style$=\"[[playerStyle]]\">\n<template is=\"dom-if\" if=\"[[isA11yMedia]]\" restamp>\n  <a11y-media-player\n    accent-color$=\"[[accentColor]]\"\n    audio-only$=\"[[audioOnly]]\"\n    dark$=\"[[dark]]\"\n    dark-transcript$=\"[[darkTranscript]]\"\n    disable-interactive$=\"[[disableInteractive]]\"\n    hide-timestamps$=\"[[hideTimestamps]]\"\n    lang$=\"[[lang]]\"\n    media-type$=\"[[sourceType]]\"\n    preload$=\"[[preload]]\"\n    media-title$=\"[[mediaTitle]]\"\n    sources$=\"[[sourceData]]\"\n    stand-alone$=\"[[__standAlone]]\"\n    sticky-corner$=\"[[stickyCorner]]\"\n    thumbnail-src$=\"[[thumbnailSrc]]\"\n    tracks$=\"[[trackData]]\"\n    crossorigin$=\"[[crossorigin]]\"\n    youtube-id$=\"[[youtubeId]]\"\n  >\n    <template id=\"sources\" is=\"dom-repeat\" items=\"[[sourceData]]\" as=\"sd\" restamp>\n      <source src$=\"[[sd.src]]\" type$=\"[[sd.type]]\" />\n    </template>\n    <template id=\"tracks\" is=\"dom-repeat\" items=\"[[trackData]]\" as=\"track\" restamp>\n      <track\n        src$=\"[[track.src]]\"\n        kind$=\"[[track.kind]]\"\n        label$=\"[[track.label]]\"\n        srclang$=\"[[track.lang]]\"\n      />\n    </template>\n    <slot name=\"caption\"></slot>\n  </a11y-media-player>\n</template>\n<template is=\"dom-if\" if=\"[[!isA11yMedia]]\">\n  <template is=\"dom-if\" if=\"[[sandboxed]]\">\n    <div class=\"responsive-video-container\" lang$=\"[[lang]]\">\n      <webview\n        resource$=\"[[schemaResourceID]]-video\"\n        src$=\"[[sourceData.0.src]]\"\n        width$=\"[[width]]\"\n        height$=\"[[height]]\"\n        frameborder=\"0\"\n      ></webview>\n    </div>\n  </template>\n  <template is=\"dom-if\" if=\"[[!sandboxed]]\">\n    <template is=\"dom-if\" if=\"[[iframed]]\">\n      <div class=\"responsive-video-container\" lang$=\"[[lang]]\">\n        <iframe\n          resource$=\"[[schemaResourceID]]-video\"\n          src$=\"[[sourceData.0.src]]\"\n          width$=\"[[width]]\"\n          height$=\"[[height]]\"\n          frameborder=\"0\"\n          webkitallowfullscreen=\"\"\n          mozallowfullscreen=\"\"\n          allowfullscreen=\"\"\n        ></iframe>\n      </div>\n    </template>\n  </template>\n  <div id=\"videocaption\" class$=\"video-caption\">\n    <p>\n      [[mediaTitle]]\n      <span class=\"media-type print-only\">(embedded media)</span>\n    </p>\n    <slot name=\"caption\"></slot>\n  </div>\n</template>`;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return {\n  \"canScale\": true,\n  \"canPosition\": true,\n  \"canEditSource\": false,\n  \"gizmo\": {\n    \"title\": \"Video player\",\n    \"description\": \"This can present video in a highly accessible manner regardless of source.\",\n    \"icon\": \"av:play-circle-filled\",\n    \"color\": \"red\",\n    \"groups\": [\"Video\", \"Media\"],\n    \"handles\": [\n      {\n        \"type\": \"video\",\n        \"source\": \"source\",\n        \"title\": \"caption\",\n        \"caption\": \"caption\",\n        \"description\": \"caption\",\n        \"color\": \"primaryColor\"\n      }\n    ],\n    \"meta\": {\n      \"author\": \"LRNWebComponents\"\n    }\n  },\n  \"settings\": {\n    \"quick\": [\n      {\n        \"property\": \"accentColor\",\n        \"title\": \"Accent color\",\n        \"description\": \"Select the accent color for the player.\",\n        \"inputMethod\": \"colorpicker\",\n        \"icon\": \"editor:format-color-fill\"\n      },\n      {\n        \"attribute\": \"dark\",\n        \"title\": \"Dark theme\",\n        \"description\": \"Enable dark theme for the player.\",\n        \"inputMethod\": \"boolean\",\n        \"icon\": \"invert-colors\"\n      }\n    ],\n    \"configure\": [\n      {\n        \"property\": \"source\",\n        \"title\": \"Source\",\n        \"description\": \"The URL for this video.\",\n        \"inputMethod\": \"haxupload\",\n        \"icon\": \"link\",\n        \"required\": true,\n        \"validationType\": \"url\"\n      },\n      {\n        \"property\": \"track\",\n        \"title\": \"Closed captions\",\n        \"description\": \"The URL for the captions file.\",\n        \"inputMethod\": \"textfield\",\n        \"icon\": \"link\",\n        \"required\": true,\n        \"validationType\": \"url\"\n      },\n      {\n        \"property\": \"thumbnailSrc\",\n        \"title\": \"Thumbnail image\",\n        \"description\": \"Optional. The URL for a thumbnail/poster image.\",\n        \"inputMethod\": \"textfield\",\n        \"icon\": \"link\",\n        \"required\": true,\n        \"validationType\": \"url\"\n      },\n      {\n        \"property\": \"mediaTitle\",\n        \"title\": \"Title\",\n        \"description\": \"Simple title for under video\",\n        \"inputMethod\": \"textfield\",\n        \"icon\": \"av:video-label\",\n        \"required\": false,\n        \"validationType\": \"text\"\n      },\n      {\n        \"property\": \"accentColor\",\n        \"title\": \"Accent color\",\n        \"description\": \"Select the accent color for the player.\",\n        \"inputMethod\": \"colorpicker\",\n        \"icon\": \"editor:format-color-fill\"\n      },\n      {\n        \"attribute\": \"dark\",\n        \"title\": \"Dark theme\",\n        \"description\": \"Enable dark theme for the player.\",\n        \"inputMethod\": \"boolean\",\n        \"icon\": \"invert-colors\"\n      }\n    ],\n    \"advanced\": [\n      {\n        \"property\": \"darkTranscript\",\n        \"title\": \"Dark theme for transcript\",\n        \"description\": \"Enable dark theme for the transcript.\",\n        \"inputMethod\": \"boolean\"\n      },\n      {\n        \"property\": \"hideTimestamps\",\n        \"title\": \"Hide timestamps\",\n        \"description\": \"Hide the time stamps on the transcript.\",\n        \"inputMethod\": \"boolean\"\n      },\n      {\n        \"property\": \"preload\",\n        \"title\": \"Preload source(s).\",\n        \"description\": \"How the sources should be preloaded, i.e. auto, metadata (default), or none.\",\n        \"inputMethod\": \"select\",\n        \"options\": {\n          \"preload\": \"Preload all media\",\n          \"metadata\": \"Preload media metadata only\",\n          \"none\": \"Don't preload anything\"\n        }\n      },\n      {\n        \"property\": \"stickyCorner\",\n        \"title\": \"Sticky Corner\",\n        \"description\": \"Set the corner where a video plays when scrolled out of range, or choose none to disable sticky video.\",\n        \"inputMethod\": \"select\",\n        \"options\": {\n          \"none\": \"none\",\n          \"top-left\": \"top-left\",\n          \"top-right\": \"top-right\",\n          \"bottom-left\": \"bottom-left\",\n          \"bottom-right\": \"bottom-right\"\n        }\n      },\n      {\n        \"property\": \"sources\",\n        \"title\": \"Other sources\",\n        \"description\": \"List of other sources\",\n        \"inputMethod\": \"array\",\n        \"properties\": [\n          {\n            \"property\": \"src\",\n            \"title\": \"Source\",\n            \"description\": \"The URL for this video.\",\n            \"inputMethod\": \"textfield\"\n          },\n          {\n            \"property\": \"type\",\n            \"title\": \"Type\",\n            \"description\": \"Media type data\",\n            \"inputMethod\": \"select\",\n            \"options\": {\n              \"audio/aac\": \"acc audio\",\n              \"audio/flac\": \"flac audio\",\n              \"audio/mp3\": \"mp3 audio\",\n              \"video/mp4\": \"mp4 video\",\n              \"video/mov\": \"mov video\",\n              \"audio/ogg\": \"ogg audio\",\n              \"video/ogg\": \"ogg video\",\n              \"audio/wav\": \"wav audio\",\n              \"audio/webm\": \"webm audio\",\n              \"video/webm\": \"webm video\"\n            }\n          }\n        ]\n      },\n      {\n        \"property\": \"tracks\",\n        \"title\": \"Track list\",\n        \"description\": \"Tracks of different languages of closed captions\",\n        \"inputMethod\": \"array\",\n        \"properties\": [\n          {\n            \"property\": \"kind\",\n            \"title\": \"Kind\",\n            \"description\": \"Kind of track\",\n            \"inputMethod\": \"select\",\n            \"options\": {\n              \"subtitles\": \"subtitles\" /*,\n              Future Features\n              'description': 'description',\n              'thumbnails': 'thumbnails',\n              'interactive': 'interactive',\n              'annotation': 'annotation'*/\n            }\n          },\n          {\n            \"property\": \"label\",\n            \"title\": \"Label\",\n            \"description\": \"The human-readable name for this track, eg. \\\"English Subtitles\\\"\",\n            \"inputMethod\": \"textfield\"\n          },\n          {\n            \"property\": \"src\",\n            \"title\": \"Source\",\n            \"description\": \"Source of the track\",\n            \"inputMethod\": \"textfield\"\n          },\n          {\n            \"property\": \"srclang\",\n            \"title\": \"Two letter, language code, eg. 'en' for English, \\\"de\\\" for German, \\\"es\\\" for Spanish, etc.\",\n            \"description\": \"Label\",\n            \"inputMethod\": \"textfield\"\n          }\n        ]\n      }\n    ]\n  }\n}\n;\n  }\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  /**\n   * Is the media an audio file only?\n   */\n  \"audioOnly\": {\n    \"type\": \"Boolean\",\n    \"value\": false\n  },\n  /**\n   * Optional accent color for controls,\n   * using the following materialize \"colors\":\n   * red, pink, purple, deep-purple, indigo, blue,\n   * light blue, cyan, teal, green, light green, lime,\n   * yellow, amber, orange, deep-orange, and brown.\n   * Default is null.\n   */\n  \"accentColor\": {\n    \"type\": \"String\",\n    \"value\": null,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Cross origin flag for transcripts to load\n   */\n  \"crossorigin\": {\n    \"type\": \"Boolean\",\n    \"value\": false,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Enables darker player.\n   */\n  \"dark\": {\n    \"type\": \"Boolean\",\n    \"value\": false,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Use dark theme on transcript? Default is false, even when player is dark.\n   */\n  \"darkTranscript\": {\n    \"type\": \"Boolean\",\n    \"value\": false\n  },\n  /**\n   * disable interactive mode that makes the transcript clickable\n   */\n  \"disableInteractive\": {\n    \"type\": \"Boolean\",\n    \"value\": false\n  },\n  /**\n   * The height of the media player for non-a11y-media.\n   */\n  \"height\": {\n    \"type\": \"String\",\n    \"value\": null\n  },\n  /**\n   * show cue's start and end time\n   */\n  \"hideTimestamps\": {\n    \"type\": \"Boolean\",\n    \"value\": false\n  },\n  /**\n   * Computed if this should be in an iframe or not.\n   */\n  \"iframed\": {\n    \"type\": \"Boolean\",\n    \"computed\": \"_computeIframed(sourceData, sandboxed)\"\n  },\n  /**\n   * Computed if this should be in a11y-media-player.\n   */\n  \"isA11yMedia\": {\n    \"type\": \"Boolean\",\n    \"computed\": \"_computeA11yMedia(sourceType, sandboxed)\"\n  },\n  /**\n   * The type of source, i.e. \"local\", \"vimeo\", \"youtube\", etc.\n   */\n  \"isYoutube\": {\n    \"type\": \"Boolean\",\n    \"computed\": \"_computeYoutube(sourceType)\"\n  },\n  /**\n   * The language of the media\n   */\n  \"lang\": {\n    \"type\": \"String\",\n    \"value\": \"en\"\n  },\n  /**\n   * Simple caption for the video\n   */\n  \"mediaTitle\": {\n    \"type\": \"String\"\n  },\n  /**\n   * What to preload for a11y-media-player: auto, metadata (default), or none.\n   */\n  \"preload\": {\n    \"type\": \"String\",\n    \"value\": \"metadata\"\n  },\n  /* *\n     * Responsive video, calculated from not-responsive.\n     * /\n    \"responsive\": {\n      \"type\": \"Boolean\",\n      \"reflectToAttribute\": true,\n      \"value\": true,\n    },*/\n  /**\n   * Compute if this is a sandboxed system or not\n   */\n  \"sandboxed\": {\n    \"type\": \"Boolean\",\n    \"computed\": \"_computeSandboxed(sourceData)\"\n  },\n  /**\n   * Source of the video\n   */\n  \"source\": {\n    \"type\": \"String\",\n    \"value\": null,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Source of the video\n   */\n  \"sources\": {\n    \"type\": \"Array\",\n    \"value\": []\n  },\n  /**\n   * List of source objects\n   */\n  \"sourceData\": {\n    \"type\": \"Array\",\n    \"computed\": \"_getSourceData(source,sources,trackData)\"\n  },\n  /**\n   * The type of source, i.e. \"local\", \"vimeo\", \"youtube\", etc.\n   */\n  \"sourceType\": {\n    \"type\": \"String\",\n    \"computed\": \"_computeSourceType(sourceData)\"\n  },\n  /**\n   * When playing but scrolled off screen, to which corner does it \"stick\":\n   * top-left, top-right, bottom-left, bottom-right, or none?\n   * Default is \"top-right\". \"None\" disables stickiness.\n   */\n  \"stickyCorner\": {\n    \"type\": \"String\",\n    \"value\": \"top-right\",\n    \"reflectToAttribute\": true\n  },\n  /**\n   * The url for a single subtitle track\n   */\n  \"track\": {\n    \"type\": \"String\",\n    \"value\": null\n  },\n  /**\n   * Array of text tracks\n   * [{\n   *  \"src\": \"path/to/track.vtt\",\n   *  \"label\": \"English\",\n   *  \"srclang\": \"en\",\n   *  \"kind\": \"subtitles\",\n   * }]\n   */\n  \"tracks\": {\n    \"type\": \"Array\",\n    \"value\": []\n  },\n  /**\n   * Cleaned array of text tracks\n   * [{\n   *  \"src\": \"path/to/track.vtt\",\n   *  \"label\": \"English\",\n   *  \"srclang\": \"en\",\n   *  \"kind\": \"subtitles\",\n   * }]\n   */\n  \"trackData\": {\n    \"type\": \"Array\",\n    \"computed\": \"_getTrackData(track,tracks)\"\n  },\n  /**\n   * Source of optional thumbnail image\n   */\n  \"thumbnailSrc\": {\n    \"type\": \"String\",\n    \"value\": null,\n    \"reflectToAttribute\": true\n  },\n  /* *\n     * Calculate vimeo color based on accent color.\n     * /\n    \"vimeoColor\": {\n      \"type\": \"String\",\n      \"computed\": getVimeoColor(dark,accentColor),\n    }, \n    */\n  /**\n   * The width of the media player for non-a11y-media.\n   */\n  \"width\": {\n    \"type\": \"String\",\n    \"value\": null\n  },\n  /**\n   * The type of source, i.e. \"local\", \"vimeo\", \"youtube\", etc.\n   */\n  \"youtubeId\": {\n    \"type\": \"String\",\n    \"computed\": \"_computeYoutubeId(source,sourceType)\"\n  }\n}\n;\n  }\n  constructor() {\n    super();\n    import(\"@lrnwebcomponents/a11y-media-player/a11y-media-player.js\");\n    afterNextRender(this, function() {\n      this.HAXWiring = new HAXWiring();\n      this.HAXWiring.setup(VideoPlayer.haxProperties, VideoPlayer.tag, this);\n    });\n  }\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"video-player\";\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * Get Youtube ID\n   */\n  _computeYoutubeId(source, sourceType) {\n    if (source !== undefined && sourceType === \"youtube\") {\n      return this._computeSRC(source).replace(\n        /(https?:\\/\\/)?(www.)?youtube(-nocookie)?.com\\/embed\\//,\n        \"\"\n      );\n    }\n    return false;\n  }\n\n  /**\n   * Determine if it is youtube\n   */\n  _computeYoutube(sourceType) {\n    return sourceType === \"youtube\";\n  }\n\n  /**\n   * Determine if it is compatible with a11y-media-player\n   */\n  _computeA11yMedia(sourceType, sandboxed) {\n    if (!sandboxed && (sourceType == \"youtube\" || sourceType == \"local\")) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Compute iframed status\n   */\n  _computeIframed(sourceData, sandboxed) {\n    // make sure we take into account sandboxing as well\n    // so that we can manage the state effectively\n    if (\n      sourceData.length > 0 &&\n      sourceData[0] !== undefined &&\n      window.MediaBehaviors.Video._sourceIsIframe(sourceData[0].src) &&\n      !sandboxed\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Gets cleaned track list\n   */\n  _getTrackData(track, tracks) {\n    let temp =\n      typeof tracks === \"string\" ? JSON.parse(tracks).slice() : tracks.slice();\n    if (track !== undefined && track !== null)\n      temp.push({\n        src: track,\n        srclang: this.lang,\n        label: this.lang === \"en\" ? \"English\" : this.lang,\n        kind: \"subtitles\"\n      });\n    return temp;\n  }\n\n  /**\n   * Gets source and added to sources list\n   */\n  _getSourceData(source, sources, trackData) {\n    if (typeof sources === \"string\") sources = JSON.parse(sources);\n    let root = this,\n      temp = sources.slice();\n    for (let i = 0; i < temp.length; i++) {\n      temp[i].type =\n        temp[i].type !== undefined && temp[i].type !== null\n          ? temp[i].type\n          : this._computeMediaType(temp[i].src);\n      temp[i].src = this._computeSRC(temp[i].src);\n    }\n    if (source !== null) {\n      let src = this._computeSRC(source);\n      this.sourceType = this._computeSourceType(src);\n      if (this.sourceType !== \"youtube\") {\n        temp.unshift({ src: src, type: this._computeMediaType(src) });\n      }\n    }\n    this.__standAlone =\n      trackData === undefined || trackData === null || trackData.length < 1;\n    return temp;\n  }\n\n  /**\n   * Compute media type based on source, i.e. 'audio/wav' for '.wav'\n   */\n  _computeMediaType(source) {\n    let root = this,\n      audio = [\"aac\", \"flac\", \"mp3\", \"oga\", \"wav\"],\n      video = [\"mov\", \"mp4\", \"ogv\", \"webm\"],\n      type = \"\",\n      findType = function(text, data) {\n        for (let i = 0; i < data.length; i++) {\n          if (\n            type === \"\" &&\n            source !== undefined &&\n            source !== null &&\n            source.toLowerCase().indexOf(\".\" + data[i]) > -1\n          ) {\n            if (text === \"audio\") root.audioOnly = true;\n            type = text + \"/\" + data[i];\n          }\n        }\n      };\n    findType(\"audio\", audio);\n    findType(\"video\", video);\n    return type;\n  }\n\n  /**\n   * Compute sandboxed status\n   */\n  _computeSandboxed(sourceData) {\n    // we have something that would require an iframe\n    // see if we have a local system that would want to sandbox instead\n    if (\n      sourceData.length > 0 &&\n      sourceData[0] !== undefined &&\n      window.MediaBehaviors.Video._sourceIsIframe(sourceData[0].src)\n    ) {\n      // fake the creation of a webview element to see if it's valid\n      // or not.\n      let test = document.createElement(\"webview\");\n      // if this function exists it means that our deploy target\n      // is in a sandboxed environment and is not able to run iframe\n      // content with any real stability. This is beyond edge case but\n      // as this is an incredibly useful tag we want to make sure it\n      // can mutate to work in chromium and android environments\n      // which support such sandboxing\n      if (typeof test.reload === \"function\") {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Compute video type based on source\n   */\n  _computeSourceType(sourceData) {\n    let root = this;\n    if (\n      sourceData.length > 0 &&\n      sourceData[0] !== undefined &&\n      typeof sourceData[0].src !== typeof undefined\n    ) {\n      return window.MediaBehaviors.Video.getVideoType(sourceData[0].src);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Compute src from type / source combo.\n   * Type is set by source so this ensures a waterfall\n   * of valid values.\n   */\n  _computeSRC(source) {\n    if (source !== null && typeof source !== undefined) {\n      let type =\n        this.sourceType !== undefined\n          ? this.sourceType\n          : window.MediaBehaviors.Video.getVideoType(source);\n      // ensure that this is a valid url / cleaned up a bit\n      source = window.MediaBehaviors.Video.cleanVideoSource(source, type);\n      if (type == \"vimeo\") {\n        if (this.vimeoTitle) {\n          source += \"?title=1\";\n        } else {\n          source += \"?title=0\";\n        }\n        if (this.vimeoByline) {\n          source += \"&byline=1\";\n        } else {\n          source += \"&byline=0\";\n        }\n        if (this.vimeoPortrait) {\n          source += \"&portrait=1\";\n        } else {\n          source += \"&portrait=0\";\n        }\n        if (typeof this.videoColor !== typeof undefined) {\n          source += \"&color=\" + this.videoColor;\n        }\n      } else if (type == \"dailymotion\") {\n        source += \"&ui-start-screen-info=false\";\n        source += \"&ui-logo=false\";\n        source += \"&sharing-enable=false\";\n        source += \"&endscreen-enable=false\";\n        if (typeof this.videoColor !== typeof undefined) {\n          source += \"&ui-highlight=\" + this.videoColor;\n        }\n      }\n    }\n    return source;\n  }\n}\nwindow.customElements.define(VideoPlayer.tag, VideoPlayer);\nexport { VideoPlayer };\n"],"names":["VideoPlayer","afterNextRender","HAXWiring","setup","haxProperties","tag","this","MediaBehaviorsVideo","A11yBehaviors","SchemaBehaviors","PolymerElement","html","source","sourceType","undefined","_computeSRC","replace","sandboxed","sourceData","length","window","MediaBehaviors","Video","_sourceIsIframe","src","track","tracks","temp","JSON","parse","slice","push","srclang","lang","label","kind","sources","trackData","i","type","_computeMediaType","_computeSourceType","unshift","__standAlone","root","findType","text","data","toLowerCase","indexOf","audioOnly","document","createElement","reload","_typeof","getVideoType","cleanVideoSource","vimeoTitle","vimeoByline","vimeoPortrait","videoColor","customElements","define"],"mappings":"u0JA+CMA,uOAkhBK,4DACPC,uBAAsB,gBACfC,UAAY,IAAIA,iBAChBA,UAAUC,MAAMH,EAAYI,cAAeJ,EAAYK,IAAKC,sPArhB7CC,sBACxBC,gBAAcC,kBAAgBC,qEAKrBC,wDAuFA,WACG,eACG,iBACE,QACR,OACE,2BACM,kFACP,8BACC,aACC,CAAC,QAAS,iBACT,CACT,MACU,eACE,eACD,kBACE,sBACI,gBACN,sBAGL,QACI,8BAGF,OACD,CACP,UACc,oBACH,2BACM,sDACA,mBACP,4BAEV,WACe,aACJ,yBACM,gDACA,eACP,4BAGC,CACX,UACc,eACH,qBACM,sCACA,iBACP,iBACI,iBACM,OAEpB,UACc,cACH,8BACM,6CACA,iBACP,iBACI,iBACM,OAEpB,UACc,qBACH,8BACM,8DACA,iBACP,iBACI,iBACM,OAEpB,UACc,mBACH,oBACM,2CACA,iBACP,2BACI,iBACM,QAEpB,UACc,oBACH,2BACM,sDACA,mBACP,4BAEV,WACe,aACJ,yBACM,gDACA,eACP,2BAGA,CACV,UACc,uBACH,wCACM,oDACA,WAEjB,UACc,uBACH,8BACM,sDACA,WAEjB,UACc,gBACH,iCACM,2FACA,iBACJ,SACE,6BACC,mCACJ,2BAGZ,UACc,qBACH,4BACM,qHACA,iBACJ,MACD,kBACI,uBACC,0BACE,6BACC,iBAGpB,UACc,gBACH,4BACM,oCACA,mBACD,CACZ,UACc,YACH,qBACM,sCACA,aAEjB,UACc,aACH,mBACM,8BACA,iBACJ,aACI,yBACC,yBACD,wBACA,wBACA,wBACA,wBACA,wBACA,yBACC,0BACA,iBAKtB,UACc,eACH,yBACM,+DACA,mBACD,CACZ,UACc,aACH,mBACM,4BACA,iBACJ,WACI,cAQjB,UACc,cACH,oBACM,8EACA,aAEjB,UACc,YACH,qBACM,kCACA,aAEjB,UACc,gBACH,yGACM,oBACA,2DAWhB,WAII,MACH,iBACC,eAUI,MACL,eACC,yBACa,eAKT,MACL,iBACC,sBACa,QAKhB,MACE,iBACC,sBACa,kBAKN,MACR,iBACC,sBAKW,MAC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"}