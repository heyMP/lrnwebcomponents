{"version":3,"file":"simple-login.umd.js","sources":["simple-login.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/paper-input/paper-input.js\";\nimport \"@polymer/paper-progress/paper-progress.js\";\nimport \"@polymer/paper-styles/shadow.js\";\nimport \"@polymer/paper-styles/typography.js\";\nimport \"@polymer/paper-styles/color.js\";\n/**\n * `simple-login`\n * `a simple login form`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass SimpleLogin extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n#loginform {\n    width: 450px;\n    height: 450px;\n    background: var(--login-form-background-color, white);\n    @apply --shadow-elevation-12dp;\n    @apply --login-form;\n}\n\n#loginformcontent {\n    padding: 48px;\n}\n\n#loginformcontent>* {\n    margin-top: 8px;\n    margin-bottom: 8px;\n}\n\n#loginbtn,\n#buttons ::slotted(paper-button) {\n    margin-top: 24px;\n    background-color: var(--login-btn-background-color, var(--paper-indigo-500));\n    color: var(--login-btn-text-color, white);\n    --paper-button-raised-keyboard-focus: {\n        background-color: var(--login-btn-raised-background-color, var(--paper-pink-a200)) !important;\n        color: var(--login-btn-text-color, white) !important;\n    };\n    @apply --login-btn;\n}\n\n#loginbtn[disabled] {\n    background-color: var(--login-btn-disabled-background-color, var(--paper-indigo-100));\n}\n\nh1 {\n    @apply --paper-font-display1;\n    margin: 0;\n    @apply --login-title;\n}\n\nh2 {\n    @apply --paper-font-title;\n    margin: 0;\n    @apply --login-subtitle;\n}\n\npaper-progress {\n    width: 100%;\n}\n\n#errormsg {\n    margin-top: 16px;\n    color: var(--login-error-label-color, var(--error-color));\n    @apply --paper-font-menu;\n}</style>\n<div id=\"loginform\">\n  <paper-progress disabled=\"[[!loading]]\" indeterminate></paper-progress>\n  <div id=\"loginformcontent\">\n    <h1>[[title]]</h1>\n    <h2>[[subtitle]]</h2>\n    <div id=\"errormsg\">[[errorMsg]]</div>\n    <slot></slot>\n    <paper-input id=\"userinput\" value=\"{{username}}\" disabled=\"[[loading]]\" type=\"text\" label=\"[[userInputLabel]]\"\n      required error-message=\"[[userInputErrMsg]]\"></paper-input>\n    <paper-input id=\"passinput\" value=\"{{password}}\" disabled=\"[[loading]]\" type=\"password\"\n      label=\"[[passwordInputLabel]]\" required error-message=\"[[passwordInputErrMsg]]\"></paper-input>\n    <paper-button on-click=\"_login\" disabled=\"[[loading]]\" id=\"loginbtn\" raised class=\"indigo\">[[loginBtnText]]\n    </paper-button>\n    <span id=\"buttons\"><slot name=\"buttons\"></slot></span>\n  </div>\n</div>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  /**\n   * Title of the loginscreen\n   */\n  \"title\": String,\n  /**\n   * Subtitle of the loginscreen\n   */\n  \"subtitle\": String,\n  /**\n   * Error message to show (example : \"Invalid username\")\n   */\n  \"errorMsg\": String,\n  /**\n   * Content of the username field\n   */\n  \"username\": {\n    \"type\": String,\n    \"notify\": true\n  },\n  /**\n   * Content of the password field\n   */\n  \"password\": {\n    \"type\": String,\n    \"notify\": true\n  },\n  /**\n   * When true, all fields are disabled and the progress bar is visible\n   */\n  \"loading\": {\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * Placeholder of the username field\n   */\n  \"userInputLabel\": {\n    \"type\": String,\n    \"value\": \"Username\"\n  },\n  /**\n   * Error message of the username field\n   */\n  \"userInputErrMsg\": {\n    \"type\": String,\n    \"value\": \"Username required\"\n  },\n  /**\n   * Placeholder of the password field\n   */\n  \"passwordInputLabel\": {\n    \"type\": String,\n    \"value\": \"Password\"\n  },\n  /**\n   * Error message of the password field\n   */\n  \"passwordInputErrMsg\": {\n    \"type\": String,\n    \"value\": \"Password required\"\n  },\n  /**\n   * Login button label\n   */\n  \"loginBtnText\": {\n    \"type\": String,\n    \"value\": \"Login\"\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"simple-login\";\n  }\n  /**\n   * constructor\n   */\n  constructor() {\n    super();\n    afterNextRender(this, function() {\n      this.shadowRoot\n        .querySelector(\"#loginform\")\n        .addEventListener(\"keypress\", this._keyPressLogin.bind(this));\n    });\n  }\n  /**\n   * life cycle\n   */\n  disconnectedCallback() {\n    this.shadowRoot\n      .querySelector(\"#loginform\")\n      .removeEventListener(\"keypress\", this._keyPressLogin.bind(this));\n    super.disconnectedCallback();\n  }\n  /**\n   * Key pressed for the login\n   */\n  _keyPressLogin(e) {\n    if (e.keyCode == 13) {\n      //Enter\n      this._login();\n      return false;\n    }\n  }\n  /**\n   * Login\n   */\n  _login() {\n    if (\n      this.shadowRoot.querySelector(\"#userinput\").validate() &&\n      this.shadowRoot.querySelector(\"#passinput\").validate()\n    ) {\n      this.dispatchEvent(\n        new CustomEvent(\"simple-login-login\", {\n          cancelable: true,\n          bubbles: true,\n          composed: true,\n          detail: {\n            u: this.shadowRoot.querySelector(\"#userinput\").value,\n            p: this.shadowRoot.querySelector(\"#passinput\").value\n          }\n        })\n      );\n    }\n  }\n}\nwindow.customElements.define(SimpleLogin.tag, SimpleLogin);\nexport { SimpleLogin };\n"],"names":["SimpleLogin","afterNextRender","shadowRoot","querySelector","addEventListener","this","_keyPressLogin","bind","PolymerElement","html","String","Boolean","removeEventListener","e","keyCode","_login","validate","dispatchEvent","CustomEvent","cancelable","bubbles","composed","detail","u","value","p","window","customElements","define","tag"],"mappings":"ygIAuBMA,gOA4KFC,uBAAsB,gBACfC,WACFC,cAAc,cACdC,iBAAiB,WAAYC,KAAKC,eAAeC,KAAKF,uPA/KrCG,kEAIfC,qDAmFA,OAIAC,gBAIGA,gBAIAA,gBAIA,MACFA,eACE,YAKA,MACFA,eACE,WAKD,MACDC,eACC,kBAKO,MACRD,aACC,4BAKQ,MACTA,aACC,wCAKW,MACZA,aACC,gCAKY,MACbA,aACC,kCAKK,MACNA,aACC,4CAWF,0EAiBFR,WACFC,cAAc,cACdS,oBAAoB,WAAYP,KAAKC,eAAeC,KAAKF,uGAM/CQ,MACI,IAAbA,EAAEC,oBAECC,UACE,mCAQPV,KAAKH,WAAWC,cAAc,cAAca,YAC5CX,KAAKH,WAAWC,cAAc,cAAca,iBAEvCC,cACH,IAAIC,YAAY,qBAAsB,CACpCC,YAAY,EACZC,SAAS,EACTC,UAAU,EACVC,OAAQ,CACNC,EAAGlB,KAAKH,WAAWC,cAAc,cAAcqB,MAC/CC,EAAGpB,KAAKH,WAAWC,cAAc,cAAcqB,mBAO3DE,OAAOC,eAAeC,OAAO5B,EAAY6B,IAAK7B"}