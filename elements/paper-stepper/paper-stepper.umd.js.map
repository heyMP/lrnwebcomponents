{"version":3,"file":"paper-stepper.umd.js","sources":["paper-stepper.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\n/**\n * `paper-stepper`\n * `steps to completion in a vertical display`\n * @demo demo/index.html\n */\nclass PaperStepper extends PolymerElement {\n  static get tag() {\n    return \"paper-stepper\";\n  }\n  static get properties() {\n    return {\n      selected: {\n        type: Number,\n        notify: true,\n        value: 0\n      },\n\n      /**\n       * True if a progress bar is shown instead of dots.\n       *\n       * Use a progress bar when there are many steps, or if there are\n       * steps that need to be inserted during the process (based o\n       * responses to earlier steps).\n       */\n      progressBar: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Text for the back button. Use this property to localize the element.\n       */\n      backLabel: {\n        type: String,\n        value: \"Back\"\n      },\n\n      /**\n       * Text for the back button. Use this property to localize the element.\n       */\n      nextLabel: {\n        type: String,\n        value: \"Next\"\n      },\n      /**\n       * Boolean for disabling the previous button.\n       */\n      disablePrevious: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Boolean for disabling the next button.\n       */\n      disableNext: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Hide back/next buttons\n       */\n      noButtons: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  // Private methods\n  _tapPrevious() {\n    this.$.selector.selectPrevious();\n  }\n  _tapNext() {\n    this.$.selector.selectNext();\n  }\n\n  /**\n   * Returns true if there is a step before the current and if\n   * _getDisablePrevious is set to false\n   */\n  _getDisablePrevious(selected, disablePrevious) {\n    return selected > 0 && !disablePrevious;\n  }\n\n  /**\n   * Returns true if there is a step after the current and if\n   * _getDisableNext is set to false\n   */\n  _getDisableNext(selected, nrItems, disableNext) {\n    return selected < nrItems - 1 && !disableNext;\n  }\n\n  /**\n   * Returns the current progress value\n   *\n   * Depends on items to ensure that `max` is already set. Otherwise\n   * `paper-progress` doesn't show the bar on startup.\n   * TODO: Remove parameter `items` once paper-progress can handle\n   * setting the property `value` before property `max`.\n   */\n  _computeProgressValue(selected, items) {\n    return selected + 1;\n  }\n\n  _onItemsChanged(e) {\n    this._items = this.$.selector.items;\n  }\n}\nwindow.customElements.define(PaperStepper.tag, PaperStepper);\nexport { PaperStepper };\n"],"names":["PaperStepper","PolymerElement","selected","type","Number","notify","value","progressBar","Boolean","backLabel","String","nextLabel","disablePrevious","disableNext","noButtons","$","selector","selectPrevious","selectNext","nrItems","items","e","_items","this","window","customElements","define","tag"],"mappings":"63BAUMA,gaAAqBC,yDAEhB,yDAGA,CACLC,SAAU,CACRC,KAAMC,OACNC,QAAQ,EACRC,MAAO,GAUTC,YAAa,CACXJ,KAAMK,QACNF,OAAO,GAMTG,UAAW,CACTN,KAAMO,OACNJ,MAAO,QAMTK,UAAW,CACTR,KAAMO,OACNJ,MAAO,QAKTM,gBAAiB,CACfT,KAAMK,QACNF,OAAO,GAKTO,YAAa,CACXV,KAAMK,QACNF,OAAO,GAMTQ,UAAW,CACTX,KAAMK,QACNF,OAAO,qDAONS,EAAEC,SAASC,yDAGXF,EAAEC,SAASE,yDAOEhB,EAAUU,UACrBV,EAAW,IAAMU,0CAOVV,EAAUiB,EAASN,UAC1BX,EAAWiB,EAAU,IAAMN,gDAWdX,EAAUkB,UACvBlB,EAAW,0CAGJmB,QACTC,OAASC,KAAKR,EAAEC,SAASI,2CAGlCI,OAAOC,eAAeC,OAAO1B,EAAa2B,IAAK3B"}