{"version":3,"file":"citation-element.umd.js","sources":["citation-element.umd.js"],"sourcesContent":["import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport { SchemaBehaviors } from \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\nimport { licenseList } from \"@lrnwebcomponents/license-element/license-element.js\";\n/**\n * `citation-element`\n * An element dedicated to presenting and managing a correct citation on the web\n * both visually as well as semantically with simple inputs.\n * @demo demo/index.html\n */\nclass CitationElement extends SchemaBehaviors(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          color: var(\"--license-text-color\");\n        }\n        :host([display-method=\"footnote\"]) {\n          visibility: hidden;\n          opacity: 0;\n        }\n        :host([display-method=\"popup\"]) {\n          display: block;\n        }\n        .license-link {\n          font-size: 16px;\n          line-height: 16px;\n          font-style: italic;\n        }\n        .citation-date {\n          font-size: 16px;\n          line-height: 16px;\n          font-style: italic;\n        }\n        .license-link img {\n          height: 16px;\n          min-width: 16px;\n          margin-right: 8px;\n        }\n      </style>\n      <meta\n        about\\$=\"[[relatedResource]]\"\n        property=\"cc:attributionUrl\"\n        content\\$=\"[[source]]\"\n      />\n      <meta\n        about\\$=\"[[relatedResource]]\"\n        property=\"cc:attributionName\"\n        typeof=\"oer:Text\"\n        content\\$=\"[[title]]\"\n      />\n      <meta\n        rel=\"cc:license\"\n        href\\$=\"[[licenseLink]]\"\n        content\\$=\"License: [[licenseName]]\"\n      />\n      <cite\n        ><a target=\"_blank\" href=\"[[source]]\">[[title]]</a> by [[creator]],\n        licensed under\n        <a class=\"license-link\" target=\"_blank\" href=\"[[licenseLink]]\"\n          ><img\n            alt=\"[[licenseName]] graphic\"\n            src=\"[[licenseImage]]\"\n            hidden&=\"[[!licenseImage]]\"\n          />[[licenseName]]</a\n        >. Accessed <span class=\"citation-date\">[[date]]</span>.</cite\n      >\n    `;\n  }\n\n  static get tag() {\n    return \"citation-element\";\n  }\n\n  static get properties() {\n    let props = {\n      /**\n       * Title of the work.\n       */\n      title: {\n        type: String\n      },\n      /**\n       * License scope\n       */\n      scope: {\n        type: String,\n        value: \"sibling\",\n        observer: \"_scopeChanged\"\n      },\n      /**\n       * How to present the citation on the interface.\n       * Can be popup, footnote, or default behavior which is visible\n       */\n      displayMethod: {\n        type: String,\n        reflectToAttribute: true\n      },\n      /**\n       * Person or group that owns / created the work.\n       */\n      creator: {\n        type: String\n      },\n      /**\n       * Original Source of the work in question\n       */\n      source: {\n        type: String\n      },\n      /**\n       * Date the work was accessed.\n       */\n      date: {\n        type: String\n      },\n      /**\n       * License name, calculated or supplied by the end user if we don't have them.\n       */\n      licenseName: {\n        type: String\n      },\n      /**\n       * License link for more details\n       */\n      licenseLink: {\n        type: String\n      },\n      /**\n       * License short hand. Options cc0,\n       */\n      license: {\n        type: String,\n        observer: \"_licenseUpdated\"\n      },\n      /**\n       * About link for semantic meaning\n       */\n      _aboutLink: {\n        type: Object,\n        computed: \"_generateAboutLink(relatedResource, licenseLink)\"\n      },\n      /**\n       * License link object for semantic meaning\n       */\n      _licenseLink: {\n        type: Object,\n        computed: \"_generateLicenseLink(source)\"\n      }\n    };\n    if (super.properties) {\n      props = Object.assign(props, super.properties);\n    }\n    return props;\n  }\n  /**\n   * Generate a license link whenever we have a source\n   * @param {href} source\n   */\n  _generateLicenseLink(source) {\n    // remove existing if this is moving around\n    if (this._licenseLink) {\n      document.head.removeChild(this._licenseLink);\n    }\n    let link = document.createElement(\"link\");\n    link.setAttribute(\"typeof\", \"resource\");\n    link.setAttribute(\"rel\", \"license\");\n    link.setAttribute(\"src\", source);\n\n    document.head.appendChild(link);\n    return link;\n  }\n  /**\n   * Generate an about link whenever we have a related resource and license link\n   * @param {uuid / id} relatedResource\n   * @param {href} licenseLink\n   */\n  _generateAboutLink(relatedResource, licenseLink) {\n    // remove existing if this is moving around\n    if (this._aboutLink) {\n      document.head.removeChild(this._aboutLink);\n    }\n    let link = document.createElement(\"link\");\n    link.setAttribute(\"about\", relatedResource);\n    link.setAttribute(\"property\", \"cc:license\");\n    link.setAttribute(\"content\", licenseLink);\n    document.head.appendChild(link);\n    return link;\n  }\n  /**\n   * Notice scope change.\n   */\n  _scopeChanged(newValue, oldValue) {\n    // make sure we actually have a sibling first\n    if (newValue === \"sibling\" && dom(this).previousElementSibling !== null) {\n      // find the sibling element in the DOM and associate to it's resource ID\n      // also generate a resource ID if it doesn't have one\n      if (dom(this).previousElementSibling.getAttribute(\"resource\")) {\n        this.relatedResource = dom(this).previousElementSibling.getAttribute(\n          \"resource\"\n        );\n      } else {\n        let uuid = this.generateResourceID();\n        this.relatedResource = uuid;\n        dom(this).previousElementSibling.setAttribute(\"resource\", uuid);\n      }\n      // set prefix on the main element itself\n      dom(this).previousElementSibling.setAttribute(\n        \"prefix\",\n        this.getAttribute(\"prefix\")\n      );\n    } else if (newValue === \"parent\") {\n      // find the parent and associate to it's resource ID, if it doesn't have one\n      // then let's make one dynamically\n      if (dom(this).parentNode.getAttribute(\"resource\")) {\n        this.relatedResource = dom(this).parentNode.getAttribute(\"resource\");\n      } else {\n        let uuid = this.generateResourceID();\n        this.relatedResource = uuid;\n        dom(this).parentNode.setAttribute(\"resource\", uuid);\n      }\n      // set prefix on the main element itself\n      dom(this).parentNode.setAttribute(\"prefix\", this.getAttribute(\"prefix\"));\n    }\n  }\n\n  /**\n   * Attached to the DOM, now fire.\n   */\n  static get haxProperties() {\n    return {\n      canScale: false,\n      canPosition: false,\n      canEditSource: false,\n      gizmo: {\n        title: \"Citation\",\n        description: \"A basic citation element with 3 presentation modes\",\n        icon: \"editor:title\",\n        color: \"grey\",\n        groups: [\"Content\", \"Text\", \"Copyright\"],\n        handles: [\n          {\n            type: \"citation\",\n            source: \"source\",\n            title: \"title\",\n            author: \"creator\",\n            license: \"license\",\n            accessDate: \"date\"\n          }\n        ],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"The title of the work being cited.\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          }\n        ],\n        configure: [\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"The title of the work being cited.\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"source\",\n            title: \"Source link\",\n            description: \"The source url for the element this is citing.\",\n            inputMethod: \"textfield\",\n            icon: \"link\",\n            validationType: \"url\"\n          },\n          {\n            property: \"date\",\n            title: \"Date accessed\",\n            description: \"The date this was accessed.\",\n            inputMethod: \"textfield\",\n            icon: \"link\"\n          },\n          {\n            property: \"scope\",\n            title: \"Scope\",\n            description: \"Scope of what to cite.\",\n            inputMethod: \"select\",\n            options: {\n              sibling: \"Sibling element\",\n              parent: \"Parent element\"\n            },\n            icon: \"code\"\n          },\n          {\n            property: \"license\",\n            title: \"License\",\n            description: \"The source url for the element this is citing.\",\n            inputMethod: \"select\",\n            options: new licenseList(\"select\"),\n            icon: \"link\"\n          },\n          {\n            property: \"creator\",\n            title: \"Creator\",\n            description: \"Who made or owns this.\",\n            inputMethod: \"textfield\",\n            icon: \"link\"\n          }\n        ],\n        advanced: []\n      }\n    };\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function() {\n      this.HAXWiring = new HAXWiring();\n      this.HAXWiring.setup(\n        CitationElement.haxProperties,\n        CitationElement.tag,\n        this\n      );\n    });\n  }\n\n  /**\n   * License was updated, time to update license name and link.\n   */\n  _licenseUpdated(newValue, oldValue) {\n    if (typeof newValue !== typeof undefined) {\n      var list = new licenseList();\n      if (typeof list[newValue] !== typeof undefined) {\n        this.licenseName = list[newValue].name;\n        this.licenseLink = list[newValue].link;\n        this.licenseImage = list[newValue].image;\n      }\n    }\n  }\n}\nwindow.customElements.define(CitationElement.tag, CitationElement);\nexport { CitationElement };\n"],"names":["CitationElement","SchemaBehaviors","PolymerElement","html","props","title","type","String","scope","value","observer","displayMethod","reflectToAttribute","creator","source","date","licenseName","licenseLink","license","_aboutLink","Object","computed","_licenseLink","assign","canScale","canPosition","canEditSource","gizmo","description","icon","color","groups","handles","author","accessDate","meta","settings","quick","property","inputMethod","configure","validationType","options","sibling","parent","licenseList","advanced","this","document","head","removeChild","link","createElement","setAttribute","appendChild","relatedResource","newValue","oldValue","dom","previousElementSibling","getAttribute","uuid","generateResourceID","parentNode","afterNextRender","HAXWiring","setup","haxProperties","tag","_typeof","list","name","licenseImage","image","window","customElements","define"],"mappings":"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"}