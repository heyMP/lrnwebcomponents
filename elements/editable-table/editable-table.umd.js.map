{"version":3,"file":"editable-table.umd.js","sources":["lib/editable-table-behaviors.js","lib/editable-table-editor-insdel.js","lib/editable-table-editor-rowcol.js","lib/editable-table-editor-toggle.js","lib/editable-table-editor-cell.js","lib/editable-table-iconset.js","lib/editable-table-styles.js","lib/editable-table-editor.js","lib/editable-table-sort.js","lib/editable-table-filter.js","lib/editable-table-display.js","editable-table.umd.js"],"sourcesContent":["/**\n * `editable-table-behaviors`\n * `A set of common behaviors for editable-table web components.`\n */\nexport const displayBehaviors = function(SuperClass) {\n  return class extends SuperClass {\n    static get properties() {\n      let props = {\n        /**\n         * Add borders to table and table cells.\n         */\n        bordered: {\n          type: Boolean,\n          value: false\n        },\n        /**\n         * a table caption\n         */\n        caption: {\n          type: String,\n          value: null\n        },\n        /**\n         * Display the first row as a column header.\n         */\n        columnHeader: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true\n        },\n        /**\n         * Condense height of table cells.\n         */\n        condensed: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true\n        },\n        /**\n         * raw data\n         */\n        data: {\n          type: Array,\n          value: []\n        },\n        /**\n         * Enable filtering by cell value.\n         */\n        filter: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true\n        },\n        /**\n         * Display the last row as a column footer.\n         */\n        footer: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true\n        },\n        /**\n         * Display the first column as a row header.\n         */\n        rowHeader: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true\n        },\n        /**\n         * Enable sorting by column header.\n         */\n        sort: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true\n        },\n        /**\n         * When table is wider than screens, users will scroll across the table instead of seclecting a column to display.\n         */\n        scroll: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true\n        },\n        /**\n         * Add alternating row striping.\n         */\n        striped: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true\n        },\n        /**\n         * a table summary\n         */\n        summary: {\n          type: String,\n          value: null\n        }\n      };\n      if (super.properties) {\n        props = Object.assign(props, super.properties);\n      }\n      return props;\n    }\n    /**\n     * Return table data\n     */\n    getData() {\n      let data = {\n        accentColor: this.accentColor,\n        bordered: !this.hideBordered ? this.bordered : null,\n        caption: this.caption,\n        columnHeader: this.columnHeader,\n        condensed: !this.hideCondensed ? this.condensed : null,\n        dark: !this.hideDark ? this.dark : null,\n        data: this.data,\n        filter: !this.hideFilter ? this.filter : null,\n        footer: this.footer,\n        rowHeader: this.rowHeader,\n        scroll: !this.hideScroll ? this.scroll : null,\n        sort: !this.hideSort ? this.sort : null,\n        striped: !this.hideStriped ? this.striped : null,\n        summary: this.summary\n      };\n      return data;\n    }\n  };\n};\n\nexport const cellBehaviors = function(SuperClass) {\n  return class extends SuperClass {\n    /**\n     * Get the row or column label\n     */\n    _getLabel(index, type) {\n      if (type === \"Column\") {\n        let numerals = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\"),\n          results = this._getLetter(index)\n            .split(\"-\")\n            .reverse(),\n          label = \"\";\n        for (let i = 0; i < results.length; i++) {\n          if (results[i] !== \"\") label += numerals[results[i]];\n        }\n        return label;\n      } else {\n        return index + 1;\n      }\n    }\n    /**\n     * Get the row or column label\n     */\n    _getLetter(index) {\n      let place = Math.floor(index / 26),\n        multiplier = 26 * place,\n        remainder = index - multiplier,\n        letters = \"\";\n      letters += remainder + \"-\";\n      if (place > 0 && place < 26) {\n        letters += place - 1 + \"-\";\n      } else if (place >= 26) {\n        letters += this._getLetter(place - 1);\n      }\n      return letters;\n    }\n  };\n};\nexport const editBehaviors = function(SuperClass) {\n  return class extends SuperClass {\n    static get properties() {\n      let props = {\n        /**\n         * Hide the borders table styles menu option\n         */\n        hideBordered: {\n          type: Boolean,\n          value: false\n        },\n        /**\n         * Hide the condensed table styles menu option\n         */\n        hideCondensed: {\n          type: Boolean,\n          value: false\n        },\n        /**\n         * Hide the accent color styles menu option.\n         */\n        hideAccentColor: {\n          type: Boolean,\n          value: false\n        },\n        /**\n         * Hide the dark theme styles menu option.\n         */\n        hideDarkTheme: {\n          type: Boolean,\n          value: false\n        },\n        /**\n         * Hide the filtering option.\n         */\n        hideFilter: {\n          type: Boolean,\n          value: false\n        },\n        /**\n         * Hide the sorting option.\n         */\n        hideSort: {\n          type: Boolean,\n          value: false\n        },\n        /**\n         * Hide the scroll table styles menu option\n         */\n        hideScroll: {\n          type: Boolean,\n          value: false\n        },\n        /**\n         * Hide the striped table styles menu option\n         */\n        hideStriped: {\n          type: Boolean,\n          value: false\n        }\n      };\n      if (super.properties) {\n        props = Object.assign(props, super.properties);\n      }\n      return props;\n    }\n  };\n};\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport \"@polymer/paper-button/paper-button.js\";\n/**\n`editable-table-editor-insdel`\n\nA button in the editable-table-editor-rowcol menu \n(editable-table-editor-rowcol.html) that inserts or \ndeletes a row or column .\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n<editable-table-editor-insdel \n  action=\"insert\"               //The action this button performs, as in \"insert\" or \"delete\"  \n  before                        //If the action is insert, should row or column be inserted before the index? Default is false (after).\n  index=\"1\"                     //The index of the row or column where this button is located\n  type=\"Row\">                   //The type of menu, as in \"Row\" or \"Column\"\n  Insert Row Before             //The text of the button\n</editable-table-editor-insdel>\n\n*/\nclass EditableTableEditorInsdel extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n        :host paper-button {\n          display: block;\n          text-transform: none;\n          text-align: left;\n        }\n      </style>\n      <paper-button><slot></slot></paper-button>\n    `;\n  }\n\n  static get tag() {\n    return \"editable-table-editor-insdel\";\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function() {\n      this.addEventListener(\"click\", this._onTap.bind(this));\n    });\n  }\n  disconnectedCallback() {\n    this.removeEventListener(\"click\", this._onTap.bind(this));\n    super.disconnectedCallback();\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The action of the menu item\n       */\n      action: {\n        type: String,\n        value: null\n      },\n      /**\n       * The index of the row or column\n       */\n      index: {\n        type: Number,\n        value: null,\n        reflectToAttribute: true\n      },\n      /**\n       * If insert, does it insert before? Default is insert after.\n       */\n      before: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Is it row or column?\n       */\n      type: {\n        type: String,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Handle item tap\n   */\n  _onTap(e) {\n    let action = this.action,\n      type = this.type,\n      before = this.before,\n      index = this.index,\n      event = action + \"-\" + type.toLowerCase();\n    if (action === \"insert\" && before && type === \"Row\") {\n      index--;\n    } else if (action === \"insert\" && !before && type !== \"Row\") {\n      index++;\n    }\n    this.dispatchEvent(\n      new CustomEvent(event, {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: index\n      })\n    );\n  }\n}\nwindow.customElements.define(\n  EditableTableEditorInsdel.tag,\n  EditableTableEditorInsdel\n);\nexport { EditableTableEditorInsdel };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport \"@polymer/paper-menu-button/paper-menu-button.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/paper-listbox/paper-listbox.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"./editable-table-editor-insdel.js\";\nimport { cellBehaviors } from \"./editable-table-behaviors.js\";\n/**\n`editable-table-editor-rowcol`\n\nA header label and menu for inserting and deleting a row or a column \nof the editable-table interface (editable-table.html).\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n\n<editable-table-editor-rowcol \n  condensed                     //Decrease the padding to match the rest of the table cells when table is condensed? Default is false.         \n  index=\"1\"                     //The index of the row or column\n  type=\"Column\">                //The type of menu, as in \"Row\" or \"Column\"\n</editable-table-editor-rowcol>\n\n*/\nclass EditableTableEditorRowcol extends cellBehaviors(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n        :host #label {\n          margin: 0;\n          padding: 0;\n        }\n        :host paper-menu-button {\n          margin: 0;\n          padding: 0;\n          width: 100%;\n        }\n        :host paper-button {\n          margin: 0;\n          display: block;\n          background-color: transparent;\n        }\n        :host([condensed]) paper-button {\n          padding-top: 0;\n          padding-bottom: 0;\n        }\n      </style>\n      <paper-menu-button id=\"menu\">\n        <paper-button slot=\"dropdown-trigger\">\n          <span id=\"label\">[[label]]</span>\n          <iron-icon icon=\"arrow-drop-down\"></iron-icon>\n        </paper-button>\n        <paper-listbox slot=\"dropdown-content\" label\\$=\"[[label]]\">\n          <editable-table-editor-insdel\n            action=\"insert\"\n            index\\$=\"[[index]]\"\n            type\\$=\"[[type]]\"\n            before=\"true\"\n            >Insert [[type]] Before</editable-table-editor-insdel\n          >\n          <editable-table-editor-insdel\n            action=\"insert\"\n            index\\$=\"[[index]]\"\n            type\\$=\"[[type]]\"\n            >Insert [[type]] After</editable-table-editor-insdel\n          >\n          <editable-table-editor-insdel\n            action=\"delete\"\n            index\\$=\"[[index]]\"\n            type\\$=\"[[type]]\"\n            >Delete [[type]]</editable-table-editor-insdel\n          >\n        </paper-listbox>\n      </paper-menu-button>\n    `;\n  }\n  static get tag() {\n    return \"editable-table-editor-rowcol\";\n  }\n  static get properties() {\n    return {\n      /**\n       * The index of the row or column\n       */\n      index: {\n        type: Number,\n        value: null\n      },\n      /**\n       * The index of the row or column\n       */\n      label: {\n        type: String,\n        computed: \"_getLabel(index,type)\"\n      },\n      /**\n       * Is it row or column?\n       */\n      type: {\n        type: String,\n        value: null\n      }\n    };\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function() {\n      this.addEventListener(\"insdel-tapped\", this._onTap.bind(this));\n    });\n  }\n  disconnectedCallback() {\n    this.removeEventListener(\"insdel-tapped\", this._onTap.bind(this));\n    super.disconnectedCallback();\n  }\n  _onTap(e) {}\n}\nwindow.customElements.define(\n  EditableTableEditorRowcol.tag,\n  EditableTableEditorRowcol\n);\nexport { EditableTableEditorRowcol };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\n/**\n`editable-table-editor-toggle`\n\nA toggle button for an property in the editable-table \ninterface (editable-table.html).\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n\n<editable-table-editor-toggle\n  hidden                          //Hide and disable this toggle? Default is false.\n  label=\"Condensed\"               //The label for the toggle button\n  prop=\"condensed\"                //The property controlled by this toggle\n  tooltip=\"Condense cell height.\" //A tooltip for this toggle.\n  value=\"true\">                   //The value of this toggle.\n</editable-table-editor-toggle>\n\n*/\nclass EditableTableEditorToggle extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n        :host .setting {\n          font-size: 95%;\n          padding: var(--editable-table-toggle-padding, 8px 0px);\n          justify-content: space-between;\n          width: 100%;\n        }\n        :host([disabled]) .setting-text {\n          opacity: 0.5;\n        }\n      </style>\n      <div class=\"setting\">\n        <div class=\"setting-control\">\n          <paper-toggle-button\n            id=\"button\"\n            checked\\$=\"[[value]]\"\n            disabled\\$=\"[[disabled]]\"\n            >[[label]]</paper-toggle-button\n          >\n          <paper-tooltip id=\"tooltip\" for=\"button\">[[tooltip]]</paper-tooltip>\n        </div>\n      </div>\n    `;\n  }\n\n  static get tag() {\n    return \"editable-table-editor-toggle\";\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function() {\n      this.addEventListener(\"change\", this._onChange.bind(this));\n    });\n  }\n  disconnectedCallback() {\n    this.removeEventListener(\"change\", this._onChange.bind(this));\n    super.disconnectedCallback();\n  }\n  static get properties() {\n    return {\n      /**\n       * is the toggle disabled\n       */\n      disabled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * label for menu setting\n       */\n      label: {\n        type: String,\n        value: null\n      },\n      /**\n       * the property to update\n       */\n      prop: {\n        type: String,\n        value: null\n      },\n      /**\n       * tool tip for menu setting\n       */\n      tooltip: {\n        type: String,\n        value: null\n      },\n      /**\n       * boolean value of menu setting\n       */\n      value: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  /**\n   * Set up event listener to fire when toggled\n   */\n  _onChange(e) {\n    if (e.srcElement === this.$.button)\n      this.dispatchEvent(\n        new CustomEvent(\"editable-table-setting-changed\", {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: {\n            prop: this.prop,\n            value: e.srcElement.checked\n          }\n        })\n      );\n  }\n}\nwindow.customElements.define(\n  EditableTableEditorToggle.tag,\n  EditableTableEditorToggle\n);\nexport { EditableTableEditorToggle };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport \"@polymer/iron-autogrow-textarea/iron-autogrow-textarea.js\";\nimport \"@polymer/iron-a11y-keys/iron-a11y-keys.js\";\nimport { cellBehaviors } from \"./editable-table-behaviors.js\";\n/**\n`editable-table-editor-cell`\n\nAn editable cell in the editable-table-editor \n(editable-table-editor.html) interface.\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n\n<editable-table-editor-cell \n  row=\"3\"                     //The index of the cell's row\n  column=\"2\"                  //The index of the cell's column\n  value=\"\">                   //The editable contents of the cell\n  <iron-icon class=\"sortable-icon\"icon=\"editable-table:sortable\" aria-hidden=\"true\"></iron-icon>\n  <iron-icon class=\"filter-icon\"icon=\"editable-table:filter-off\"></iron-icon>\n</editable-table-editor-cell>\n\n*/\nclass EditableTableEditorCell extends cellBehaviors(PolymerElement) {\n  static get template() {\n    return html`\n      <style is=\"custom-style\">\n        :host {\n          padding: 0;\n          margin: 0;\n          width: 100%;\n          min-width: unset;\n          display: inline-flex;\n          justify-content: space-between;\n          align-items: center;\n          align-content: stretch;\n        }\n        :host iron-autogrow-textarea {\n          width: 100%;\n          padding: 0;\n          border: none;\n          font-weight: unset;\n          resize: none;\n          -webkit-appearance: none;\n          -mozilla-appearance: none;\n          flex-grow: 1;\n          --iron-autogrow-textarea: {\n            padding: 0;\n            font-weight: unset;\n            border: none;\n            resize: none;\n            flex-direction: column;\n            -webkit-flex-direction: column;\n            -webkit-appearance: none;\n            -mozilla-appearance: none;\n          }\n        }\n        :host iron-autogrow-textarea > * {\n          padding: 0;\n          font-weight: unset;\n          border: none;\n          resize: none;\n          flex-direction: column;\n          -webkit-flex-direction: column;\n          -webkit-appearance: none;\n          -mozilla-appearance: none;\n        }\n      </style>\n      <iron-autogrow-textarea\n        autofocus=\"\"\n        id=\"cell\"\n        label\\$=\"[[label]]\"\n        value\\$=\"{{value}}\"\n      >\n      </iron-autogrow-textarea>\n      <div id=\"icons\"><slot></slot></div>\n      <iron-a11y-keys\n        id=\"down\"\n        keys=\"down\"\n        target\\$=\"[[cell]]\"\n        on-keys-pressed=\"_onCellBelow\"\n      >\n      </iron-a11y-keys>\n      <iron-a11y-keys\n        id=\"up\"\n        keys=\"up\"\n        target\\$=\"[[cell]]\"\n        on-keys-pressed=\"_onCellAbove\"\n      >\n      </iron-a11y-keys>\n      <iron-a11y-keys\n        id=\"left\"\n        keys=\"left\"\n        target\\$=\"[[cell]]\"\n        on-keys-pressed=\"_onCellLeft\"\n      >\n      </iron-a11y-keys>\n      <iron-a11y-keys\n        id=\"right\"\n        keys=\"right\"\n        target\\$=\"[[cell]]\"\n        on-keys-pressed=\"_onCellRight\"\n      >\n      </iron-a11y-keys>\n    `;\n  }\n\n  static get tag() {\n    return \"editable-table-editor-cell\";\n  }\n  static get properties() {\n    return {\n      /**\n       * cell row\n       */\n      row: {\n        type: Number,\n        value: null\n      },\n      /**\n       * cell column\n       */\n      column: {\n        type: Number,\n        value: null\n      },\n      /**\n       * cell label\n       */\n      label: {\n        type: String,\n        computed: \"_getCellLabel(column,row)\"\n      },\n      /**\n       * cell contents\n       */\n      value: {\n        type: String,\n        value: false,\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * set iron-a11y-keys target to this\n   */\n  ready() {\n    super.ready();\n    afterNextRender(this, function() {\n      this.addEventListener(\n        \"bind-value-changed\",\n        this._onValueChanged.bind(this)\n      );\n    });\n    this.cell = this.$.cell;\n  }\n  disconnectedCallback() {\n    this.removeEventListener(\n      \"bind-value-changed\",\n      this._onValueChanged.bind(this)\n    );\n    super.disconnectedCallback();\n  }\n\n  /**\n   * focus the on text area\n   */\n  focus() {\n    this.cell.textarea.focus();\n  }\n\n  /**\n   * if clicking in td but outside textarea, focus the text area\n   */\n  _getCellLabel(column, row) {\n    return (\n      \"Cell \" + this._getLabel(column, \"Column\") + this._getLabel(row, \"Row\")\n    );\n  }\n\n  /**\n   * if clicking in td but outside textarea, focus the text area\n   */\n  _onValueChanged(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"cell-value-changed\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: {\n          row: this.row,\n          column: this.column,\n          value: e.detail.value\n        }\n      })\n    );\n  }\n\n  /**\n   * FROM: https://stackoverflow.com/questions/2897155/get-cursor-position-in-characters-within-a-text-input-field\n   * Returns the caret (cursor) position of the specified text field.\n   * Return value range is 0-oField.value.length.\n   */\n  getCaretPosition() {\n    var caret = 0;\n    // IE Support\n    if (document.selection) {\n      // Set focus on the element\n      this.$.cell.focus();\n      // To get cursor position, get empty selection range\n      var sel = document.selection.createRange();\n      // Move selection start to 0 position\n      sel.moveStart(\"character\", -this.$.cell.value.length);\n      // The caret position is selection length\n      caret = sel.text.length;\n    } else if (\n      this.$.cell.shadowRoot.querySelector(\"textarea\").selectionStart ||\n      this.$.cell.shadowRoot.querySelector(\"textarea\").selectionStart == \"0\"\n    ) {\n      caret = this.$.cell.shadowRoot.querySelector(\"textarea\").selectionStart;\n    }\n    return caret;\n  }\n\n  /**\n   * make sure caret is in the correct position\n   */\n  setCaretPosition(start, end) {\n    let textarea = this.$.cell.shadowRoot.querySelector(\"textarea\");\n    textarea.focus();\n    if (textarea.createTextRange) {\n      let range = textarea.createTextRange();\n      range.collapse(true);\n      range.moveEnd(\"character\", end);\n      range.moveStart(\"character\", start);\n      range.select();\n    } else if (textarea.setSelectionRange) {\n      textarea.setSelectionRange(start, end);\n      textarea.selectionStart = start;\n      textarea.selectionEnd = end;\n    }\n  }\n\n  /**\n   * set focus to textarea\n   */\n  setFocus(start, end) {\n    this.$.cell.shadowRoot.querySelector(\"textarea\").focus();\n    if (start !== undefined && end !== undefined) {\n      this.setCaretPosition(start, end);\n    } else if (start !== undefined) {\n      this.setCaretPosition(start, start);\n    } else {\n      this.setCaretPosition(0, 0);\n    }\n  }\n\n  /**\n   * handle left\n   */\n  _onCellLeft(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"cell-move\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: { cell: this.parentNode, direction: \"left\" }\n      })\n    );\n  }\n\n  /**\n   * handle right\n   */\n  _onCellRight(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"cell-move\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: { cell: this.parentNode, direction: \"right\" }\n      })\n    );\n  }\n\n  /**\n   * handle up\n   */\n  _onCellAbove(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"cell-move\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: { cell: this.parentNode, direction: \"up\" }\n      })\n    );\n  }\n\n  /**\n   * handle down\n   */\n  _onCellBelow(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"cell-move\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: { cell: this.parentNode, direction: \"down\" }\n      })\n    );\n  }\n}\nwindow.customElements.define(\n  EditableTableEditorCell.tag,\n  EditableTableEditorCell\n);\nexport { EditableTableEditorCell };\n","import \"@polymer/iron-icon/iron-icon.js\";\nimport \"@polymer/iron-iconset-svg/iron-iconset-svg.js\";\nvar $_documentContainer = document.createElement(\"div\");\n$_documentContainer.setAttribute(\"style\", \"display: none;\");\n\n$_documentContainer.innerHTML = `<iron-iconset-svg name=\"editable-table\" size=\"24\">\n<svg><defs>\n<g id=\"filter\"><path d=\"M5,7l7,7,7-7Z\"></path><rect x=\"11\" y=\"13\" width=\"2\" height=\"4\"></rect></g>        \n<g id=\"filter-off\"><polygon points=\"19.26 6.95 10.7 6.95 14.98 11.23 19.26 6.95\"></polygon><polygon points=\"5 4.92 7.03 6.95 5.26 6.95 11.26 12.95 11.26 16.95 13.26 16.95 13.26 13.18 17.57 17.49 18.49 16.57 5.92 4 5 4.92\"></polygon></g>\n<g id=\"sortable\"><path d=\"M7,13l5,5l5-5H7z M17,11l-5-5l-5,5H17z\"></path></g>\n</defs></svg>\n</iron-iconset-svg>`;\n\ndocument.head.appendChild($_documentContainer);\n\n/**\n`editable-table-iconset`\n\nAn icon set of sort and filter icons specifically for editable-table.\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n\n<iron-icon icon=\"editable-table:sortable\"></iron-icon>\n\n*/\n","var $_documentContainer = document.createElement(\"div\");\n$_documentContainer.setAttribute(\"style\", \"display: none;\");\n\n$_documentContainer.innerHTML = `<dom-module id=\"editable-table-styles\">\n  <template>\n    <custom-style>\n      <style is=\"custom-style\">\n        :host, :host([accent-color=\"none\"]) {\n          display: block;\n          width: 100%;\n          max-width: 100%;\n          overflow-x: scroll;\n          margin: 15px 0;\n          --editable-table-light-weight: 200;\n          --editable-table-medium-weight: 400;\n          --editable-table-heavy-weight: 500;\n          --editable-table-color: var(--simple-colors-foreground3, #222);\n          --editable-table-bg-color: var(--simple-colors-background1, #fff);\n          --editable-table-border-color: var(--simple-colors-background5, #999);\n          --editable-table-caption-color:  var(--simple-colors-foreground3, #222);\n          --editable-table-caption-bg-color: var(--simple-colors-background1, #fff);\n          --editable-table-heading-color: var(--simple-colors-foreground1, #000);\n          --editable-table-heading-bg-color: var(--simple-colors-background3, #ddd);\n          --editable-table-stripe-bg-color: var(--simple-colors-background2, #eee);\n          --editable-table-style-stripe: {\n            background-color: var(--editable-table-stripe-bg-color);\n          };\n          --editable-table-style-column-header: {\n            font-weight: var(--editable-table-heavy-weight);\n            color: var(--editable-table-heading-color);\n            background-color: var(--editable-table-heading-bg-color);\n          };\n          --editable-table-style-row-header: {\n            font-weight:  var(--editable-table-heavy-weight);\n            color: var(--editable-table-heading-color);\n          };\n          --editable-table-style-footer: {\n            font-weight: var(--editable-table-heavy-weight);\n            color: var(--editable-table-heading-color);\n            border-top: 3px solid var(--editable-table-color);\n          };\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -9999px;\n          font-size: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        :host([accent-color]){\n          --editable-table-caption-color:  var(--simple-colors-accent-foreground3, #222);\n          --editable-table-heading-bg-color: var(--simple-colors-accent-background2, #ddd);\n          --editable-table-border-color: var(--simple-colors-accent-foreground5, #999);\n        }\n        :host([dark]), :host([dark][accent-color=\"none\"]) {\n          --editable-table-light-weight: 100;\n          --editable-table-medium-weight: 300;\n          --editable-table-heavy-weight: 400;\n          --editable-table-color: var(--simple-colors-foreground1, #fff);\n          --editable-table-bg-color:  var(--simple-colors-background3, #222);\n          --editable-table-border-color: var(--simple-colors-background1, #000);\n          --editable-table-caption-color: var(--simple-colors-foreground1, #fff);\n          --editable-table-caption-bg-color: var(--simple-colors-background1, #000);\n          --editable-table-heading-bg-color: var(--simple-colors-background1, #000);\n          --editable-table-heading-color: var(--simple-colors-foreground1, #fff);\n          --editable-table-stripe-bg-color: var(--simple-colors-background2, #111);\n        }\n        :host([dark][accent-color]){\n          --editable-table-caption-bg-color: var(--simple-colors-accent-background2, #000);\n          --editable-table-heading-bg-color: var(--simple-colors-accent-background3, #000);\n          --editable-table-border-color: var(--simple-colors-accent-foreground5, #000);\n        }\n        :host .table {\n          width: 100%;\n          display: table;\n        }\n        :host .table,\n        :host .caption,\n        :host .th,\n        :host .td {\n          font-weight: var(--editable-table-medium-weight);\n          border-collapse: collapse;\n          background-color: var(--editable-table-bg-color);\n        }\n        :host .caption {\n          display: table-caption;\n          font-size: 120%;\n          font-weight: var(--editable-table-heavy-weight);\n          color: var(--editable-table-caption-color);\n          background-color: var(--editable-table-caption-bg-color);\n          padding: 8px 0 0;\n          width: 100%;\n        }\n        :host .thead {\n          display: table-header-group;\n        } \n        :host .body {\n          display: table-row-group;\n        } \n        :host .body {\n          display: table-footer-group;\n        } \n        :host([dark][bordered]) .caption {\n          /*padding: 8px 0 0 4px;*/\n          border: 1px solid var(--editable-table-border-color);\n          border-bottom: none;\n        }\n        :host .table .tr {\n          display: table-row;\n        }\n        :host .table,\n        :host .table .th,\n        :host .table .td {\n          font-weight: var(--editable-table-light-weight);\n          color: var(--editable-table-color);\n        } \n        :host .table .th, \n        :host .table .td {\n          display: table-cell;\n          height: 24px;\n          padding: 12px 4px;\n        }\n        :host([condensed]) .table .th,\n        :host([condensed]) .table .td {\n          padding: 0 4px;\n        }\n        :host .caption, \n        :host .table .th, \n        :host .table .td {\n          text-align: left;\n        }\n        :host .table .th[numeric],\n        :host .table .td[numeric] {\n          text-align: var(--editable-table-numeric-text-align, unset);\n        }\n        :host .table .td[negative] .cell {\n          color: var(--editable-table-negative-color, --editable-table-color);\n        }\n        :host .caption > div {\n          display: flex;\n          justify-content: space-between;\n          align-items: flex-end;\n        }\n        :host .caption > div > div {\n          padding-bottom: 8px;\n          flex-grow: 1;\n          width: auto;\n        }\n        :host editable-table-sort {\n          width: 100%;\n        }\n        @media screen {\n          :host([responsive-size=\"xs\"]:not([scroll])) .table[transition] {\n            opacity: 0;\n            transition: opacity 5s;\n          }\n          :host([scroll]) #column, \n          :host(:not([responsive-size=\"xs\"])) #column, \n          :host([responsive-size=\"xs\"]:not([scroll])) .table .th[xs-hidden],\n          :host([responsive-size=\"xs\"]:not([scroll])) .table .td[xs-hidden],\n          :host([responsive-size=\"xs\"]:not([scroll])) .table[default-xs-display] .th:nth-of-type(n+3), \n          :host([responsive-size=\"xs\"]:not([scroll])) .table[default-xs-display][row-header] .td:nth-of-type(n+3), \n          :host([responsive-size=\"xs\"]:not([scroll])) .table[default-xs-display]:not([row-header]) .td:nth-of-type(n+2) {\n            display: none;\n          }  \n        }\n        @media print {\n          :host .table {\n            width: 100%;\n            max-width: 100%;\n          }\n          :host #column {\n            display: none;\n          }\n          @page {\n            size: landscape;\n          }\n        }\n      </style>\n    </custom-style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer);\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport \"@polymer/iron-autogrow-textarea/iron-autogrow-textarea.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@lrnwebcomponents/dropdown-select/dropdown-select.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport { ResponsiveUtilityBehaviors } from \"@lrnwebcomponents/responsive-utility/lib/responsive-utility-behaviors.js\";\nimport \"@lrnwebcomponents/a11y-collapse/a11y-collapse.js\";\nimport { displayBehaviors, editBehaviors } from \"./editable-table-behaviors.js\";\nimport \"./editable-table-editor-rowcol.js\";\nimport \"./editable-table-editor-toggle.js\";\nimport \"./editable-table-editor-cell.js\";\nimport \"./editable-table-iconset.js\";\nimport \"./editable-table-styles.js\";\n/**\n`editable-table-editor`\n\nAn editor interface for editable-table (editable-table.html). \n(See editable-table-behaviors.html for more information.)\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n\n<editable-table-editor \n  accent-color=\"indigo\"     //Optional accent color for column headers and border. Default is none. (See https://lrnwebcomponents.github.io/simple-colors/components/simple-colors/)\n  bordered                  //Adds borders to table. Default is no border.\n  caption=\"...\"             //The caption or title for the table.\n  column-header             //Does the table use the first row as a column-header? Default is false.\n  condensed                 //Condense the padding above and below the table? Default is false.\n  dark                      //Optional dark theme. Default is light theme. (See https://lrnwebcomponents.github.io/simple-colors/components/simple-colors/)\n  data='[                   //Table data as an array. For example:\n    [ [\"...\"], [\"...\"] ],     //This line represents a row with two columns\n    [ [\"...\"], [\"...\"] ],     //This line represents another row with two columns\n    [ [\"...\"], [\"...\"] ]      //This line represents a third row with two columns\n  ]'\n  filter                    //Allow table to toggle filtering? When a cell is toggled, only rows that have the same value as that cell will be shown. Default is no filter.\n  footer                    //Does the table use the last row as a footer? Default is false.\n  hide-accent-color           //Hide the accent color dropdown menu? Default is false which enables the menu which changes the accent-color property.\n  hide-bordered              //Hide the bordered toggle? Default is false so that a toggle button to control the bordered property.\n  hide-condensed             //Hide the condensed toggle? Default is false so that a toggle button to control the condensed property.\n  hide-dark-theme             //Hide the dark theme toggle? Default is false so that a toggle button to control the dark property.\n  hide-filter                //Hide the filter toggle? Default is false so that a toggle button to control the filter property.\n  hide-sort                  //Hide the sort toggle? Default is false so that a toggle button to control the sort property.\n  hide-scroll                //Hide the scroll toggle? Default is false so that a toggle button to control the scroll property.\n  hide-striped               //Hide the striped toggle? Default is false so that a toggle button to control the striped property.\n  row-header                //Does the table use the first column as a row header? Default is false.\n  scroll                    //Does the table use scrolling to fit when it is too wide?  Default is false: a responsive layout where only two columns are shown and a dropdown menu controls which column to display.\n  sort                      //Does the table allow sorting by column where column headers become sort buttons? Default is false.\n  striped                   //Does the table have alternating stipes of shading for its body rows? Default is false.\n  summary=\"...\">            //An accessible description of the table, what each row reporesents, and what each column represents.\n</editable-table-editor>\n*/\n\nclass EditableTableEditor extends editBehaviors(\n  displayBehaviors(ResponsiveUtilityBehaviors(PolymerElement))\n) {\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"editable-table-styles simple-colors\">\n        :host {\n          --a11y-collapse-border: 1px solid #ddd;\n          --a11y-collapse-horizontal-padding: 0;\n          --a11y-collapse: {\n            margin: 0;\n          }\n          --a11y-collapse-heading-focus: {\n            background-color: #f0f0f0;\n          }\n        }\n        :host,\n        :host paper-item {\n          font-size: 12pt;\n        }\n        :host dropdown-select {\n          padding: 0;\n        }\n        :host #accent {\n          --paper-input-container: {\n            padding-top: 0;\n          }\n        }\n        :host([responsive-size=\"xs\"]) editable-table-editor-settings {\n          padding: 3px 0;\n        }\n        :host .filter-icon,\n        :host .sortable-icon {\n          display: none;\n          opacity: 0.4;\n          width: 24px;\n          height: 24px;\n        }\n        :host([sort]) .tbody .tr:first-child .sortable-icon {\n          display: inline-block;\n          opacity: 0.25;\n        }\n        :host([filter]:not([sort])) .filter-icon,\n        :host([filter][sort]) .tbody .tr:not(:first-child) .filter-icon {\n          display: inline-block;\n          opacity: 0.25;\n        }\n        :host .field-group {\n          width: 100%;\n          margin: 0 0 10px;\n          padding: 0;\n        }\n        :host .field-group {\n          display: flex;\n          justify-content: space-between;\n          align-items: baseline;\n          transition: all 2s;\n          flex-wrap: wrap;\n        }\n        :host .field-group.field-group-stretch {\n          align-items: stretch;\n        }\n        :host .field-group-border {\n          border: 1px solid #ddd;\n          border-radius: 4px;\n          padding: 15px;\n          margin: 15px;\n        }\n        :host .field-group-grow {\n          flex-grow: 1;\n          transition: width 2s;\n        }\n        :host .field-group-shrink {\n          flex-shrink: 1;\n          transition: width 2s;\n        }\n        :host .field-group-label {\n          padding-right: 8px;\n          font-weight: bold;\n        }\n        :host .field-group label {\n          line-height: 30px;\n        }\n        :host #caption {\n          padding: 0;\n          display: inline-block;\n          width: unset;\n        }\n        :host .caption.field-group {\n          margin-bottom: 0;\n        }\n        :host .table .th,\n        :host .table .td {\n          border: 1px solid #ddd;\n        }\n        :host .table .th {\n          padding: 0;\n          vertical-align: center;\n          color: black;\n          background-color: #f0f0f0;\n        }\n        :host .table .td {\n          vertical-align: top;\n          padding: 8px 4px;\n        }\n        :host .table .th:first-child {\n          width: 96px;\n        }\n        :host([condensed]) .table .th {\n          padding: 0;\n        }\n        :host([condensed]) .table .td {\n          padding: 0 4px;\n        }\n        :host .table[bordered] .td {\n          border: 1px solid var(--editable-table-border-color);\n        }\n        :host([dark]) table .tbody .th {\n          border-right: 1px solid var(--editable-table-bg-color);\n        }\n        :host([dark]) .table .thead .th:not(:first-child) {\n          border-bottom: 1px solid var(--editable-table-bg-color);\n        }\n        :host .table([bordered]) .thead .th:not(:first-child) {\n          border-bottom: 1px solid var(--editable-table-border-color);\n        }\n        :host([striped]) .table .tr:nth-child(2n + 1) .td {\n          @apply --editable-table-style-stripe;\n        }\n        :host([column-header]) .table .tbody .tr:first-child .td {\n          @apply --editable-table-style-column-header;\n        }\n        :host([row-header]) .table .tbody .tr .td:first-of-type {\n          @apply --editable-table-style-row-header;\n        }\n        :host([footer]) .table .tbody .tr:last-of-type .td {\n          @apply --editable-table-style-footer;\n        }\n      </style>\n      <p class=\"sr-only\">Table Editor</p>\n      <p class=\"field-group\">\n        <label aria-hidden=\"true\" class=\"field-group-label\"\n          >Table Caption\n        </label>\n        <iron-autogrow-textarea\n          id=\"caption\"\n          class=\"field-group-grow caption\"\n          label=\"Table Caption\"\n          placeholder=\"A title for the table.\"\n          value\\$=\"{{caption}}\"\n        >\n        </iron-autogrow-textarea>\n      </p>\n      <p class=\"field-group\">\n        <label aria-hidden=\"true\" class=\"field-group-label\"\n          >Table Summary (for accessibility)\n        </label>\n        <iron-autogrow-textarea\n          id=\"summary\"\n          class=\"field-group-grow\"\n          label=\"Table Summary (for accessibility)\"\n          placeholder=\"Describe what the table contains. What does each row represent? What does each column represent?\"\n          value\\$=\"{{summary}}\"\n        >\n        </iron-autogrow-textarea>\n      </p>\n      <div id=\"table-outer\">\n        <a11y-collapse\n          accordion=\"\"\n          icon=\"settings\"\n          label=\"show settings\"\n          label-expanded=\"hide settings\"\n          tooltip=\"Show/hide table settings.\"\n        >\n          <div slot=\"heading\" class=\"field-group-label\">Table Settings</div>\n          <div class=\"field-group field-group-stretch\">\n            <div class=\"field-group-border field-group-grow\">\n              <label class=\"\">Headers and Footers: </label>\n              <editable-table-editor-toggle\n                label=\"First Column\"\n                prop=\"rowHeader\"\n                tooltip=\"The first column is a row header.\"\n                value\\$=\"{{rowHeader}}\"\n              >\n              </editable-table-editor-toggle>\n              <editable-table-editor-toggle\n                label=\"First Row\"\n                prop=\"columnHeader\"\n                tooltip=\"The first row is a column header.\"\n                value\\$=\"{{columnHeader}}\"\n              >\n              </editable-table-editor-toggle>\n              <editable-table-editor-toggle\n                hidden\\$=\"[[hideFooter]]\"\n                label=\"Last Row\"\n                prop=\"footer\"\n                tooltip=\"The last row is a table footer.\"\n                value\\$=\"{{footer}}\"\n              >\n              </editable-table-editor-toggle>\n            </div>\n            <div\n              class=\"field-group-border field-group-grow\"\n              hidden\\$=\"[[hideTableTheme]]\"\n            >\n              <label>Theme: </label>\n              <div class=\"field-group-grow\">\n                <dropdown-select\n                  id=\"accent\"\n                  label=\"Accent Color\"\n                  value\\$=\"{{accentColor}}\"\n                >\n                  <paper-item value=\"none\">None</paper-item>\n                  <paper-item value=\"red\">Red</paper-item>\n                  <paper-item value=\"pink\">Pink</paper-item>\n                  <paper-item value=\"purple\">Purple</paper-item>\n                  <paper-item value=\"deep-purple\">Deep Purple</paper-item>\n                  <paper-item value=\"indigo\">Indigo</paper-item>\n                  <paper-item value=\"blue\">Blue</paper-item>\n                  <paper-item value=\"light-blue\">Light Blue</paper-item>\n                  <paper-item value=\"cyan\">Cyan</paper-item>\n                  <paper-item value=\"teal\">Teal</paper-item>\n                  <paper-item value=\"green\">Green</paper-item>\n                  <paper-item value=\"light-green\">Light Green</paper-item>\n                  <paper-item value=\"lime\">Lime</paper-item>\n                  <paper-item value=\"yellow\">Yellow</paper-item>\n                  <paper-item value=\"amber\">Amber</paper-item>\n                  <paper-item value=\"orange\">Orange</paper-item>\n                  <paper-item value=\"deep-orange\">Deep Orange</paper-item>\n                  <paper-item value=\"brown\">Deep Orange</paper-item>\n                  <paper-item value=\"blue-grey\">Blue-Grey</paper-item>\n                </dropdown-select>\n              </div>\n              <paper-tooltip for=\"accent\"\n                >Set an accent color for the table.</paper-tooltip\n              >\n              <editable-table-editor-toggle\n                hidden\\$=\"[[hideDarkTheme]]\"\n                label=\"Dark\"\n                prop=\"dark\"\n                tooltip=\"Use the dark theme.\"\n                value\\$=\"{{dark}}\"\n              >\n              </editable-table-editor-toggle>\n            </div>\n            <div\n              class=\"field-group-border field-group-grow\"\n              hidden\\$=\"[[hideTableStyles]]\"\n            >\n              <label>Styles: </label>\n              <editable-table-editor-toggle\n                hidden\\$=\"[[hideBordered]]\"\n                label=\"Bordered\"\n                prop=\"bordered\"\n                tooltip=\"Add borders to cells.\"\n                value\\$=\"{{bordered}}\"\n              >\n              </editable-table-editor-toggle>\n              <editable-table-editor-toggle\n                hidden\\$=\"[[hideStriped]]\"\n                label=\"Striped\"\n                prop=\"striped\"\n                tooltip=\"Add shading to alternating rows.\"\n                value\\$=\"{{striped}}\"\n              >\n              </editable-table-editor-toggle>\n              <editable-table-editor-toggle\n                hidden\\$=\"[[hideCondensed]]\"\n                label=\"Condensed\"\n                prop=\"condensed\"\n                tooltip=\"Condense cell height.\"\n                value\\$=\"{{condensed}}\"\n              >\n              </editable-table-editor-toggle>\n              <editable-table-editor-toggle\n                hidden\\$=\"[[hideScroll]]\"\n                label=\"Disable Responsive\"\n                prop=\"scroll\"\n                tooltip=\"Disables the default responsive feature.\"\n                value\\$=\"{{scroll}}\"\n              >\n              </editable-table-editor-toggle>\n            </div>\n            <div\n              class=\"field-group-border field-group-grow\"\n              hidden\\$=\"[[hideTableSort]]\"\n            >\n              <label>Sorting and Filtering: </label>\n              <editable-table-editor-toggle\n                disabled\\$=\"[[!columnHeader]]\"\n                hidden\\$=\"[[hideSort]]\"\n                label=\"Enable Sorting\"\n                prop=\"sort\"\n                tooltip=\"When first row is a column header, make the column sortable.\"\n                value\\$=\"{{sort}}\"\n              >\n              </editable-table-editor-toggle>\n              <editable-table-editor-toggle\n                hidden\\$=\"[[hideFilter]]\"\n                label=\"Enable Filters\"\n                prop=\"filter\"\n                tooltip=\"When a cell is clicked toggle a filter based on that cell's value.\"\n                value\\$=\"{{filter}}\"\n              >\n              </editable-table-editor-toggle>\n            </div>\n          </div>\n        </a11y-collapse>\n        <table\n          id=\"table\"\n          class=\"table\"\n          bordered\\$=\"{{bordered}}\"\n          condensed\\$=\"{{condensed}}\"\n          striped\\$=\"{{striped}}\"\n          summary=\"Editable table in edit mode. The table body contains fields to edit table data. Each column header contains buttons for editing the column. Each row header contains buttons for editing the row.\"\n        >\n          <caption class=\"sr-only\">\n            Editable Table Data\n          </caption>\n          <thead class=\"thead\">\n            <tr class=\"tr\">\n              <th class=\"th\" scope=\"col\">\n                <span class=\"sr-only\">Row Functions</span>\n              </th>\n              <template\n                id=\"headers\"\n                is=\"dom-repeat\"\n                items=\"[[data]]\"\n                as=\"row\"\n                index-as=\"tr\"\n                restamp=\"true\"\n              >\n                <template is=\"dom-if\" if=\"[[_isFirstRow(tr)]]\" restamp=\"true\">\n                  <template\n                    id=\"headercols\"\n                    is=\"dom-repeat\"\n                    items=\"[[row]]\"\n                    as=\"cell\"\n                    index-as=\"th\"\n                    restamp=\"true\"\n                  >\n                    <th class=\"th\" scope=\"col\">\n                      <editable-table-editor-rowcol\n                        condensed\\$=\"{{condensed}}\"\n                        index\\$=\"[[th]]\"\n                        type=\"Column\"\n                      ></editable-table-editor-rowcol>\n                    </th>\n                  </template>\n                </template>\n              </template>\n            </tr>\n          </thead>\n          <tbody id=\"tbody\" class=\"tbody\">\n            <template\n              id=\"rows\"\n              is=\"dom-repeat\"\n              items=\"[[data]]\"\n              as=\"row\"\n              index-as=\"tr\"\n              restamp=\"true\"\n            >\n              <tr class=\"tr\">\n                <th class=\"th\" scope=\"row\">\n                  <editable-table-editor-rowcol\n                    condensed\\$=\"{{condensed}}\"\n                    index\\$=\"[[tr]]\"\n                    type=\"Row\"\n                  ></editable-table-editor-rowcol>\n                </th>\n                <template\n                  id=\"columns\"\n                  is=\"dom-repeat\"\n                  items=\"[[row]]\"\n                  as=\"cell\"\n                  restamp=\"true\"\n                >\n                  <td class=\"td\">\n                    <editable-table-editor-cell\n                      row=\"[[tr]]\"\n                      column=\"[[index]]\"\n                      value\\$=\"{{cell}}\"\n                    >\n                      <iron-icon\n                        class=\"sortable-icon\"\n                        icon=\"editable-table:sortable\"\n                        aria-hidden=\"true\"\n                      ></iron-icon>\n                      <iron-icon\n                        class=\"filter-icon\"\n                        icon=\"editable-table:filter-off\"\n                      ></iron-icon>\n                    </editable-table-editor-cell>\n                  </td>\n                </template>\n              </tr>\n            </template>\n          </tbody>\n        </table>\n      </div>\n    `;\n  }\n\n  static get tag() {\n    return \"editable-table-editor\";\n  }\n\n  static get observers() {\n    return [\"_setMinimumData(data)\"];\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Get accent color and change unspecified to none.\n       */\n      accentSelected: {\n        type: String,\n        computed: \"_getAccentSelected(accentColor)\"\n      },\n      /**\n       * Hide the table styles menu\n       */\n      hideTableStyles: {\n        type: Boolean,\n        computed:\n          \"_tableStylesHidden(hideBordered,hideCondensed,hideStriped,hideScroll)\"\n      },\n      /**\n       * Hide the table theme menu\n       */\n      hideTableTheme: {\n        type: Boolean,\n        computed: \"_tableThemeHidden(hideAccentColor,hideDarkTheme)\"\n      },\n      /**\n       * Hide the table sorting & filtering menu\n       */\n      hideTableSort: {\n        type: Boolean,\n        computed: \"_tableSortHidden(hideSort,hideFilter)\"\n      }\n    };\n  }\n\n  /**\n   * click detection\n   */\n  ready() {\n    super.ready();\n    this.onclick = function(e) {\n      let el =\n        e.srcElement !== null &&\n        e.srcElement.tagName !== null &&\n        e.srcElement.tagName.toLowerCase() === \"td\"\n          ? e.srcElement\n          : false;\n      if (el && el.getElementsByTagName(\"editable-table-cell\") !== null) {\n        console.log(el.children[0]);\n        el.children[0].focus();\n      }\n    };\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function() {\n      this.addEventListener(\"cell-move\", this._onCellMove.bind(this));\n      this.addEventListener(\n        \"cell-value-changed\",\n        this._onCellValueChange.bind(this)\n      );\n      this.addEventListener(\"insert-row\", this._handleInsertRow.bind(this));\n      this.addEventListener(\n        \"insert-column\",\n        this._handleInsertColumn.bind(this)\n      );\n      this.addEventListener(\"delete-row\", this._handleDeleteRow.bind(this));\n      this.addEventListener(\n        \"delete-column\",\n        this._handleDeleteColumn.bind(this)\n      );\n      this.addEventListener(\n        \"editable-table-setting-changed\",\n        this._onTableSettingChange.bind(this)\n      );\n      this.addEventListener(\n        \"dropdown-select-changed\",\n        this._onAccentChange.bind(this)\n      );\n    });\n  }\n  disconnectedCallback() {\n    this.removeEventListener(\"cell-move\", this._onCellMove.bind(this));\n    this.removeEventListener(\n      \"cell-value-changed\",\n      this._onCellValueChange.bind(this)\n    );\n    this.removeEventListener(\"insert-row\", this._handleInsertRow.bind(this));\n    this.removeEventListener(\n      \"insert-column\",\n      this._handleInsertColumn.bind(this)\n    );\n    this.removeEventListener(\"delete-row\", this._handleDeleteRow.bind(this));\n    this.removeEventListener(\n      \"delete-column\",\n      this._handleDeleteColumn.bind(this)\n    );\n    this.removeEventListener(\n      \"editable-table-setting-changed\",\n      this._onTableSettingChange.bind(this)\n    );\n    this.removeEventListener(\n      \"dropdown-select-changed\",\n      this._onAccentChange.bind(this)\n    );\n    super.disconnectedCallback();\n  }\n\n  /**\n   * Get the current accent color\n   */\n  _getAccentSelected(accentColor) {\n    return accentColor !== null ? accentColor : \"none\";\n  }\n\n  /**\n   * Gets the row data for a given row index\n   */\n  _getCurrentRow(index, data) {\n    let row = null;\n    if (\n      data !== undefined &&\n      data !== null &&\n      data[index] !== undefined &&\n      data[index] !== null\n    ) {\n      row = data[index];\n    }\n    return row;\n  }\n\n  /**\n   * Handles delete column event\n   */\n  _handleDeleteColumn(e) {\n    this.deleteColumn(e.detail);\n  }\n\n  /**\n   * Handles delete row event\n   */\n  _handleDeleteRow(e) {\n    this.deleteRow(e.detail);\n  }\n\n  /**\n   * Handles insert column event\n   */\n  _handleInsertColumn(e) {\n    this.insertColumn(e.detail);\n  }\n\n  /**\n   * Handles insert row event\n   */\n  _handleInsertRow(e) {\n    this.insertRow(e.detail);\n  }\n\n  /**\n   * Tests for first row of data. Workaround to restamp column headers.\n   */\n  _isFirstRow(index) {\n    return index === 0;\n  }\n\n  /**\n   * Handle accent dropdown-select change\n   */\n  _onAccentChange(e) {\n    this.accentColor = e.detail.value !== \"none\" ? e.detail.value : null;\n  }\n\n  /**\n   * Move the focus/cursor to the correct cell when navigation keys are pressed\n   */\n  _onCellMove(e) {\n    let dir = e.detail.direction,\n      cell = e.detail.cell;\n    let row = cell.parentNode,\n      body = this.$.tbody;\n    let x = Array.prototype.indexOf.call(row.children, cell);\n    let y = Array.prototype.indexOf.call(body.children, row);\n\n    if (dir === \"down\") {\n      if (y + 1 < body.children.length - 1) {\n        body.children[y + 1].children[x].children[0].setFocus();\n      } else {\n        this.insertRow(y);\n      }\n    } else if (dir === \"up\") {\n      if (y > 0) {\n        body.children[y - 1].children[x].children[0].setFocus();\n      }\n    } else if (dir === \"right\") {\n      if (x + 1 < row.children.length - 1) {\n        row.children[x + 1].children[0].setFocus();\n      } else if (y + 1 < body.children.length - 1) {\n        body.children[y + 1].children[1].children[0].setFocus();\n      }\n    } else if (dir === \"left\") {\n      if (x > 1) {\n        row.children[x - 1].children[0].setFocus();\n      } else if (y > 0) {\n        body.children[y - 2].children[\n          body.children[y - 2].children.length - 2\n        ].children[0].setFocus();\n      }\n    }\n  }\n\n  /**\n   * Updates data when cell value changes\n   */\n  _onCellValueChange(e) {\n    this.set(\"data.\" + e.detail.row + \".\" + e.detail.column, e.detail.value);\n  }\n\n  /**\n   * Updates table properties when setting changes\n   */\n  _onTableSettingChange(e) {\n    this[e.detail.prop] = e.detail.value;\n  }\n\n  /**\n   * Makes sure there is always on cell to work from\n   */\n  _setMinimumData(data) {\n    if (data.length < 1 || data[0].length < 1) {\n      this.set(\"data\", [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]]);\n    }\n  }\n\n  /**\n   * Are all of the table style choices hidden?\n   */\n  _tableStylesHidden(hideBordered, hideCondensed, hideStriped, hideScroll) {\n    return hideBordered && hideCondensed && hideStriped && hideScroll;\n  }\n\n  /**\n   * Are all of the theme choices hidden?\n   */\n  _tableThemeHidden(hideAccentColor, hideDarkTheme) {\n    return hideAccentColor && hideDarkTheme;\n  }\n\n  /**\n   * Are all of the theme choices hidden?\n   */\n  _tableSortHidden(hideSort, hideFilter) {\n    return hideSort && hideFilter;\n  }\n\n  /**\n   * Delete a column at the given index\n   */\n  deleteColumn(index) {\n    if (confirm(\"Delete entire column?\")) {\n      for (let i = 0; i < this.data.length; i++) {\n        this.splice(\"data.\" + i, index, 1);\n      }\n    }\n  }\n\n  /**\n   * Delete a row at the given index\n   */\n  deleteRow(index) {\n    if (confirm(\"Delete entire row?\")) {\n      this.splice(\"data\", index, 1);\n    }\n  }\n\n  /**\n   * Insert a column at the given index\n   */\n  insertColumn(index) {\n    let temp = new Array(),\n      first = null;\n    for (let i = 0; i < this.data.length; i++) {\n      this.splice(\"data.\" + i, index, 0, \"\");\n    }\n  }\n\n  /**\n   * Insert a row at the given index\n   */\n  insertRow(index) {\n    let temp = new Array();\n    for (let i = 0; i < this.data[0].length; i++) {\n      temp.push(\"\");\n    }\n    this.splice(\"data\", index + 1, 0, temp);\n  }\n}\nwindow.customElements.define(EditableTableEditor.tag, EditableTableEditor);\nexport { EditableTableEditor };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"./editable-table-iconset.js\";\n/**\n`editable-table-sort`\n\nA column header that functions as a three-state sort button \n(no sort, sort ascending, sort descending) for the \ntable-editor-display mode (table-editor-display.html).\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n\n<editable-table-sort \n  sort-mode=\"asc\"               //The column's sort mode, can be \"asc\", \"desc\", or \"none\". Default is \"none\".\n  sort-column=\"3\"               //The column number of current sort column.\n  column-number=\"2\"             //The column number of this button. If this matches the sort-column number, sorting will be turned on.\n  text=\"\">                      //The text of the column header\n</editable-table-sort>\n\n*/\nclass EditableTableSort extends PolymerElement {\n  static get template() {\n    return html`\n      <style is=\"custom-style\">\n        :host paper-button {\n          padding: 0;\n          margin: 0;\n          width: 100%;\n          min-width: unset;\n          display: inline-flex;\n          justify-content: space-between;\n          align-items: center;\n          align-content: stretch;\n          text-transform: unset;\n        }\n        :host paper-button > div {\n          flex-grow: 1;\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -9999px;\n          font-size: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        :host(:not([sort-mode=\"asc\"])) .asc,\n        :host(:not([sort-mode=\"desc\"])) .desc,\n        :host(:not([sort-mode=\"none\"])) .none,\n        :host #asc,\n        :host #desc,\n        :host([sorting]:not([sort-mode=\"none\"])) #none {\n          display: none;\n        }\n        :host([sorting][sort-mode=\"asc\"]) #asc,\n        :host([sorting][sort-mode=\"desc\"]) #desc {\n          display: flex;\n        }\n      </style>\n      <paper-button id=\"button\" class=\"container\">\n        [[text]] <span class=\"sr-only asc\">(ascending)</span>\n        <span class=\"sr-only desc\">(descending)</span>\n        <span class=\"sr-only\"> Toggle sort mode.</span>\n        <iron-icon id=\"asc\" icon=\"arrow-drop-up\"></iron-icon>\n        <iron-icon id=\"desc\" icon=\"arrow-drop-down\"></iron-icon>\n        <iron-icon id=\"none\" icon=\"editable-table:sortable\"></iron-icon>\n      </paper-button>\n    `;\n  }\n\n  static get tag() {\n    return \"editable-table-sort\";\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function() {\n      this.addEventListener(\"click\", this._onSortTapped.bind(this));\n    });\n  }\n  disconnectedCallback() {\n    this.removeEventListener(\"click\", this._onSortTapped.bind(this));\n    super.disconnectedCallback();\n  }\n\n  static get properties() {\n    return {\n      /**\n       * sort ascending, descending or none\n       */\n      columnNumber: {\n        type: Number,\n        value: null,\n        reflectToAttribute: true\n      },\n      /**\n       * Sort mode: ascending, descending or none\n       */\n      sortMode: {\n        type: String,\n        value: \"none\",\n        reflectToAttribute: true\n      },\n      /**\n       * The index of the current sort column\n       */\n      sortColumn: {\n        type: Number,\n        value: -1,\n        reflectToAttribute: true\n      },\n      /**\n       * If this is the sort column, sorting is on\n       */\n      sorting: {\n        type: Boolean,\n        computed: \"_isSorting(columnNumber,sortColumn)\",\n        reflectToAttribute: true\n      },\n      /**\n       * the column header text\n       */\n      text: {\n        type: String,\n        value: \"\"\n      }\n    };\n  }\n\n  /**\n   * listen for button tap\n   */\n  _onSortTapped() {\n    this.dispatchEvent(\n      new CustomEvent(\"change-sort-mode\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: this\n      })\n    );\n  }\n\n  /**\n   * changes the sort mode\n   */\n  setSortMode(mode) {\n    this.sortMode = mode;\n    this.__checked = mode === \"asc\" ? true : mode === \"desc\" ? mode : false;\n  }\n\n  /**\n   * Is the column number is the same as the current sort column?\n   */\n  _isSorting(columnNumber, sortColumn) {\n    return columnNumber === sortColumn;\n  }\n}\nwindow.customElements.define(EditableTableSort.tag, EditableTableSort);\nexport { EditableTableSort };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"./editable-table-iconset.js\";\n/**\n`editable-table-filter`\nDisplays a cell in the editable-table-display mode \n(editable-table-display.html) as a filter button.\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n\n<editable-table-filter \n  column-number=\"1\"       //The index of the cell's column\n  text=\"\">                //The text of the cell, which will become the filter value when button is toggled.\n</editable-table-filter>\n\n*/\nclass EditableTableFilter extends PolymerElement {\n  static get template() {\n    return html`\n      <style is=\"custom-style\">\n        :host paper-button {\n          padding: 0;\n          margin: 0;\n          width: 100%;\n          min-width: unset;\n          display: inline-flex;\n          justify-content: space-between;\n          align-items: center;\n          align-content: stretch;\n          text-transform: unset;\n        }\n        :host paper-button > div {\n          flex-grow: 1;\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -9999px;\n          font-size: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        :host #filter-off {\n          opacity: 0.25;\n        }\n        :host(:not([filtered])) .filtered,\n        :host(:not([filtered]):not(:focus):not(:hover)) #filter,\n        :host(:not([filtered]):focus) #filter-off,\n        :host(:not([filtered]):hover) #filter-off,\n        :host([filtered]:not(:focus):not(:hover)) #filter-off,\n        :host([filtered]:focus) #filter,\n        :host([filtered]:hover) #filter {\n          display: none;\n        }\n      </style>\n      <paper-button id=\"button\" class=\"container\">\n        <span>[[text]]</span>\n        <span class=\"sr-only\" hidden\\$=\"[[!filtered]]\"> (filtered)</span>\n        <span class=\"sr-only\"> Toggle filter.</span>\n        <iron-icon id=\"filter\" icon=\"editable-table:filter\"></iron-icon>\n        <iron-icon id=\"filter-off\" icon=\"editable-table:filter-off\"></iron-icon>\n      </paper-button>\n      <paper-tooltip for=\"button\">Toggle filter for \"[[text]]\"</paper-tooltip>\n    `;\n  }\n\n  static get tag() {\n    return \"editable-table-filter\";\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function() {\n      this.addEventListener(\"click\", this._onFilterTapped.bind(this));\n    });\n  }\n  disconnectedCallback() {\n    this.removeEventListener(\"click\", this._onFilterTapped.bind(this));\n    super.disconnectedCallback();\n  }\n  static get properties() {\n    return {\n      /**\n       * the column for the filter\n       */\n      columnNumber: {\n        type: Number,\n        value: null\n      },\n      /**\n       * is the data filtered\n       */\n      filtered: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * the column header text\n       */\n      text: {\n        type: String,\n        value: \"\"\n      }\n    };\n  }\n\n  /**\n   * listen for button tap\n   */\n  _getPressed(filtered) {\n    return filtered ? \"true\" : \"false\";\n  }\n\n  /**\n   * listen for button tap\n   */\n  _onFilterTapped() {\n    this.dispatchEvent(\n      new CustomEvent(\"toggle-filter\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: this\n      })\n    );\n  }\n}\nwindow.customElements.define(EditableTableFilter.tag, EditableTableFilter);\nexport { EditableTableFilter };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport \"@lrnwebcomponents/dropdown-select/dropdown-select.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"@polymer/polymer/lib/elements/dom-repeat.js\";\nimport \"@polymer/polymer/lib/elements/dom-if.js\";\n\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport { ResponsiveUtilityBehaviors } from \"@lrnwebcomponents/responsive-utility/lib/responsive-utility-behaviors.js\";\nimport { displayBehaviors } from \"./editable-table-behaviors.js\";\nimport \"./editable-table-sort.js\";\nimport \"./editable-table-filter.js\";\nimport \"./editable-table-styles.js\";\n/**\n`editable-table-display`\n\nDisplays a table with theming, styling, sorting, resonsive, and \nfiltering features.  (See editable-table-behaviors.html \nfor more information.)\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n<editable-table-display \n  accent-color=\"indigo\"     //Optional accent color for column headers and border. Default is none. (See https://lrnwebcomponents.github.io/simple-colors/components/simple-colors/)\n  bordered                  //Adds borders to table. Default is no border.\n  caption=\"...\"             //The caption or title for the table.\n  column-header             //Does the table use the first row as a column-header? Default is false.\n  condensed                 //Condense the padding above and below the table? Default is false.\n  dark                      //Optional dark theme. Default is light theme. (See https://lrnwebcomponents.github.io/simple-colors/components/simple-colors/)\n  data='[                   //Table data as an array. For example:\n    [ [\"...\"], [\"...\"] ],     //This line represents a row with two columns\n    [ [\"...\"], [\"...\"] ],     //This line represents another row with two columns\n    [ [\"...\"], [\"...\"] ]      //This line represents a third row with two columns\n  ]'\n  edit-mode                 //Is the editor in edit mode? Default is false which places the table in display mode. \n  filter                    //Allow table to toggle filtering? When a cell is toggled, only rows that have the same value as that cell will be shown. Default is no filter.\n  footer                    //Does the table use the last row as a footer? Default is false.\n  row-header                //Does the table use the first column as a row header? Default is false.\n  scroll                    //Does the table use scrolling to fit when it is too wide?  Default is false: a responsive layout where only two columns are shown and a dropdown menu controls which column to display.\n  sort                      //Does the table allow sorting by column where column headers become sort buttons? Default is false.\n  striped                   //Does the table have alternating stipes of shading for its body rows? Default is false.\n  summary=\"...\">            //An accessible description of the table, what each row reporesents, and what each column represents.\n</editable-table-display>\n\n*/\nclass EditableTableDisplay extends displayBehaviors(\n  ResponsiveUtilityBehaviors(PolymerElement)\n) {\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"editable-table-styles simple-colors\">\n        :host([dark]) .caption {\n          padding: 4px 4px 0;\n        }\n        :host([bordered]) .table .th,\n        :host([bordered]) .table .td {\n          border: 1px solid var(--editable-table-border-color);\n        }\n        :host([striped]) .table .tbody .tr:nth-child(2n) .th,\n        :host([striped]) .table .tbody .tr:nth-child(2n) .td {\n          @apply --editable-table-style-stripe;\n        }\n        :host([column-header]) .table .thead .tr .th {\n          @apply --editable-table-style-column-header;\n        }\n        :host([row-header]) .table .tbody .tr .th {\n          @apply --editable-table-style-row-header;\n        }\n        :host([footer]) .table .tfoot .tr .th,\n        :host([footer]) .table .tfoot .tr .td {\n          @apply --editable-table-style-footer;\n        }\n      </style>\n      <table id=\"table\" class=\"table\" default-xs-display=\"\">\n        <caption class=\"caption\">\n          <div>\n            <div>[[caption]]</div>\n            <dropdown-select id=\"column\" label\\$=\"[[tables.0.label]]\" value=\"1\">\n              <template\n                is=\"dom-repeat\"\n                items=\"[[thead.0]]\"\n                as=\"col\"\n                index-as=\"index\"\n              >\n                <template is=\"dom-if\" if=\"[[columnHeader]]\">\n                  <paper-item id\\$=\"[[index]]\" value\\$=\"[[index]]\"\n                    >[[col]]</paper-item\n                  >\n                </template>\n                <template is=\"dom-if\" if=\"[[!columnHeader]]\">\n                  <paper-item id\\$=\"[[index]]\">Column [[index]]</paper-item>\n                </template>\n              </template>\n            </dropdown-select>\n          </div>\n        </caption>\n        <thead class=\"thead\" hidden=\"[[!columnHeader]]\">\n          <tr class=\"tr\">\n            <template\n              is=\"dom-repeat\"\n              items=\"[[thead.0]]\"\n              as=\"th\"\n              index-as=\"index\"\n            >\n              <th\n                class=\"th\"\n                scope=\"col\"\n                numeric\\$=\"[[_isNumericColumn(index)]]\"\n              >\n                <template is=\"dom-if\" if=\"[[sort]]\" restamp=\"\">\n                  <editable-table-sort\n                    sort-column\\$=\"[[sortColumn]]\"\n                    column-number=\"[[index]]\"\n                    text\\$=\"[[th]]\"\n                  ></editable-table-sort>\n                </template>\n                <template is=\"dom-if\" if=\"[[!sort]]\" restamp=\"\"\n                  >[[th]]</template\n                >\n              </th>\n            </template>\n          </tr>\n        </thead>\n        <tbody id=\"tbody\" class=\"tbody\">\n          <template\n            is=\"dom-repeat\"\n            items=\"[[tbody]]\"\n            as=\"tr\"\n            filter=\"{{filterRows(filterColumn,filterText)}}\"\n            restamp=\"\"\n          >\n            <tr class=\"tr\">\n              <template\n                is=\"dom-repeat\"\n                items=\"[[tr]]\"\n                as=\"cell\"\n                index-as=\"index\"\n                restamp=\"\"\n              >\n                <template\n                  is=\"dom-if\"\n                  if=\"[[_isRowHeader(rowHeader,index)]]\"\n                  restamp=\"\"\n                >\n                  <th\n                    class=\"th\"\n                    scope=\"row\"\n                    numeric\\$=\"[[_isNumericColumn(index)]]\"\n                  >\n                    [[cell]]\n                  </th>\n                </template>\n                <template\n                  is=\"dom-if\"\n                  if=\"[[!_isRowHeader(rowHeader,index)]]\"\n                  restamp=\"\"\n                >\n                  <td\n                    class=\"td\"\n                    numeric\\$=\"[[_isNumericColumn(index)]]\"\n                    negative\\$=\"[[_isNegative(cell)]]\"\n                  >\n                    <template is=\"dom-if\" if=\"[[filter]]\" restamp=\"\">\n                      <editable-table-filter\n                        column-number=\"[[index]]\"\n                        text\\$=\"[[cell]]\"\n                        filtered\\$=\"[[_isFiltered(index,filterColumn,filtered)]]\"\n                      ></editable-table-filter>\n                    </template>\n                    <template is=\"dom-if\" if=\"[[!filter]]\" restamp=\"\"\n                      ><span class=\"cell\">[[cell]]</span></template\n                    >\n                  </td>\n                </template>\n              </template>\n            </tr>\n          </template>\n        </tbody>\n        <template is=\"dom-if\" if=\"[[footer]]\">\n          <tfoot class=\"tfoot\">\n            <tr class=\"tr\">\n              <template\n                is=\"dom-repeat\"\n                items=\"[[__tfoot.0]]\"\n                as=\"cell\"\n                index-as=\"index\"\n              >\n                <template is=\"dom-if\" if=\"[[_isRowHeader(rowHeader,index)]]\">\n                  <th\n                    class=\"th\"\n                    scope=\"row\"\n                    numeric\\$=\"[[_isNumericColumn(index)]]\"\n                  >\n                    [[cell]]\n                  </th>\n                </template>\n                <template is=\"dom-if\" if=\"[[!_isRowHeader(rowHeader,index)]]\">\n                  <td\n                    class=\"td\"\n                    numeric\\$=\"[[_isNumericColumn(index)]]\"\n                    negative\\$=\"[[_isNegative(cell)]]\"\n                  >\n                    [[cell]]\n                  </td>\n                </template>\n              </template>\n            </tr>\n          </tfoot>\n        </template>\n      </table>\n    `;\n  }\n  static get tag() {\n    return \"editable-table-display\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Is the table in edit mode?\n       */\n      editMode: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Column for filtering\n       */\n      filterColumn: {\n        type: Number,\n        value: null\n      },\n      /**\n       * Is the table filtered\n       */\n      filtered: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Text for Filtering\n       */\n      filterText: {\n        type: String,\n        value: null\n      },\n      /**\n       * Hide edit mode?\n       */\n      hideEditMode: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * The selected table\n       */\n      selected: {\n        type: Number,\n        value: 1\n      },\n      /**\n       * Sort mode: ascending, descending or none\n       */\n      sortMode: {\n        type: String,\n        value: \"none\"\n      },\n      /**\n       * The index of the current sort column\n       */\n      sortColumn: {\n        type: Number,\n        value: -1\n      },\n      /**\n       * columns in <thead>\n       */\n      thead: {\n        type: Array,\n        computed: \"_getThead(data,columnHeader)\"\n      },\n      /**\n       * rows in <tbody>\n       */\n      tbody: {\n        type: Array,\n        computed: \"_getTbody(data,columnHeader,footer)\"\n      }\n    };\n  }\n\n  /**\n   * Geth the rows in <tbody>\n   */\n  _getTbody(data, columnHeader, footer) {\n    if (data !== undefined && data !== null && data.length > 0) {\n      let ch = columnHeader ? 1 : 0,\n        tbody;\n      if (footer) {\n        tbody = data.slice(ch, data.length - 1);\n        this.__tfoot = data.slice(data.length - 1);\n      } else {\n        tbody = data.slice(ch, data.length);\n        this.__tfoot = [];\n      }\n      return tbody;\n    }\n    return [];\n  }\n\n  /**\n   * Get the columns in <thead>\n   */\n  _getThead(data, columnHeader) {\n    let root = this;\n    if (\n      data !== undefined &&\n      data !== null &&\n      data.length > 0 &&\n      columnHeader\n    ) {\n      return data.slice(0, 1);\n    }\n    return [];\n  }\n\n  /**\n   * sets a column's cells to filtered when in filtered mode so that filter can toggle\n   */\n  _isFiltered(column, filterColumn, filtered) {\n    return filterColumn !== null && filterColumn === column && filtered;\n  }\n\n  /**\n   * sets a cell's numeric style\n   */\n  _isNegative(cell) {\n    return this._isNumeric(cell) && cell.trim().indexOf(\"-\") === 0;\n  }\n\n  /**\n   * sets a cell's numeric style\n   */\n  _isNumeric(cell) {\n    return cell !== null && !isNaN(cell.trim().replace(/\\$/g, \"\"));\n  }\n\n  /**\n   * sets a cell's numeric style\n   */\n  _isNumericColumn(col) {\n    let numeric = true;\n    for (let i = 0; i < this.tbody.length; i++) {\n      if (!this._isNumeric(this.tbody[i][col])) numeric = false;\n    }\n    return numeric;\n  }\n\n  /**\n   * Calculate if the cell is a th or td\n   */\n  _isRowHeader(rowHeader, index) {\n    return index === 0 && rowHeader;\n  }\n\n  /**\n   * Handle column dropdown-select change\n   */\n  _onColumnChange(e) {\n    this.selected = e.detail.value;\n    this._updateCols(parseInt(e.detail.value));\n  }\n\n  /**\n   * Handle sort button click\n   */\n  _changeSortMode(e) {\n    if (this.sortColumn === e.detail.columnNumber && this.sortMode === \"asc\") {\n      this.sortMode = \"desc\";\n    } else if (\n      this.sortColumn === e.detail.columnNumber &&\n      this.sortMode === \"desc\"\n    ) {\n      this.sortMode = \"none\";\n    } else {\n      this.sortMode = \"asc\";\n      this.sortColumn = e.detail.columnNumber;\n    }\n    e.detail.setSortMode(this.sortMode);\n    this.sortData(this.sortMode, e.detail.columnNumber);\n  }\n\n  /**\n   * update the responsive columns menu\n   */\n  _updateCols(selected) {\n    this.$.table.removeAttribute(\"default-xs-display\");\n    let cols = this.$.table.querySelectorAll(\"th,td\");\n    this.$.table.setAttribute(\"transition\", true);\n    setTimeout(function() {\n      for (let i = 0; i < cols.length; i++) {\n        let col = cols[i],\n          index = col.cellIndex,\n          delay;\n        if (index === 0 || index === selected) {\n          col.removeAttribute(\"xs-hidden\");\n        } else {\n          col.setAttribute(\"xs-hidden\", true);\n        }\n      }\n    }, 200);\n    this.$.table.removeAttribute(\"transition\");\n  }\n\n  /**\n   * Handle filter based on collumn and text of cell that is clicked\n   */\n  filterRows(filterColumn, filterText) {\n    if (filterText !== undefined && filterText !== null) {\n      return function(tr) {\n        return (\n          tr[filterColumn].toLowerCase().trim() ===\n          filterText.toLowerCase().trim()\n        );\n      };\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * initialize the responsive columns menu\n   */\n  sortData(type, column) {\n    if (type !== \"none\" && type !== false) {\n      let temp = this.tbody.slice();\n      for (let i = 0; i < temp.length; i++) {\n        temp[i].unshift(temp[i][column]);\n      }\n      if (type === \"asc\") {\n        temp.sort();\n      } else {\n        temp.reverse();\n      }\n      for (let i = 0; i < temp.length; i++) {\n        this.set(\"tbody.\" + i, []);\n        this.set(\"tbody.\" + i, temp[i].slice(1));\n      }\n    } else {\n      let temp = this.tbody.slice();\n      for (let i = 0; i < temp.length; i++) {\n        this.set(\"data.\" + (i + 1), []);\n        this.set(\"data.\" + (i + 1), temp[i].slice());\n      }\n    }\n  }\n\n  /**\n   * Handle filter button click\n   */\n  toggleFilter(e) {\n    if (\n      e === undefined ||\n      (this.filterColumn == e.detail.columnNumber && this.filtered)\n    ) {\n      this.filtered = false;\n      this.filterText = null;\n      this.filterColumn = null;\n    } else {\n      this.filterText = e.detail.text;\n      this.filterColumn = e.detail.columnNumber;\n      this.filtered = true;\n    }\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function() {\n      this.addEventListener(\n        \"change-sort-mode\",\n        this._changeSortMode.bind(this)\n      );\n      this.addEventListener(\"toggle-filter\", this.toggleFilter.bind(this));\n      this.addEventListener(\n        \"dropdown-select-changed\",\n        this._onColumnChange.bind(this)\n      );\n    });\n  }\n  disconnectedCallback() {\n    this.removeEventListener(\n      \"change-sort-mode\",\n      this._changeSortMode.bind(this)\n    );\n    this.removeEventListener(\"toggle-filter\", this.toggleFilter.bind(this));\n    this.removeEventListener(\n      \"dropdown-select-changed\",\n      this._onColumnChange.bind(this)\n    );\n    super.disconnectedCallback();\n  }\n}\nwindow.customElements.define(EditableTableDisplay.tag, EditableTableDisplay);\nexport { EditableTableDisplay };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button.js\";\nimport {\n  displayBehaviors,\n  editBehaviors\n} from \"./lib/editable-table-behaviors.js\";\nimport \"./lib/editable-table-editor.js\";\nimport \"./lib/editable-table-display.js\";\n/**\n`editable-table`\n\nAn editor interface for tables that toggles between \nview mode (editable-table-display.html) and \nedit mode (editable-table-editor.html). \n(See editable-table-behaviors.html for more information.)\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n\n<editable-table \n  accent-color=\"indigo\"     //Optional accent color for column headers and border. Default is none. (See https://lrnwebcomponents.github.io/simple-colors/components/simple-colors/)\n  bordered                  //Adds borders to table. Default is no border.\n  caption=\"...\"             //The caption or title for the table.\n  column-header             //Does the table use the first row as a column-header? Default is false.\n  condensed                 //Condense the padding above and below the table? Default is false.\n  dark                      //Optional dark theme. Default is light theme. (See https://lrnwebcomponents.github.io/simple-colors/components/simple-colors/)\n  data='[                   //Table data as an array. For example:\n    [ [\"...\"], [\"...\"] ],     //This line represents a row with two columns\n    [ [\"...\"], [\"...\"] ],     //This line represents another row with two columns\n    [ [\"...\"], [\"...\"] ]      //This line represents a third row with two columns\n  ]'\n  edit-mode                 //Is the editor in edit mode? Default is false which places the table in display mode. \n  filter                    //Allow table to toggle filtering? When a cell is toggled, only rows that have the same value as that cell will be shown. Default is no filter.\n  footer                    //Does the table use the last row as a footer? Default is false.\n  hide-accent-color           //Hide the accent color dropdown menu? Default is false which enables the menu which changes the accent-color property.\n  hide-bordered              //Hide the bordered toggle? Default is false so that a toggle button to control the bordered property.\n  hide-condensed             //Hide the condensed toggle? Default is false so that a toggle button to control the condensed property.\n  hide-dark-theme             //Hide the dark theme toggle? Default is false so that a toggle button to control the dark property.\n  hide-filter                //Hide the filter toggle? Default is false so that a toggle button to control the filter property.\n  hide-sort                  //Hide the sort toggle? Default is false so that a toggle button to control the sort property.\n  hide-scroll                //Hide the scroll toggle? Default is false so that a toggle button to control the scroll property.\n  hide-striped               //Hide the striped toggle? Default is false so that a toggle button to control the striped property.\n  row-header                //Does the table use the first column as a row header? Default is false.\n  scroll                    //Does the table use scrolling to fit when it is too wide?  Default is false: a responsive layout where only two columns are shown and a dropdown menu controls which column to display.\n  sort                      //Does the table allow sorting by column where column headers become sort buttons? Default is false.\n  striped                   //Does the table have alternating stipes of shading for its body rows? Default is false.\n  summary=\"...\">            //An accessible description of the table, what each row reporesents, and what each column represents.\n</editable-table>\n*/\nclass EditableTable extends displayBehaviors(editBehaviors(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          width: 100%;\n        }\n      </style>\n      <paper-tooltip for=\"button\" position=\"left\"\n        >Edit this table.</paper-tooltip\n      >\n      <template id=\"display\" is=\"dom-if\" if=\"[[!editMode]]\" restamp=\"true\">\n        <editable-table-display\n          accent-color\\$=\"[[accentColor]]\"\n          bordered\\$=\"[[bordered]]\"\n          caption\\$=\"[[caption]]\"\n          column-header\\$=\"[[columnHeader]]\"\n          dark\\$=\"[[dark]]\"\n          data\\$=\"[[data]]\"\n          condensed\\$=\"[[condensed]]\"\n          filter\\$=\"[[filter]]\"\n          footer\\$=\"[[footer]]\"\n          row-header\\$=\"[[rowHeader]]\"\n          scroll\\$=\"[[scroll]]\"\n          sort\\$=\"[[sort]]\"\n          striped\\$=\"[[striped]]\"\n          summary\\$=\"[[summary]]\"\n        >\n        </editable-table-display>\n      </template>\n      <template id=\"editor\" is=\"dom-if\" if=\"[[editMode]]\" restamp=\"true\">\n        <editable-table-editor\n          accent-color\\$=\"[[accentColor]]\"\n          bordered\\$=\"[[bordered]]\"\n          caption\\$=\"[[caption]]\"\n          column-header\\$=\"[[columnHeader]]\"\n          condensed\\$=\"[[condensed]]\"\n          dark\\$=\"[[dark]]\"\n          data\\$=\"[[data]]\"\n          filter\\$=\"[[filter]]\"\n          footer\\$=\"[[footer]]\"\n          hide-accent-color\\$=\"[[hideAccentColor]]\"\n          hide-dark-theme\\$=\"[[hideDarkTheme]]\"\n          hide-bordered\\$=\"[[hideBordered]]\"\n          hide-condensed\\$=\"[[hideCondensed]]\"\n          hide-filter\\$=\"[[hideFilter]]\"\n          hide-sort\\$=\"[[hideSort]]\"\n          hide-scroll\\$=\"[[hideScroll]]\"\n          hide-striped\\$=\"[[hideStriped]]\"\n          row-header\\$=\"[[rowHeader]]\"\n          scroll\\$=\"[[scroll]]\"\n          sort\\$=\"[[sort]]\"\n          striped\\$=\"[[striped]]\"\n          summary\\$=\"[[summary]]\"\n        >\n        </editable-table-editor>\n      </template>\n    `;\n  }\n\n  static get tag() {\n    return \"editable-table\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Is the table in edit-mode? Default is false (display mode).\n       */\n      editMode: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  /**\n   * Toggles between edit-mode and display mode.\n   */\n  toggleEditMode(edit) {\n    let temp;\n    edit = edit !== undefined ? edit : !this.editMode;\n    if (edit) {\n      this.shadowRoot.querySelector(\"editable-table-display\").toggleFilter();\n      this.shadowRoot.querySelector(\"editable-table-display\").sortData(false);\n      temp = this.shadowRoot.querySelector(\"editable-table-display\").getData();\n      console.log(temp);\n    } else {\n      temp = this.shadowRoot.querySelector(\"editable-table-editor\").getData();\n    }\n    for (var prop in temp) {\n      if (prop !== \"data\") {\n        this[prop] = temp[prop];\n      } else {\n        this.set(\"data\", temp[prop]);\n      }\n    }\n    this.editMode = edit;\n  }\n}\nwindow.customElements.define(EditableTable.tag, EditableTable);\nexport { EditableTable };\n"],"names":["displayBehaviors","SuperClass","accentColor","this","bordered","hideBordered","caption","columnHeader","condensed","hideCondensed","dark","hideDark","data","filter","hideFilter","footer","rowHeader","scroll","hideScroll","sort","hideSort","striped","hideStriped","summary","props","type","Boolean","value","String","reflectToAttribute","Array","Object","assign","cellBehaviors","index","numerals","split","results","_getLetter","reverse","label","i","length","place","Math","floor","letters","editBehaviors","hideAccentColor","hideDarkTheme","EditableTableEditorInsdel","PolymerElement","afterNextRender","addEventListener","_onTap","bind","removeEventListener","e","action","before","event","toLowerCase","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","html","Number","window","customElements","define","tag","EditableTableEditorRowcol","computed","EditableTableEditorToggle","_onChange","srcElement","$","button","prop","checked","disabled","tooltip","EditableTableEditorCell","_onValueChanged","cell","textarea","focus","column","row","_getLabel","caret","document","selection","sel","createRange","moveStart","text","shadowRoot","querySelector","selectionStart","start","end","createTextRange","range","collapse","moveEnd","select","setSelectionRange","selectionEnd","undefined","setCaretPosition","parentNode","direction","$_documentContainer","createElement","setAttribute","innerHTML","head","appendChild","EditableTableEditor","ResponsiveUtilityBehaviors","onclick","el","tagName","getElementsByTagName","console","log","children","_onCellMove","_onCellValueChange","_handleInsertRow","_handleInsertColumn","_handleDeleteRow","_handleDeleteColumn","_onTableSettingChange","_onAccentChange","deleteColumn","deleteRow","insertColumn","insertRow","dir","body","tbody","x","prototype","indexOf","call","y","setFocus","set","confirm","splice","temp","push","accentSelected","hideTableStyles","hideTableTheme","hideTableSort","EditableTableSort","_onSortTapped","mode","sortMode","__checked","columnNumber","sortColumn","sorting","EditableTableFilter","_onFilterTapped","filtered","EditableTableDisplay","ch","slice","__tfoot","filterColumn","_isNumeric","trim","isNaN","replace","col","numeric","selected","_updateCols","parseInt","setSortMode","sortData","table","removeAttribute","cols","querySelectorAll","setTimeout","cellIndex","filterText","tr","unshift","_changeSortMode","toggleFilter","_onColumnChange","editMode","hideEditMode","thead","EditableTable","edit","getData"],"mappings":"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"}