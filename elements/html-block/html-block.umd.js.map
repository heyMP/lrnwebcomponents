{"version":3,"file":"html-block.umd.js","sources":["html-block.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\n/**\n * `html-block`\n * `A basic HTML block that provides HAXschema wiring`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @demo demo/index.html\n */\nclass HtmlBlock extends HTMLElement {\n  \n  // render function\n  get html() {\n    return `\n<style></style>\n<slot></slot>`;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return {\n  \"canScale\": true,\n  \"canPosition\": true,\n  \"canEditSource\": false,\n  \"gizmo\": {\n    \"title\": \"Html block\",\n    \"description\": \"A basic HTML block that provides HAXschema wiring\",\n    \"icon\": \"icons:warning\",\n    \"color\": \"red\",\n    \"groups\": [\"Block\"],\n    \"handles\": [\n      {\n        \"type\": \"html\",\n        \"content\": \"slot\"\n      }\n    ],\n    \"meta\": {\n      \"author\": \"btopro\",\n      \"owner\": \"The Pennsylvania State University\"\n    }\n  },\n  \"settings\": {\n    \"quick\": [],\n    \"configure\": [\n      {\n        \"slot\": \"\",\n        \"title\": \"HTML\",\n        \"description\": \"HTML code you want to present in content\",\n        \"inputMethod\": \"code-editor\"\n      }\n    ],\n    \"advanced\": []\n  }\n}\n;\n  }\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"html-block\";\n  }\n  /**\n   * life cycle\n   */\n  constructor(delayRender = false) {\n    super();\n\n    // set tag for later use\n    this.tag = HtmlBlock.tag;\n    // map our imported properties json to real props on the element\n    // @notice static getter of properties is built via tooling\n    // to edit modify src/HtmlBlock-properties.json\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    this.HAXWiring = new HAXWiring();\n    this.HAXWiring.setup(HtmlBlock.haxProperties, HtmlBlock.tag, this);\n    // default we block all script unless the user says to do so\n    // @todo ensure HAX actually respects this down the road, right now it sanitizes it\n    this.allowscript = false;\n    this.__ignoreChange = false;\n    this.style.display = \"block\";\n    // ensure we keep applying sanitization as needed while monitoring the tree\n    this.__observer = new MutationObserver(this.render.bind(this));\n    this.__observer.observe(this, {\n      attributes: true,\n      characterData: true,\n      childList: true,\n      subtree: true\n    });\n  }\n  render() {\n    if (!this.__ignoreChange) {\n      if (\n        this.allowscript == null ||\n        !this.allowscript ||\n        typeof this.allowscript === typeof undefined\n      ) {\n        this.__sanitizeHTML();\n      }\n    } else {\n      this.__ignoreChange = false;\n    }\n  }\n\n  static get observedAttributes() {\n    return [\"allowscript\"];\n  }\n  get allowscript() {\n    return this.getAttribute(\"allowscript\");\n  }\n  set allowscript(value) {\n    if (value) {\n      this.setAttribute(\"allowscript\", \"allowscript\");\n    } else {\n      this.removeAttribute(\"allowscript\");\n    }\n  }\n  // disconnectedCallback() {}\n  attributeChangedCallback(attr, oldValue, newValue) {\n    if (attr === \"allowscript\") {\n      if (\n        newValue == null ||\n        !newValue ||\n        typeof newValue === typeof undefined\n      ) {\n        // we should sanitize innerHTML but create a holding pen for the rawHTML first\n        this.__sanitizeHTML();\n      } else {\n        // see if we had anything in the holding pen\n        if (this.__rawHTML) {\n          this.__ignoreChange = true;\n          this.innerHTML = this.__rawHTML;\n        }\n      }\n    }\n  }\n  __sanitizeHTML() {\n    if (!this.__pen) {\n      this.__pen = document.createElement(\"div\");\n    }\n    this.__pen.innerHTML = this.innerHTML;\n    this.__rawHTML = this.__pen.cloneNode(true).innerHTML;\n    // clear it up\n    if (typeof this.innerHTML === \"function\") {\n      this.innerHTML = this.innerHTML.replace(\n        /<script[\\s\\S]*?>/gi,\n        \"&lt;script&gt;\"\n      );\n      this.innerHTML = this.innerHTML.replace(\n        /<\\/script>/gi,\n        \"&lt;/script&gt;\"\n      );\n    }\n  }\n}\nwindow.customElements.define(HtmlBlock.tag, HtmlBlock);\nexport { HtmlBlock };\n"],"names":["HtmlBlock","tag","HTMLElement","HAXWiring","setup","haxProperties","this","allowscript","__ignoreChange","style","display","__observer","MutationObserver","render","bind","observe","attributes","characterData","childList","subtree","_typeof","__sanitizeHTML","attr","oldValue","newValue","__rawHTML","innerHTML","__pen","document","createElement","cloneNode","replace","getAttribute","value","setAttribute","removeAttribute","window","customElements","define"],"mappings":"ylEAeMA,yKAmEGC,IAAMD,EAAUC,oPAnEDC,qIAWb,WACG,eACG,iBACE,QACR,OACE,yBACM,yDACP,sBACC,aACC,CAAC,iBACA,CACT,MACU,eACG,cAGP,QACI,eACD,+CAGD,OACD,aACI,CACX,MACU,SACC,mBACM,uDACA,yBAGP,8CAOL,qCASA,qEAkBFC,UAAY,IAAIA,iBAChBA,UAAUC,MAAMJ,EAAUK,cAAeL,EAAUC,IAAKK,WAGxDC,aAAc,OACdC,gBAAiB,OACjBC,MAAMC,QAAU,aAEhBC,WAAa,IAAIC,iBAAiBN,KAAKO,OAAOC,KAAKR,YACnDK,WAAWI,QAAQT,KAAM,CAC5BU,YAAY,EACZC,eAAe,EACfC,WAAW,EACXC,SAAS,qCAINb,KAAKE,oBASHA,gBAAiB,EAPA,MAApBF,KAAKC,aACJD,KAAKC,2BACNa,EAAOd,KAAKC,mBAEPc,kEAqBcC,EAAMC,EAAUC,GAC1B,gBAATF,IAEY,MAAZE,GACCA,iBACDJ,EAAOI,GAMHlB,KAAKmB,iBACFjB,gBAAiB,OACjBkB,UAAYpB,KAAKmB,gBALnBJ,2DAWJf,KAAKqB,aACHA,MAAQC,SAASC,cAAc,aAEjCF,MAAMD,UAAYpB,KAAKoB,eACvBD,UAAYnB,KAAKqB,MAAMG,WAAU,GAAMJ,UAEd,mBAAnBpB,KAAKoB,iBACTA,UAAYpB,KAAKoB,UAAUK,QAC9B,qBACA,uBAEGL,UAAYpB,KAAKoB,UAAUK,QAC9B,eACA,+DA1CGzB,KAAK0B,aAAa,6BAEXC,GACVA,OACGC,aAAa,cAAe,oBAE5BC,gBAAgB,kEAThB,CAAC,wBAkDZC,OAAOC,eAAeC,OAAOtC,EAAUC,IAAKD"}