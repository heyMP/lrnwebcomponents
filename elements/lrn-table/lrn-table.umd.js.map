{"version":3,"file":"lrn-table.umd.js","sources":["lrn-table.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport { SchemaBehaviors } from \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\n\n/**\n * `lrn-table`\n * `Accessibly render a HTML table from a csv file`\n *\n * @microcopy - language worth noting:\n *  - CSV - Comma separated values\n *\n * @customElement\n * @polymer\n * @polymerLegacy\n * @demo demo/index.html\n */\nclass LrnTable extends SchemaBehaviors(PolymerElement) {\n  constructor() {\n    super();\n    import(\"@lrnwebcomponents/csv-render/csv-render.js\");\n  }\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n        .hidden-title {\n          display: none;\n        }\n      </style>\n      <div typeof=\"oer:SupportingMaterial\">\n        <div class=\"hidden-title\" property=\"oer:name\">[[title]]</div>\n        <div property=\"oer:description\">\n          <slot></slot>\n          <csv-render\n            data-source=\"[[csvFile]]\"\n            caption=\"[[title]]\"\n            summary=\"[[description]]\"\n          ></csv-render>\n        </div>\n      </div>\n    `;\n  }\n  static get tag() {\n    return \"lrn-table\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Title of this table. This is both for accessibility and presentation.\n       */\n      title: {\n        type: String\n      },\n      /**\n       * The file to load material from.\n       */\n      csvFile: {\n        type: String\n      },\n      /**\n       * An extended description of the material in the table for improved accessibility.\n       */\n      description: {\n        type: String\n      }\n    };\n  }\n  /**\n   * attached.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function() {\n      this.HAXWiring = new HAXWiring();\n      this.HAXWiring.setup(LrnTable.haxProperties, LrnTable.tag, this);\n    });\n  }\n  static get haxProperties() {\n    return {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"CSV table\",\n        description:\n          \"This can generate a table from a CSV file no matter where it is located.\",\n        icon: \"editor:border-all\",\n        color: \"green\",\n        groups: [\"Presentation\", \"Table\", \"Data\"],\n        handles: [\n          {\n            type: \"csv\",\n            source: \"csvFile\"\n          }\n        ],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"csvFile\",\n            title: \"Source\",\n            description: \"The URL for this csv file.\",\n            inputMethod: \"textfield\",\n            icon: \"link\",\n            required: true\n          },\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"Title for the table to be generated.\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"description\",\n            title: \"Description\",\n            description:\n              \"More detailed description for improved accessibility of the table data.\",\n            inputMethod: \"textfield\",\n            icon: \"editor:short-text\"\n          }\n        ],\n        configure: [\n          {\n            property: \"csvFile\",\n            title: \"Source\",\n            description: \"The URL for this csv file.\",\n            inputMethod: \"haxupload\",\n            required: true\n          },\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"Title for the table to be generated.\",\n            inputMethod: \"textfield\"\n          },\n          {\n            property: \"description\",\n            title: \"Description\",\n            description:\n              \"More detailed description for improved accessibility of the table data.\",\n            inputMethod: \"textfield\"\n          }\n        ],\n        advanced: []\n      }\n    };\n  }\n}\nwindow.customElements.define(LrnTable.tag, LrnTable);\nexport { LrnTable };\n"],"names":["LrnTable","SchemaBehaviors","PolymerElement","html","title","type","String","csvFile","description","canScale","canPosition","canEditSource","gizmo","icon","color","groups","handles","source","meta","author","settings","quick","property","inputMethod","required","configure","advanced","afterNextRender","this","HAXWiring","setup","haxProperties","tag","window","customElements","define"],"mappings":"+tEAqBMA,8KAGK,sSAHYC,kBAAgBC,gEAM5BC,8CAuBA,qDAGA,CAILC,MAAO,CACLC,KAAMC,QAKRC,QAAS,CACPF,KAAMC,QAKRE,YAAa,CACXH,KAAMC,qDAeH,CACLG,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLR,MAAO,YACPI,YACE,2EACFK,KAAM,oBACNC,MAAO,QACPC,OAAQ,CAAC,eAAgB,QAAS,QAClCC,QAAS,CACP,CACEX,KAAM,MACNY,OAAQ,YAGZC,KAAM,CACJC,OAAQ,qBAGZC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,UACVlB,MAAO,SACPI,YAAa,6BACbe,YAAa,YACbV,KAAM,OACNW,UAAU,GAEZ,CACEF,SAAU,QACVlB,MAAO,QACPI,YAAa,uCACbe,YAAa,YACbV,KAAM,gBAER,CACES,SAAU,cACVlB,MAAO,cACPI,YACE,0EACFe,YAAa,YACbV,KAAM,sBAGVY,UAAW,CACT,CACEH,SAAU,UACVlB,MAAO,SACPI,YAAa,6BACbe,YAAa,YACbC,UAAU,GAEZ,CACEF,SAAU,QACVlB,MAAO,QACPI,YAAa,uCACbe,YAAa,aAEf,CACED,SAAU,cACVlB,MAAO,cACPI,YACE,0EACFe,YAAa,cAGjBG,SAAU,4GA3EdC,kBAAgBC,KAAM,gBACfC,UAAY,IAAIA,iBAChBA,UAAUC,MAAM9B,EAAS+B,cAAe/B,EAASgC,IAAKJ,6CA8EjEK,OAAOC,eAAeC,OAAOnC,EAASgC,IAAKhC"}