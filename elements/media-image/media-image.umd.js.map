{"version":3,"file":"media-image.umd.js","sources":["media-image.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport { SchemaBehaviors } from \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\nimport {} from \"@polymer/polymer/lib/elements/dom-if.js\";\nimport { FlattenedNodesObserver } from \"@polymer/polymer/lib/utils/flattened-nodes-observer.js\";\nimport { dom } from '@polymer/polymer/lib/legacy/polymer.dom.js'\nimport \"@lrnwebcomponents/figure-label/figure-label.js\"\n\n/**\n * `media-image`\n * `A simple image presentaiton with minor documented options`\n * @demo demo/index.html\n */\nclass MediaImage extends SchemaBehaviors(PolymerElement) {\n  constructor() {\n    super();\n    import(\"@polymer/iron-image/iron-image.js\");\n    import(\"@polymer/iron-icons/iron-icons.js\");\n    afterNextRender(this, function() {\n      this.HAXWiring = new HAXWiring();\n      this.HAXWiring.setup(MediaImage.haxProperties, MediaImage.tag, this);\n    });\n  }\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          width: auto;\n          margin: auto;\n          --box-background-color: #f7f6ef;\n        }\n\n        :host([card]) {\n          box-shadow: 0 1px 5px rgba(0, 0, 0, 0.14);\n          padding: 20px;\n        }\n\n        :host([box]) {\n          background-color: var(--box-background-color);\n          padding: 20px;\n        }\n\n        :host([round]) iron-image {\n          border-radius: 50%;\n        }\n\n        @media screen and (min-width: 450px) {\n          :host([size=\"small\"]) {\n            max-width: 50%;\n          }\n        }\n\n        @media screen and (min-width: 650px) {\n          :host([size=\"small\"]) {\n            max-width: 35%;\n          }\n        }\n\n        @media screen and (min-width: 900px) {\n          :host([size=\"small\"]) {\n            max-width: 25%;\n          }\n        }\n\n        iron-image {\n          width: 100%;\n          --iron-image-width: 100%;\n        }\n\n        :host([offset=\"left\"]) {\n          float: left;\n          margin: var(--media-image-offset-width, 1.5vw);\n          margin-left: calc(-2 * var(--media-image-offset-width, 1.5vw));\n          margin-top: 0;\n          margin-bottom: calc(0.1 * var(--media-image-offset-width, 1.5vw));\n        }\n\n        :host([offset=\"right\"]) {\n          float: right;\n          margin: var(--media-image-offset-width, 1.5vw);\n          margin-right: calc(-2 * var(--media-image-offset-width, 1.5vw));\n          margin-top: 0;\n          margin-bottom: calc(0.1 * var(--media-image-offset-width, 1.5vw));\n        }\n\n        :host([offset=\"wide\"]) {\n          margin: 0 calc(-1 * var(--media-image-offset-wide-width, 3.5vw));\n          max-width: 100vw;\n        }\n\n        :host([offset=\"narrow\"]) {\n          max-width: var(--media-image-offset-narrow-max-width, 500px);\n          margin: auto;\n        }\n      </style>\n\n      <dom-if if=\"[[_hasFigureLabel(figureLabelTitle, figureLabelDescription)]]\">\n        <template>\n          <figure-label title=\"[[figureLabelTitle]]\" description=\"[[figureLabelDescription]]\">\n        </template>\n      </dom-if>\n\n      <iron-image\n        resource\\$=\"[[schemaResourceID]]-image\"\n        src\\$=\"[[source]]\"\n        alt\\$=\"[[alt]]\"\n      ></iron-image>\n\n\n      <media-image-citation>\n        <slot name=\"citation\">\n          [[citation]]\n        </slot>\n      </media-image-citation>\n\n      <dom-if if=\"[[_hasCaption]]\">\n        <template>\n          <media-image-caption>\n            <slot name=\"caption\">\n              [[caption]]\n            </slot>\n          </media-image-caption>\n        </template>\n      </dom-if>\n    `;\n  }\n  static get tag() {\n    return \"media-image\";\n  }\n  static get properties() {\n    let props = {\n      /**\n       * Image source.\n       */\n      source: {\n        type: String,\n        value: \"\"\n      },\n      /**\n       * Image citation.\n       */\n      citation: {\n        type: String,\n        value: \"\"\n      },\n      /**\n       * Image caption.\n       */\n      caption: {\n        type: String,\n        value: \"\"\n      },\n      /**\n       * Image alt.\n       */\n      alt: {\n        type: String,\n        value: \"\"\n      },\n      /**\n       * The size of the image (small, wide).\n       */\n      size: {\n        type: String,\n        value: \"wide\",\n        reflectToAttribute: true\n      },\n      /**\n       * The shape of the image (round).\n       */\n      round: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Applies card styling.\n       */\n      card: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Applies box styling.\n       */\n      box: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Applies left or right offset\n       * - none\n       * - left\n       * - right\n       * - wide\n       * - narrow\n       */\n      offset: {\n        type: String,\n        value: \"none\",\n        reflectToAttribute: true\n      },\n      figureLabelTitle: {\n        type: String,\n        value: ''\n      },\n      figureLabelDescription: {\n        type: String,\n        value: ''\n      }\n    };\n    if (super.properties) {\n      props = Object.assign(props, super.properties);\n    }\n    return props;\n  }\n\n  // Observe the name sub-property on the user object\n  // if the either of the figure label values are present then display\n  // the figure label\n  _hasFigureLabel(title, description) {\n    return (title.length > 0 || description.length > 0)\n  }\n\n  ready() {\n    super.ready()\n    this._observer = new FlattenedNodesObserver(this, (info) => {\n      this._hasCaption = (info.target.querySelector('[slot=\"caption\"]') !== null)\n    });\n  }\n  \n  disconnectedCallback() {\n    this._observer.disconnect();\n    super.disconnectedCallback()\n  }\n\n  static get haxProperties() {\n    return {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Styled image\",\n        descrption:\n          \"An image gizmo with the ability to provide simple, consistent styling and accessibility options.\",\n        icon: \"editor:insert-photo\",\n        color: \"indigo\",\n        groups: [\"Image\", \"Media\"],\n        handles: [\n          {\n            type: \"image\",\n            source: \"source\",\n            title: \"alt\",\n            alt: \"alt\",\n            citation: \"citation\",\n            caption: \"caption\"\n          }\n        ],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"source\",\n            title: \"Source\",\n            description: \"The URL for the image.\",\n            inputMethod: \"textfield\",\n            icon: \"link\",\n            required: true\n          },\n          {\n            property: \"alt\",\n            title: \"Alternative text\",\n            description: \"Text to describe the image to non-sighted users.\",\n            inputMethod: \"textfield\",\n            icon: \"accessibility\",\n            required: false\n          }\n        ],\n        configure: [\n          {\n            property: \"source\",\n            title: \"Source\",\n            description: \"The URL for the image.\",\n            inputMethod: \"haxupload\",\n            icon: \"link\",\n            required: true\n          },\n          {\n            property: \"alt\",\n            title: \"Alternative text\",\n            description: \"Text to describe the image to non-sighted users.\",\n            inputMethod: \"alt\",\n            icon: \"accessibility\",\n            required: true\n          },\n          {\n            property: \"round\",\n            title: \"Round image\",\n            description: \"Crops the image appearance to be circle in shape.\",\n            inputMethod: \"boolean\",\n            icon: \"account\",\n            required: false\n          },\n          {\n            property: \"card\",\n            title: \"Card\",\n            description:\n              \"Apply a drop shadow to give the appearance of being a raised card.\",\n            inputMethod: \"boolean\",\n            icon: \"check-box-outline-blank\",\n            required: false\n          },\n          {\n            property: \"box\",\n            title: \"Box\",\n            description: \"Apply a visual box around the image.\",\n            inputMethod: \"boolean\",\n            icon: \"image:crop-square\",\n            required: false\n          },\n          {\n            property: \"offset\",\n            title: \"Offset\",\n            description: \"Apply a left or right offset to the image.\",\n            inputMethod: \"select\",\n            icon: \"image:crop-square\",\n            options: {\n              none: \"none\",\n              left: \"left\",\n              right: \"right\",\n              wide: \"wide\",\n              narrow: \"narrow\"\n            }\n          },\n          {\n            property: \"citation\",\n            title: \"Citation\",\n            description: \"Citation for the image.\",\n            inputMethod: \"textfield\",\n            icon: \"text-format\",\n            required: false\n          },\n          {\n            property: \"caption\",\n            title: \"Caption\",\n            description: \"Caption for the image.\",\n            inputMethod: \"textfield\",\n            icon: \"text-format\",\n            required: false\n          },\n          {\n            property: \"figureLabelTitle\",\n            title: \"Figure Label Title\",\n            description: \"Title for the figure label.\",\n            inputMethod: \"textfield\",\n            icon: \"text-format\",\n            required: false\n          },\n          {\n            property: \"figureLabelDescription\",\n            title: \"Figure Label Description\",\n            description: \"Description for the figure label.\",\n            inputMethod: \"textfield\",\n            icon: \"text-format\",\n            required: false\n          }\n        ]\n      }\n    };\n  }\n}\nwindow.customElements.define(MediaImage.tag, MediaImage);\n\n/**\n * `media-image-citation`\n * `A simple image presentaiton with minor documented options`\n * @demo demo/index.html\n */\nclass MediaImageCitation extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        .citation {\n          font-size: 12.8px;\n          font-style: italic;\n          color: #4c4c4c;\n          margin: 15px 0 15px;\n        }\n      </style>\n      <div class=\"citation\"><slot></slot></div>\n    `;\n  }\n  static get tag() {\n    return \"media-image-citation\";\n  }\n}\nwindow.customElements.define(MediaImageCitation.tag, MediaImageCitation);\n\n/**\n * `media-image-caption`\n * `A simple image presentaiton with minor documented options`\n * @demo demo/index.html\n */\nclass MediaImageCaption extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        .caption {\n          padding-bottom: 25px;\n          border-bottom: dashed 2px lightgray;\n          margin-bottom: 25px;\n          line-height: 1.5;\n          font-size: 18px;\n        }\n\n        ::slotted(*) {\n          margin-top: 0;\n        }\n        ::slotted(*:last-child) {\n          margin-bottom: 0;\n        }\n      </style>\n      <div class=\"caption\" hidden$=\"[[!__hasContent]]\">\n        <slot id=\"slot\"></slot>\n      </div>\n    `;\n  }\n  static get tag() {\n    return \"media-image-caption\";\n  }\n}\nwindow.customElements.define(MediaImageCaption.tag, MediaImageCaption);\n\nexport { MediaImage };\n"],"names":["MediaImage","afterNextRender","HAXWiring","setup","haxProperties","tag","this","SchemaBehaviors","PolymerElement","title","description","length","_observer","FlattenedNodesObserver","info","_this2","_hasCaption","target","querySelector","disconnect","html","props","source","type","String","value","citation","caption","alt","size","reflectToAttribute","round","Boolean","card","box","offset","figureLabelTitle","figureLabelDescription","Object","assign","canScale","canPosition","canEditSource","gizmo","descrption","icon","color","groups","handles","meta","author","settings","quick","property","inputMethod","required","configure","options","none","left","right","wide","narrow","window","customElements","define","MediaImageCitation","MediaImageCaption"],"mappings":"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"}